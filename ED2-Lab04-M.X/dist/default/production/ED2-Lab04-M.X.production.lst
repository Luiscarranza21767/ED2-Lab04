

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 10 00:12:59 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2
    45                           	psect	text35,local,class=CODE,merge=1,delta=2
    46                           	psect	text36,local,class=CODE,merge=1,delta=2
    47                           	psect	text37,local,class=CODE,merge=1,delta=2
    48                           	psect	text38,local,class=CODE,merge=1,delta=2
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52     0000                     
    53                           ; Version 2.40
    54                           ; Generated 17/11/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F887 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88     0000                     	;# 
    89     0001                     	;# 
    90     0002                     	;# 
    91     0003                     	;# 
    92     0004                     	;# 
    93     0005                     	;# 
    94     0006                     	;# 
    95     0007                     	;# 
    96     0008                     	;# 
    97     0009                     	;# 
    98     000A                     	;# 
    99     000B                     	;# 
   100     000C                     	;# 
   101     000D                     	;# 
   102     000E                     	;# 
   103     000E                     	;# 
   104     000F                     	;# 
   105     0010                     	;# 
   106     0011                     	;# 
   107     0012                     	;# 
   108     0013                     	;# 
   109     0014                     	;# 
   110     0015                     	;# 
   111     0015                     	;# 
   112     0016                     	;# 
   113     0017                     	;# 
   114     0018                     	;# 
   115     0019                     	;# 
   116     001A                     	;# 
   117     001B                     	;# 
   118     001B                     	;# 
   119     001C                     	;# 
   120     001D                     	;# 
   121     001E                     	;# 
   122     001F                     	;# 
   123     0081                     	;# 
   124     0085                     	;# 
   125     0086                     	;# 
   126     0087                     	;# 
   127     0088                     	;# 
   128     0089                     	;# 
   129     008C                     	;# 
   130     008D                     	;# 
   131     008E                     	;# 
   132     008F                     	;# 
   133     0090                     	;# 
   134     0091                     	;# 
   135     0092                     	;# 
   136     0093                     	;# 
   137     0093                     	;# 
   138     0093                     	;# 
   139     0094                     	;# 
   140     0095                     	;# 
   141     0096                     	;# 
   142     0097                     	;# 
   143     0098                     	;# 
   144     0099                     	;# 
   145     009A                     	;# 
   146     009B                     	;# 
   147     009C                     	;# 
   148     009D                     	;# 
   149     009E                     	;# 
   150     009F                     	;# 
   151     0105                     	;# 
   152     0107                     	;# 
   153     0108                     	;# 
   154     0109                     	;# 
   155     010C                     	;# 
   156     010C                     	;# 
   157     010D                     	;# 
   158     010E                     	;# 
   159     010F                     	;# 
   160     0185                     	;# 
   161     0187                     	;# 
   162     0188                     	;# 
   163     0189                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0000                     	;# 
   167     0001                     	;# 
   168     0002                     	;# 
   169     0003                     	;# 
   170     0004                     	;# 
   171     0005                     	;# 
   172     0006                     	;# 
   173     0007                     	;# 
   174     0008                     	;# 
   175     0009                     	;# 
   176     000A                     	;# 
   177     000B                     	;# 
   178     000C                     	;# 
   179     000D                     	;# 
   180     000E                     	;# 
   181     000E                     	;# 
   182     000F                     	;# 
   183     0010                     	;# 
   184     0011                     	;# 
   185     0012                     	;# 
   186     0013                     	;# 
   187     0014                     	;# 
   188     0015                     	;# 
   189     0015                     	;# 
   190     0016                     	;# 
   191     0017                     	;# 
   192     0018                     	;# 
   193     0019                     	;# 
   194     001A                     	;# 
   195     001B                     	;# 
   196     001B                     	;# 
   197     001C                     	;# 
   198     001D                     	;# 
   199     001E                     	;# 
   200     001F                     	;# 
   201     0081                     	;# 
   202     0085                     	;# 
   203     0086                     	;# 
   204     0087                     	;# 
   205     0088                     	;# 
   206     0089                     	;# 
   207     008C                     	;# 
   208     008D                     	;# 
   209     008E                     	;# 
   210     008F                     	;# 
   211     0090                     	;# 
   212     0091                     	;# 
   213     0092                     	;# 
   214     0093                     	;# 
   215     0093                     	;# 
   216     0093                     	;# 
   217     0094                     	;# 
   218     0095                     	;# 
   219     0096                     	;# 
   220     0097                     	;# 
   221     0098                     	;# 
   222     0099                     	;# 
   223     009A                     	;# 
   224     009B                     	;# 
   225     009C                     	;# 
   226     009D                     	;# 
   227     009E                     	;# 
   228     009F                     	;# 
   229     0105                     	;# 
   230     0107                     	;# 
   231     0108                     	;# 
   232     0109                     	;# 
   233     010C                     	;# 
   234     010C                     	;# 
   235     010D                     	;# 
   236     010E                     	;# 
   237     010F                     	;# 
   238     0185                     	;# 
   239     0187                     	;# 
   240     0188                     	;# 
   241     0189                     	;# 
   242     018C                     	;# 
   243     018D                     	;# 
   244     0000                     	;# 
   245     0001                     	;# 
   246     0002                     	;# 
   247     0003                     	;# 
   248     0004                     	;# 
   249     0005                     	;# 
   250     0006                     	;# 
   251     0007                     	;# 
   252     0008                     	;# 
   253     0009                     	;# 
   254     000A                     	;# 
   255     000B                     	;# 
   256     000C                     	;# 
   257     000D                     	;# 
   258     000E                     	;# 
   259     000E                     	;# 
   260     000F                     	;# 
   261     0010                     	;# 
   262     0011                     	;# 
   263     0012                     	;# 
   264     0013                     	;# 
   265     0014                     	;# 
   266     0015                     	;# 
   267     0015                     	;# 
   268     0016                     	;# 
   269     0017                     	;# 
   270     0018                     	;# 
   271     0019                     	;# 
   272     001A                     	;# 
   273     001B                     	;# 
   274     001B                     	;# 
   275     001C                     	;# 
   276     001D                     	;# 
   277     001E                     	;# 
   278     001F                     	;# 
   279     0081                     	;# 
   280     0085                     	;# 
   281     0086                     	;# 
   282     0087                     	;# 
   283     0088                     	;# 
   284     0089                     	;# 
   285     008C                     	;# 
   286     008D                     	;# 
   287     008E                     	;# 
   288     008F                     	;# 
   289     0090                     	;# 
   290     0091                     	;# 
   291     0092                     	;# 
   292     0093                     	;# 
   293     0093                     	;# 
   294     0093                     	;# 
   295     0094                     	;# 
   296     0095                     	;# 
   297     0096                     	;# 
   298     0097                     	;# 
   299     0098                     	;# 
   300     0099                     	;# 
   301     009A                     	;# 
   302     009B                     	;# 
   303     009C                     	;# 
   304     009D                     	;# 
   305     009E                     	;# 
   306     009F                     	;# 
   307     0105                     	;# 
   308     0107                     	;# 
   309     0108                     	;# 
   310     0109                     	;# 
   311     010C                     	;# 
   312     010C                     	;# 
   313     010D                     	;# 
   314     010E                     	;# 
   315     010F                     	;# 
   316     0185                     	;# 
   317     0187                     	;# 
   318     0188                     	;# 
   319     0189                     	;# 
   320     018C                     	;# 
   321     018D                     	;# 
   322     0000                     	;# 
   323     0001                     	;# 
   324     0002                     	;# 
   325     0003                     	;# 
   326     0004                     	;# 
   327     0005                     	;# 
   328     0006                     	;# 
   329     0007                     	;# 
   330     0008                     	;# 
   331     0009                     	;# 
   332     000A                     	;# 
   333     000B                     	;# 
   334     000C                     	;# 
   335     000D                     	;# 
   336     000E                     	;# 
   337     000E                     	;# 
   338     000F                     	;# 
   339     0010                     	;# 
   340     0011                     	;# 
   341     0012                     	;# 
   342     0013                     	;# 
   343     0014                     	;# 
   344     0015                     	;# 
   345     0015                     	;# 
   346     0016                     	;# 
   347     0017                     	;# 
   348     0018                     	;# 
   349     0019                     	;# 
   350     001A                     	;# 
   351     001B                     	;# 
   352     001B                     	;# 
   353     001C                     	;# 
   354     001D                     	;# 
   355     001E                     	;# 
   356     001F                     	;# 
   357     0081                     	;# 
   358     0085                     	;# 
   359     0086                     	;# 
   360     0087                     	;# 
   361     0088                     	;# 
   362     0089                     	;# 
   363     008C                     	;# 
   364     008D                     	;# 
   365     008E                     	;# 
   366     008F                     	;# 
   367     0090                     	;# 
   368     0091                     	;# 
   369     0092                     	;# 
   370     0093                     	;# 
   371     0093                     	;# 
   372     0093                     	;# 
   373     0094                     	;# 
   374     0095                     	;# 
   375     0096                     	;# 
   376     0097                     	;# 
   377     0098                     	;# 
   378     0099                     	;# 
   379     009A                     	;# 
   380     009B                     	;# 
   381     009C                     	;# 
   382     009D                     	;# 
   383     009E                     	;# 
   384     009F                     	;# 
   385     0105                     	;# 
   386     0107                     	;# 
   387     0108                     	;# 
   388     0109                     	;# 
   389     010C                     	;# 
   390     010C                     	;# 
   391     010D                     	;# 
   392     010E                     	;# 
   393     010F                     	;# 
   394     0185                     	;# 
   395     0187                     	;# 
   396     0188                     	;# 
   397     0189                     	;# 
   398     018C                     	;# 
   399     018D                     	;# 
   400     0000                     	;# 
   401     0001                     	;# 
   402     0002                     	;# 
   403     0003                     	;# 
   404     0004                     	;# 
   405     0005                     	;# 
   406     0006                     	;# 
   407     0007                     	;# 
   408     0008                     	;# 
   409     0009                     	;# 
   410     000A                     	;# 
   411     000B                     	;# 
   412     000C                     	;# 
   413     000D                     	;# 
   414     000E                     	;# 
   415     000E                     	;# 
   416     000F                     	;# 
   417     0010                     	;# 
   418     0011                     	;# 
   419     0012                     	;# 
   420     0013                     	;# 
   421     0014                     	;# 
   422     0015                     	;# 
   423     0015                     	;# 
   424     0016                     	;# 
   425     0017                     	;# 
   426     0018                     	;# 
   427     0019                     	;# 
   428     001A                     	;# 
   429     001B                     	;# 
   430     001B                     	;# 
   431     001C                     	;# 
   432     001D                     	;# 
   433     001E                     	;# 
   434     001F                     	;# 
   435     0081                     	;# 
   436     0085                     	;# 
   437     0086                     	;# 
   438     0087                     	;# 
   439     0088                     	;# 
   440     0089                     	;# 
   441     008C                     	;# 
   442     008D                     	;# 
   443     008E                     	;# 
   444     008F                     	;# 
   445     0090                     	;# 
   446     0091                     	;# 
   447     0092                     	;# 
   448     0093                     	;# 
   449     0093                     	;# 
   450     0093                     	;# 
   451     0094                     	;# 
   452     0095                     	;# 
   453     0096                     	;# 
   454     0097                     	;# 
   455     0098                     	;# 
   456     0099                     	;# 
   457     009A                     	;# 
   458     009B                     	;# 
   459     009C                     	;# 
   460     009D                     	;# 
   461     009E                     	;# 
   462     009F                     	;# 
   463     0105                     	;# 
   464     0107                     	;# 
   465     0108                     	;# 
   466     0109                     	;# 
   467     010C                     	;# 
   468     010C                     	;# 
   469     010D                     	;# 
   470     010E                     	;# 
   471     010F                     	;# 
   472     0185                     	;# 
   473     0187                     	;# 
   474     0188                     	;# 
   475     0189                     	;# 
   476     018C                     	;# 
   477     018D                     	;# 
   478     0000                     	;# 
   479     0001                     	;# 
   480     0002                     	;# 
   481     0003                     	;# 
   482     0004                     	;# 
   483     0005                     	;# 
   484     0006                     	;# 
   485     0007                     	;# 
   486     0008                     	;# 
   487     0009                     	;# 
   488     000A                     	;# 
   489     000B                     	;# 
   490     000C                     	;# 
   491     000D                     	;# 
   492     000E                     	;# 
   493     000E                     	;# 
   494     000F                     	;# 
   495     0010                     	;# 
   496     0011                     	;# 
   497     0012                     	;# 
   498     0013                     	;# 
   499     0014                     	;# 
   500     0015                     	;# 
   501     0015                     	;# 
   502     0016                     	;# 
   503     0017                     	;# 
   504     0018                     	;# 
   505     0019                     	;# 
   506     001A                     	;# 
   507     001B                     	;# 
   508     001B                     	;# 
   509     001C                     	;# 
   510     001D                     	;# 
   511     001E                     	;# 
   512     001F                     	;# 
   513     0081                     	;# 
   514     0085                     	;# 
   515     0086                     	;# 
   516     0087                     	;# 
   517     0088                     	;# 
   518     0089                     	;# 
   519     008C                     	;# 
   520     008D                     	;# 
   521     008E                     	;# 
   522     008F                     	;# 
   523     0090                     	;# 
   524     0091                     	;# 
   525     0092                     	;# 
   526     0093                     	;# 
   527     0093                     	;# 
   528     0093                     	;# 
   529     0094                     	;# 
   530     0095                     	;# 
   531     0096                     	;# 
   532     0097                     	;# 
   533     0098                     	;# 
   534     0099                     	;# 
   535     009A                     	;# 
   536     009B                     	;# 
   537     009C                     	;# 
   538     009D                     	;# 
   539     009E                     	;# 
   540     009F                     	;# 
   541     0105                     	;# 
   542     0107                     	;# 
   543     0108                     	;# 
   544     0109                     	;# 
   545     010C                     	;# 
   546     010C                     	;# 
   547     010D                     	;# 
   548     010E                     	;# 
   549     010F                     	;# 
   550     0185                     	;# 
   551     0187                     	;# 
   552     0188                     	;# 
   553     0189                     	;# 
   554     018C                     	;# 
   555     018D                     	;# 
   556                           
   557                           	psect	strings
   558     1000                     __pstrings:
   559     1000                     stringtab:
   560     1000                     __stringtab:
   561                           
   562                           ;	String table - string pointers are 1 byte each
   563     1000  1BFF               	btfsc	btemp+1,7
   564     1001  280A               	ljmp	stringcode
   565     1002  1383               	bcf	3,7
   566     1003  187F               	btfsc	btemp+1,0
   567     1004  1783               	bsf	3,7
   568     1005  0800               	movf	0,w
   569     1006  0A84               	incf	4,f
   570     1007  1903               	skipnz
   571     1008  0AFF               	incf	btemp+1,f
   572     1009  0008               	return
   573     100A                     stringcode:
   574     100A                     stringdir:
   575     100A  3010               	movlw	high stringdir
   576     100B  008A               	movwf	10
   577     100C  0804               	movf	4,w
   578     100D  0A84               	incf	4,f
   579     100E  0782               	addwf	2,f
   580     100F                     __stringbase:
   581     100F  3400               	retlw	0
   582     1010                     __end_of__stringtab:
   583     1010                     __powers_:
   584     1010  3400               	retlw	0
   585     1011  3400               	retlw	0
   586     1012  3480               	retlw	128
   587     1013  343F               	retlw	63
   588     1014  3400               	retlw	0
   589     1015  3400               	retlw	0
   590     1016  3420               	retlw	32
   591     1017  3441               	retlw	65
   592     1018  3400               	retlw	0
   593     1019  3400               	retlw	0
   594     101A  34C8               	retlw	200
   595     101B  3442               	retlw	66
   596     101C  3400               	retlw	0
   597     101D  3400               	retlw	0
   598     101E  347A               	retlw	122
   599     101F  3444               	retlw	68
   600     1020  3400               	retlw	0
   601     1021  3440               	retlw	64
   602     1022  341C               	retlw	28
   603     1023  3446               	retlw	70
   604     1024  3400               	retlw	0
   605     1025  3450               	retlw	80
   606     1026  34C3               	retlw	195
   607     1027  3447               	retlw	71
   608     1028  3400               	retlw	0
   609     1029  3424               	retlw	36
   610     102A  3474               	retlw	116
   611     102B  3449               	retlw	73
   612     102C  3480               	retlw	128
   613     102D  3496               	retlw	150
   614     102E  3418               	retlw	24
   615     102F  344B               	retlw	75
   616     1030  3420               	retlw	32
   617     1031  34BC               	retlw	188
   618     1032  34BE               	retlw	190
   619     1033  344C               	retlw	76
   620     1034  3428               	retlw	40
   621     1035  346B               	retlw	107
   622     1036  346E               	retlw	110
   623     1037  344E               	retlw	78
   624     1038  34F9               	retlw	249
   625     1039  3402               	retlw	2
   626     103A  3415               	retlw	21
   627     103B  3450               	retlw	80
   628     103C  34EC               	retlw	236
   629     103D  3478               	retlw	120
   630     103E  34AD               	retlw	173
   631     103F  3460               	retlw	96
   632     1040  34CA               	retlw	202
   633     1041  34F2               	retlw	242
   634     1042  3449               	retlw	73
   635     1043  3471               	retlw	113
   636     1044                     __end_of__powers_:
   637     1044                     __npowers_:
   638     1044  3400               	retlw	0
   639     1045  3400               	retlw	0
   640     1046  3480               	retlw	128
   641     1047  343F               	retlw	63
   642     1048  34CD               	retlw	205
   643     1049  34CC               	retlw	204
   644     104A  34CC               	retlw	204
   645     104B  343D               	retlw	61
   646     104C  340A               	retlw	10
   647     104D  34D7               	retlw	215
   648     104E  3423               	retlw	35
   649     104F  343C               	retlw	60
   650     1050  346F               	retlw	111
   651     1051  3412               	retlw	18
   652     1052  3483               	retlw	131
   653     1053  343A               	retlw	58
   654     1054  3417               	retlw	23
   655     1055  34B7               	retlw	183
   656     1056  34D1               	retlw	209
   657     1057  3438               	retlw	56
   658     1058  34AC               	retlw	172
   659     1059  34C5               	retlw	197
   660     105A  3427               	retlw	39
   661     105B  3437               	retlw	55
   662     105C  34BD               	retlw	189
   663     105D  3437               	retlw	55
   664     105E  3486               	retlw	134
   665     105F  3435               	retlw	53
   666     1060  3495               	retlw	149
   667     1061  34BF               	retlw	191
   668     1062  34D6               	retlw	214
   669     1063  3433               	retlw	51
   670     1064  3477               	retlw	119
   671     1065  34CC               	retlw	204
   672     1066  342B               	retlw	43
   673     1067  3432               	retlw	50
   674     1068  345F               	retlw	95
   675     1069  3470               	retlw	112
   676     106A  3489               	retlw	137
   677     106B  3430               	retlw	48
   678     106C  34FF               	retlw	255
   679     106D  34E6               	retlw	230
   680     106E  34DB               	retlw	219
   681     106F  342E               	retlw	46
   682     1070  3408               	retlw	8
   683     1071  34E5               	retlw	229
   684     1072  343C               	retlw	60
   685     1073  341E               	retlw	30
   686     1074  3460               	retlw	96
   687     1075  3442               	retlw	66
   688     1076  34A2               	retlw	162
   689     1077  340D               	retlw	13
   690     1078                     __end_of__npowers_:
   691     1078                     _dpowers:
   692     1078  3401               	retlw	1
   693     1079  3400               	retlw	0
   694     107A  3400               	retlw	0
   695     107B  3400               	retlw	0
   696     107C  340A               	retlw	10
   697     107D  3400               	retlw	0
   698     107E  3400               	retlw	0
   699     107F  3400               	retlw	0
   700     1080  3464               	retlw	100
   701     1081  3400               	retlw	0
   702     1082  3400               	retlw	0
   703     1083  3400               	retlw	0
   704     1084  34E8               	retlw	232
   705     1085  3403               	retlw	3
   706     1086  3400               	retlw	0
   707     1087  3400               	retlw	0
   708     1088  3410               	retlw	16
   709     1089  3427               	retlw	39
   710     108A  3400               	retlw	0
   711     108B  3400               	retlw	0
   712     108C  34A0               	retlw	160
   713     108D  3486               	retlw	134
   714     108E  3401               	retlw	1
   715     108F  3400               	retlw	0
   716     1090  3440               	retlw	64
   717     1091  3442               	retlw	66
   718     1092  340F               	retlw	15
   719     1093  3400               	retlw	0
   720     1094  3480               	retlw	128
   721     1095  3496               	retlw	150
   722     1096  3498               	retlw	152
   723     1097  3400               	retlw	0
   724     1098  3400               	retlw	0
   725     1099  34E1               	retlw	225
   726     109A  34F5               	retlw	245
   727     109B  3405               	retlw	5
   728     109C  3400               	retlw	0
   729     109D  34CA               	retlw	202
   730     109E  349A               	retlw	154
   731     109F  343B               	retlw	59
   732     10A0                     __end_of_dpowers:
   733     0013                     _SSPBUF	set	19
   734     0014                     _SSPCON	set	20
   735     0008                     _PORTDbits	set	8
   736     0006                     _PORTB	set	6
   737     0008                     _PORTD	set	8
   738     0005                     _PORTA	set	5
   739     0063                     _SSPIF	set	99
   740     005E                     _PEIE	set	94
   741     005F                     _GIE	set	95
   742     0043                     _RD3	set	67
   743     0047                     _RD7	set	71
   744     0046                     _RD6	set	70
   745     0045                     _RD5	set	69
   746     0044                     _RD4	set	68
   747     0091                     _SSPCON2bits	set	145
   748     0087                     _TRISCbits	set	135
   749     0094                     _SSPSTAT	set	148
   750     0093                     _SSPADD	set	147
   751     0091                     _SSPCON2	set	145
   752     008F                     _OSCCONbits	set	143
   753     0086                     _TRISB	set	134
   754     0088                     _TRISD	set	136
   755     0085                     _TRISA	set	133
   756     0463                     _SSPIE	set	1123
   757     043C                     _TRISC4	set	1084
   758     043B                     _TRISC3	set	1083
   759     0189                     _ANSELH	set	393
   760     0188                     _ANSEL	set	392
   761     10A0                     STR_1:
   762     10A0  3453               	retlw	83	;'S'
   763     10A1  3431               	retlw	49	;'1'
   764     10A2  343A               	retlw	58	;':'
   765     10A3  3420               	retlw	32	;' '
   766     10A4  3400               	retlw	0
   767     10A5                     STR_2:
   768     10A5  3425               	retlw	37	;'%'
   769     10A6  342E               	retlw	46	;'.'
   770     10A7  3432               	retlw	50	;'2'
   771     10A8  3466               	retlw	102	;'f'
   772     10A9  3400               	retlw	0
   773                           
   774                           	psect	cinit
   775     07F2                     start_initialization:	
   776                           ; #config settings
   777                           
   778     07F2                     __initialization:
   779                           
   780                           ; Clear objects allocated to BANK1
   781     07F2  1683               	bsf	3,5	;RP0=1, select bank1
   782     07F3  1303               	bcf	3,6	;RP1=0, select bank1
   783     07F4  01C7               	clrf	__pbssBANK1& (0+127)
   784     07F5  01C8               	clrf	(__pbssBANK1+1)& (0+127)
   785     07F6  01C9               	clrf	(__pbssBANK1+2)& (0+127)
   786     07F7  01CA               	clrf	(__pbssBANK1+3)& (0+127)
   787     07F8  01CB               	clrf	(__pbssBANK1+4)& (0+127)
   788     07F9  01CC               	clrf	(__pbssBANK1+5)& (0+127)
   789     07FA  01CD               	clrf	(__pbssBANK1+6)& (0+127)
   790     07FB  01CE               	clrf	(__pbssBANK1+7)& (0+127)
   791     07FC                     end_of_initialization:	
   792                           ;End of C runtime variable initialization code
   793                           
   794     07FC                     __end_of__initialization:
   795     07FC  0183               	clrf	3
   796     07FD  120A  118A  28DC   	ljmp	_main	;jump to C main() function
   797                           
   798                           	psect	bssBANK1
   799     00C7                     __pbssBANK1:
   800     00C7                     _conver:
   801     00C7                     	ds	4
   802     00CB                     _lecADC:
   803     00CB                     	ds	1
   804     00CC                     _valADC:
   805     00CC                     	ds	3
   806                           
   807                           	psect	cstackBANK1
   808     00A0                     __pcstackBANK1:
   809     00A0                     ?_sprintf:
   810     00A0                     sprintf@f:	
   811                           ; 2 bytes @ 0x0
   812                           
   813                           
   814                           ; 1 bytes @ 0x0
   815     00A0                     	ds	5
   816     00A5                     ??_sprintf:
   817                           
   818                           ; 1 bytes @ 0x5
   819     00A5                     	ds	5
   820     00AA                     _sprintf$1018:
   821                           
   822                           ; 4 bytes @ 0xA
   823     00AA                     	ds	4
   824     00AE                     sprintf@ap:
   825                           
   826                           ; 1 bytes @ 0xE
   827     00AE                     	ds	1
   828     00AF                     sprintf@flag:
   829                           
   830                           ; 2 bytes @ 0xF
   831     00AF                     	ds	2
   832     00B1                     sprintf@val:
   833                           
   834                           ; 4 bytes @ 0x11
   835     00B1                     	ds	4
   836     00B5                     sprintf@eexp:
   837                           
   838                           ; 2 bytes @ 0x15
   839     00B5                     	ds	2
   840     00B7                     sprintf@tmpval:
   841                           
   842                           ; 4 bytes @ 0x17
   843     00B7                     	ds	4
   844     00BB                     sprintf@sp:
   845                           
   846                           ; 1 bytes @ 0x1B
   847     00BB                     	ds	1
   848     00BC                     sprintf@prec:
   849                           
   850                           ; 2 bytes @ 0x1C
   851     00BC                     	ds	2
   852     00BE                     sprintf@fval:
   853                           
   854                           ; 4 bytes @ 0x1E
   855     00BE                     	ds	4
   856     00C2                     sprintf@c:
   857                           
   858                           ; 1 bytes @ 0x22
   859     00C2                     	ds	1
   860     00C3                     ??_main:
   861                           
   862                           ; 1 bytes @ 0x23
   863     00C3                     	ds	4
   864                           
   865                           	psect	cstackCOMMON
   866     0070                     __pcstackCOMMON:
   867     0070                     ?_isdigit:
   868     0070                     ?___fleq:	
   869                           ; 1 bit 
   870                           
   871     0070                     ?___flge:	
   872                           ; 1 bit 
   873                           
   874     0070                     ?_setupINTOSC:	
   875                           ; 1 bit 
   876                           
   877     0070                     ??_setupINTOSC:	
   878                           ; 1 bytes @ 0x0
   879                           
   880     0070                     ?_portsetup:	
   881                           ; 1 bytes @ 0x0
   882                           
   883     0070                     ?_Lcd_Init:	
   884                           ; 1 bytes @ 0x0
   885                           
   886     0070                     ?_Lcd_Clear:	
   887                           ; 1 bytes @ 0x0
   888                           
   889     0070                     ?_I2C_Master_Start:	
   890                           ; 1 bytes @ 0x0
   891                           
   892     0070                     ??_I2C_Master_Start:	
   893                           ; 1 bytes @ 0x0
   894                           
   895     0070                     ?_I2C_Master_Write:	
   896                           ; 1 bytes @ 0x0
   897                           
   898     0070                     ?_I2C_Master_Stop:	
   899                           ; 1 bytes @ 0x0
   900                           
   901     0070                     ??_I2C_Master_Stop:	
   902                           ; 1 bytes @ 0x0
   903                           
   904     0070                     ??_isdigit:	
   905                           ; 1 bytes @ 0x0
   906                           
   907     0070                     ?_main:	
   908                           ; 1 bytes @ 0x0
   909                           
   910     0070                     ?_Lcd_Port:	
   911                           ; 1 bytes @ 0x0
   912                           
   913     0070                     ??_Lcd_Port:	
   914                           ; 1 bytes @ 0x0
   915                           
   916     0070                     ?_Lcd_Cmd:	
   917                           ; 1 bytes @ 0x0
   918                           
   919     0070                     ?_Lcd_Write_Char:	
   920                           ; 1 bytes @ 0x0
   921                           
   922     0070                     ?_I2C_Master_Wait:	
   923                           ; 1 bytes @ 0x0
   924                           
   925     0070                     ??_I2C_Master_Wait:	
   926                           ; 1 bytes @ 0x0
   927                           
   928     0070                     ?_I2C_Master_Read:	
   929                           ; 1 bytes @ 0x0
   930                           
   931     0070                     ?__Umul8_16:	
   932                           ; 2 bytes @ 0x0
   933                           
   934     0070                     ?___wmul:	
   935                           ; 2 bytes @ 0x0
   936                           
   937     0070                     ?___awmod:	
   938                           ; 2 bytes @ 0x0
   939                           
   940     0070                     ?___lwmod:	
   941                           ; 2 bytes @ 0x0
   942                           
   943     0070                     ?__tdiv_to_l_:	
   944                           ; 2 bytes @ 0x0
   945                           
   946     0070                     ?__div_to_l_:	
   947                           ; 4 bytes @ 0x0
   948                           
   949     0070                     ?___lldiv:	
   950                           ; 4 bytes @ 0x0
   951                           
   952     0070                     ?___flneg:	
   953                           ; 4 bytes @ 0x0
   954                           
   955     0070                     ?___llmod:	
   956                           ; 4 bytes @ 0x0
   957                           
   958     0070                     ?___xxtofl:	
   959                           ; 4 bytes @ 0x0
   960                           
   961     0070                     Lcd_Port@a:	
   962                           ; 4 bytes @ 0x0
   963                           
   964     0070                     setupINTOSC@IRCF:	
   965                           ; 1 bytes @ 0x0
   966                           
   967     0070                     __Umul8_16@multiplicand:	
   968                           ; 1 bytes @ 0x0
   969                           
   970     0070                     _isdigit$815:	
   971                           ; 1 bytes @ 0x0
   972                           
   973     0070                     I2C_Master_Write@d:	
   974                           ; 1 bytes @ 0x0
   975                           
   976     0070                     I2C_Master_Read@a:	
   977                           ; 2 bytes @ 0x0
   978                           
   979     0070                     ___wmul@multiplier:	
   980                           ; 2 bytes @ 0x0
   981                           
   982     0070                     ___awmod@divisor:	
   983                           ; 2 bytes @ 0x0
   984                           
   985     0070                     ___lwmod@divisor:	
   986                           ; 2 bytes @ 0x0
   987                           
   988     0070                     ___lldiv@divisor:	
   989                           ; 2 bytes @ 0x0
   990                           
   991     0070                     __div_to_l_@f1:	
   992                           ; 4 bytes @ 0x0
   993                           
   994     0070                     ___fleq@ff1:	
   995                           ; 4 bytes @ 0x0
   996                           
   997     0070                     ___flge@ff1:	
   998                           ; 4 bytes @ 0x0
   999                           
  1000     0070                     ___flneg@f1:	
  1001                           ; 4 bytes @ 0x0
  1002                           
  1003     0070                     __tdiv_to_l_@f1:	
  1004                           ; 4 bytes @ 0x0
  1005                           
  1006     0070                     ___llmod@divisor:	
  1007                           ; 4 bytes @ 0x0
  1008                           
  1009     0070                     ___xxtofl@val:	
  1010                           ; 4 bytes @ 0x0
  1011                           
  1012                           
  1013                           ; 4 bytes @ 0x0
  1014     0070                     	ds	1
  1015     0071                     ??_Lcd_Cmd:
  1016     0071                     ??_Lcd_Write_Char:	
  1017                           ; 1 bytes @ 0x1
  1018                           
  1019     0071                     isdigit@c:	
  1020                           ; 1 bytes @ 0x1
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0x1
  1024     0071                     	ds	1
  1025     0072                     ??_I2C_Master_Write:
  1026     0072                     ??_I2C_Master_Read:	
  1027                           ; 1 bytes @ 0x2
  1028                           
  1029     0072                     ??__Umul8_16:	
  1030                           ; 1 bytes @ 0x2
  1031                           
  1032     0072                     Lcd_Write_Char@temp:	
  1033                           ; 1 bytes @ 0x2
  1034                           
  1035     0072                     ___wmul@multiplicand:	
  1036                           ; 1 bytes @ 0x2
  1037                           
  1038     0072                     ___awmod@dividend:	
  1039                           ; 2 bytes @ 0x2
  1040                           
  1041     0072                     ___lwmod@dividend:	
  1042                           ; 2 bytes @ 0x2
  1043                           
  1044                           
  1045                           ; 2 bytes @ 0x2
  1046     0072                     	ds	1
  1047     0073                     Lcd_Cmd@a:
  1048     0073                     Lcd_Write_Char@y:	
  1049                           ; 1 bytes @ 0x3
  1050                           
  1051                           
  1052                           ; 1 bytes @ 0x3
  1053     0073                     	ds	1
  1054     0074                     ??_Lcd_Init:
  1055     0074                     ??_Lcd_Clear:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058     0074                     ?_Lcd_Set_Cursor:	
  1059                           ; 1 bytes @ 0x4
  1060                           
  1061     0074                     ??___wmul:	
  1062                           ; 1 bytes @ 0x4
  1063                           
  1064     0074                     ??___awmod:	
  1065                           ; 1 bytes @ 0x4
  1066                           
  1067     0074                     ??___flneg:	
  1068                           ; 1 bytes @ 0x4
  1069                           
  1070     0074                     ??___lwmod:	
  1071                           ; 1 bytes @ 0x4
  1072                           
  1073     0074                     ??___xxtofl:	
  1074                           ; 1 bytes @ 0x4
  1075                           
  1076     0074                     Lcd_Set_Cursor@b:	
  1077                           ; 1 bytes @ 0x4
  1078                           
  1079     0074                     Lcd_Write_Char@a:	
  1080                           ; 1 bytes @ 0x4
  1081                           
  1082     0074                     I2C_Master_Read@temp:	
  1083                           ; 1 bytes @ 0x4
  1084                           
  1085     0074                     ___wmul@product:	
  1086                           ; 2 bytes @ 0x4
  1087                           
  1088     0074                     __Umul8_16@product:	
  1089                           ; 2 bytes @ 0x4
  1090                           
  1091     0074                     ___lldiv@dividend:	
  1092                           ; 2 bytes @ 0x4
  1093                           
  1094     0074                     __div_to_l_@f2:	
  1095                           ; 4 bytes @ 0x4
  1096                           
  1097     0074                     ___fleq@ff2:	
  1098                           ; 4 bytes @ 0x4
  1099                           
  1100     0074                     ___flge@ff2:	
  1101                           ; 4 bytes @ 0x4
  1102                           
  1103     0074                     __tdiv_to_l_@f2:	
  1104                           ; 4 bytes @ 0x4
  1105                           
  1106     0074                     ___llmod@dividend:	
  1107                           ; 4 bytes @ 0x4
  1108                           
  1109                           
  1110                           ; 4 bytes @ 0x4
  1111     0074                     	ds	1
  1112     0075                     ??_Lcd_Set_Cursor:
  1113     0075                     ?_Lcd_Write_String:	
  1114                           ; 1 bytes @ 0x5
  1115                           
  1116     0075                     ___awmod@counter:	
  1117                           ; 1 bytes @ 0x5
  1118                           
  1119     0075                     ___lwmod@counter:	
  1120                           ; 1 bytes @ 0x5
  1121                           
  1122     0075                     Lcd_Write_String@a:	
  1123                           ; 1 bytes @ 0x5
  1124                           
  1125                           
  1126                           ; 2 bytes @ 0x5
  1127     0075                     	ds	1
  1128     0076                     ?___lwdiv:
  1129     0076                     Lcd_Set_Cursor@a:	
  1130                           ; 2 bytes @ 0x6
  1131                           
  1132     0076                     ___awmod@sign:	
  1133                           ; 1 bytes @ 0x6
  1134                           
  1135     0076                     ___lwdiv@divisor:	
  1136                           ; 1 bytes @ 0x6
  1137                           
  1138     0076                     __Umul8_16@word_mpld:	
  1139                           ; 2 bytes @ 0x6
  1140                           
  1141                           
  1142                           ; 2 bytes @ 0x6
  1143     0076                     	ds	1
  1144     0077                     ??_Lcd_Write_String:
  1145     0077                     ?___awdiv:	
  1146                           ; 1 bytes @ 0x7
  1147                           
  1148     0077                     Lcd_Set_Cursor@z:	
  1149                           ; 2 bytes @ 0x7
  1150                           
  1151     0077                     ___awdiv@divisor:	
  1152                           ; 1 bytes @ 0x7
  1153                           
  1154                           
  1155                           ; 2 bytes @ 0x7
  1156     0077                     	ds	1
  1157     0078                     ??__tdiv_to_l_:
  1158     0078                     ??__div_to_l_:	
  1159                           ; 1 bytes @ 0x8
  1160                           
  1161     0078                     ??___lldiv:	
  1162                           ; 1 bytes @ 0x8
  1163                           
  1164     0078                     ??___fleq:	
  1165                           ; 1 bytes @ 0x8
  1166                           
  1167     0078                     ??___flge:	
  1168                           ; 1 bytes @ 0x8
  1169                           
  1170     0078                     ??___llmod:	
  1171                           ; 1 bytes @ 0x8
  1172                           
  1173     0078                     Lcd_Set_Cursor@y:	
  1174                           ; 1 bytes @ 0x8
  1175                           
  1176     0078                     __Umul8_16@multiplier:	
  1177                           ; 1 bytes @ 0x8
  1178                           
  1179     0078                     ___xxtofl@sign:	
  1180                           ; 1 bytes @ 0x8
  1181                           
  1182     0078                     ___lwdiv@dividend:	
  1183                           ; 1 bytes @ 0x8
  1184                           
  1185                           
  1186                           ; 2 bytes @ 0x8
  1187     0078                     	ds	1
  1188     0079                     Lcd_Set_Cursor@temp:
  1189     0079                     ___llmod@counter:	
  1190                           ; 1 bytes @ 0x9
  1191                           
  1192     0079                     ___xxtofl@exp:	
  1193                           ; 1 bytes @ 0x9
  1194                           
  1195     0079                     ___awdiv@dividend:	
  1196                           ; 1 bytes @ 0x9
  1197                           
  1198     0079                     ___lldiv@quotient:	
  1199                           ; 2 bytes @ 0x9
  1200                           
  1201                           
  1202                           ; 4 bytes @ 0x9
  1203     0079                     	ds	1
  1204     007A                     ??___lwdiv:
  1205     007A                     Lcd_Write_String@i:	
  1206                           ; 1 bytes @ 0xA
  1207                           
  1208     007A                     ___xxtofl@arg:	
  1209                           ; 2 bytes @ 0xA
  1210                           
  1211                           
  1212                           ; 4 bytes @ 0xA
  1213     007A                     	ds	1
  1214     007B                     ??___awdiv:
  1215     007B                     ___lwdiv@quotient:	
  1216                           ; 1 bytes @ 0xB
  1217                           
  1218                           
  1219                           ; 2 bytes @ 0xB
  1220     007B                     	ds	2
  1221     007D                     ___lldiv@counter:
  1222     007D                     ___lwdiv@counter:	
  1223                           ; 1 bytes @ 0xD
  1224                           
  1225                           
  1226                           ; 1 bytes @ 0xD
  1227     007D                     	ds	1
  1228     007E                     ??_portsetup:
  1229     007E                     ??___flsub:	
  1230                           ; 1 bytes @ 0xE
  1231                           
  1232                           
  1233                           	psect	cstackBANK0
  1234     0020                     __pcstackBANK0:	
  1235                           ; 1 bytes @ 0xE
  1236                           
  1237     0020                     ?_I2C_Master_Init:
  1238     0020                     ___awdiv@counter:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241     0020                     I2C_Master_Init@c:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244     0020                     __div_to_l_@quot:	
  1245                           ; 4 bytes @ 0x0
  1246                           
  1247     0020                     __tdiv_to_l_@quot:	
  1248                           ; 4 bytes @ 0x0
  1249                           
  1250                           
  1251                           ; 4 bytes @ 0x0
  1252     0020                     	ds	1
  1253     0021                     ___awdiv@sign:
  1254                           
  1255                           ; 1 bytes @ 0x1
  1256     0021                     	ds	1
  1257     0022                     ___awdiv@quotient:
  1258                           
  1259                           ; 2 bytes @ 0x2
  1260     0022                     	ds	2
  1261     0024                     ??_I2C_Master_Init:
  1262     0024                     ?___flmul:	
  1263                           ; 1 bytes @ 0x4
  1264                           
  1265     0024                     __div_to_l_@cntr:	
  1266                           ; 4 bytes @ 0x4
  1267                           
  1268     0024                     __tdiv_to_l_@cntr:	
  1269                           ; 1 bytes @ 0x4
  1270                           
  1271     0024                     ___flmul@b:	
  1272                           ; 1 bytes @ 0x4
  1273                           
  1274                           
  1275                           ; 4 bytes @ 0x4
  1276     0024                     	ds	1
  1277     0025                     __div_to_l_@exp1:
  1278     0025                     __tdiv_to_l_@exp1:	
  1279                           ; 1 bytes @ 0x5
  1280                           
  1281                           
  1282                           ; 1 bytes @ 0x5
  1283     0025                     	ds	3
  1284     0028                     ___flmul@a:
  1285                           
  1286                           ; 4 bytes @ 0x8
  1287     0028                     	ds	4
  1288     002C                     ??___flmul:
  1289                           
  1290                           ; 1 bytes @ 0xC
  1291     002C                     	ds	5
  1292     0031                     ___flmul@sign:
  1293                           
  1294                           ; 1 bytes @ 0x11
  1295     0031                     	ds	1
  1296     0032                     ___flmul@grs:
  1297                           
  1298                           ; 4 bytes @ 0x12
  1299     0032                     	ds	4
  1300     0036                     ___flmul@aexp:
  1301                           
  1302                           ; 1 bytes @ 0x16
  1303     0036                     	ds	1
  1304     0037                     ___flmul@bexp:
  1305                           
  1306                           ; 1 bytes @ 0x17
  1307     0037                     	ds	1
  1308     0038                     ___flmul@prod:
  1309                           
  1310                           ; 4 bytes @ 0x18
  1311     0038                     	ds	4
  1312     003C                     ___flmul@temp:
  1313                           
  1314                           ; 2 bytes @ 0x1C
  1315     003C                     	ds	2
  1316     003E                     ?_fround:
  1317     003E                     ?_scale:	
  1318                           ; 4 bytes @ 0x1E
  1319                           
  1320     003E                     ?___fldiv:	
  1321                           ; 4 bytes @ 0x1E
  1322                           
  1323     003E                     ___fldiv@a:	
  1324                           ; 4 bytes @ 0x1E
  1325                           
  1326                           
  1327                           ; 4 bytes @ 0x1E
  1328     003E                     	ds	4
  1329     0042                     ??_fround:
  1330     0042                     ??_scale:	
  1331                           ; 1 bytes @ 0x22
  1332                           
  1333     0042                     ___fldiv@b:	
  1334                           ; 1 bytes @ 0x22
  1335                           
  1336                           
  1337                           ; 4 bytes @ 0x22
  1338     0042                     	ds	4
  1339     0046                     ??___fldiv:
  1340                           
  1341                           ; 1 bytes @ 0x26
  1342     0046                     	ds	3
  1343     0049                     _fround$1016:
  1344                           
  1345                           ; 4 bytes @ 0x29
  1346     0049                     	ds	2
  1347     004B                     ___fldiv@rem:
  1348                           
  1349                           ; 4 bytes @ 0x2B
  1350     004B                     	ds	1
  1351     004C                     _scale$1017:
  1352                           
  1353                           ; 4 bytes @ 0x2C
  1354     004C                     	ds	1
  1355     004D                     _fround$1015:
  1356                           
  1357                           ; 4 bytes @ 0x2D
  1358     004D                     	ds	2
  1359     004F                     ___fldiv@sign:
  1360                           
  1361                           ; 1 bytes @ 0x2F
  1362     004F                     	ds	1
  1363     0050                     scale@scl:
  1364     0050                     ___fldiv@new_exp:	
  1365                           ; 1 bytes @ 0x30
  1366                           
  1367                           
  1368                           ; 2 bytes @ 0x30
  1369     0050                     	ds	1
  1370     0051                     ?___fltol:
  1371     0051                     fround@prec:	
  1372                           ; 4 bytes @ 0x31
  1373                           
  1374     0051                     ___fltol@f1:	
  1375                           ; 1 bytes @ 0x31
  1376                           
  1377                           
  1378                           ; 4 bytes @ 0x31
  1379     0051                     	ds	1
  1380     0052                     ?___fladd:
  1381     0052                     ___fladd@b:	
  1382                           ; 4 bytes @ 0x32
  1383                           
  1384     0052                     ___fldiv@grs:	
  1385                           ; 4 bytes @ 0x32
  1386                           
  1387                           
  1388                           ; 4 bytes @ 0x32
  1389     0052                     	ds	3
  1390     0055                     ??___fltol:
  1391                           
  1392                           ; 1 bytes @ 0x35
  1393     0055                     	ds	1
  1394     0056                     ___fldiv@bexp:
  1395     0056                     ___fladd@a:	
  1396                           ; 1 bytes @ 0x36
  1397                           
  1398                           
  1399                           ; 4 bytes @ 0x36
  1400     0056                     	ds	1
  1401     0057                     ___fldiv@aexp:
  1402                           
  1403                           ; 1 bytes @ 0x37
  1404     0057                     	ds	2
  1405     0059                     ___fltol@sign1:
  1406                           
  1407                           ; 1 bytes @ 0x39
  1408     0059                     	ds	1
  1409     005A                     ??___fladd:
  1410     005A                     ___fltol@exp1:	
  1411                           ; 1 bytes @ 0x3A
  1412                           
  1413                           
  1414                           ; 1 bytes @ 0x3A
  1415     005A                     	ds	8
  1416     0062                     ___fladd@signs:
  1417                           
  1418                           ; 1 bytes @ 0x42
  1419     0062                     	ds	1
  1420     0063                     ___fladd@aexp:
  1421                           
  1422                           ; 1 bytes @ 0x43
  1423     0063                     	ds	1
  1424     0064                     ___fladd@bexp:
  1425                           
  1426                           ; 1 bytes @ 0x44
  1427     0064                     	ds	1
  1428     0065                     ___fladd@grs:
  1429                           
  1430                           ; 1 bytes @ 0x45
  1431     0065                     	ds	1
  1432     0066                     ?___flsub:
  1433     0066                     ___flsub@a:	
  1434                           ; 4 bytes @ 0x46
  1435                           
  1436                           
  1437                           ; 4 bytes @ 0x46
  1438     0066                     	ds	4
  1439     006A                     ___flsub@b:
  1440                           
  1441                           ; 4 bytes @ 0x4A
  1442     006A                     	ds	4
  1443                           
  1444                           	psect	maintext
  1445     00DC                     __pmaintext:	
  1446 ;;
  1447 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1448 ;;
  1449 ;; *************** function _main *****************
  1450 ;; Defined at:
  1451 ;;		line 54 in file "main.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : B00/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1465 ;;      Params:         0       0       0       0       0
  1466 ;;      Locals:         0       0       0       0       0
  1467 ;;      Temps:          0       0       4       0       0
  1468 ;;      Totals:         0       0       4       0       0
  1469 ;;Total ram usage:        4 bytes
  1470 ;; Hardware stack levels required when called: 4
  1471 ;; This function calls:
  1472 ;;		_I2C_Master_Read
  1473 ;;		_I2C_Master_Start
  1474 ;;		_I2C_Master_Stop
  1475 ;;		_I2C_Master_Write
  1476 ;;		_Lcd_Clear
  1477 ;;		_Lcd_Init
  1478 ;;		_Lcd_Set_Cursor
  1479 ;;		_Lcd_Write_String
  1480 ;;		___fldiv
  1481 ;;		___flmul
  1482 ;;		___xxtofl
  1483 ;;		_portsetup
  1484 ;;		_setupINTOSC
  1485 ;;		_sprintf
  1486 ;; This function is called by:
  1487 ;;		Startup code after reset
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491     00DC                     _main:	
  1492                           ;psect for function _main
  1493                           
  1494     00DC                     l3890:	
  1495                           ;incstack = 0
  1496                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1497                           
  1498                           
  1499                           ;main.c: 55:     setupINTOSC(7);
  1500     00DC  3007               	movlw	7
  1501     00DD  160A  158A  26C3  120A  118A  	fcall	_setupINTOSC
  1502                           
  1503                           ;main.c: 56:     portsetup();
  1504     00E2  160A  158A  2338  120A  118A  	fcall	_portsetup
  1505                           
  1506                           ;main.c: 57:     Lcd_Init();
  1507     00E7  160A  158A  2666  120A  118A  	fcall	_Lcd_Init
  1508                           
  1509                           ;main.c: 58:     Lcd_Clear();
  1510     00EC  160A  158A  22F7  120A  118A  	fcall	_Lcd_Clear
  1511                           
  1512                           ;main.c: 59:     Lcd_Set_Cursor(1,2);
  1513     00F1  3002               	movlw	2
  1514     00F2  00F4               	movwf	Lcd_Set_Cursor@b
  1515     00F3  3001               	movlw	1
  1516     00F4  160A  158A  2525  120A  118A  	fcall	_Lcd_Set_Cursor
  1517     00F9                     l3892:
  1518                           
  1519                           ;main.c: 60:     Lcd_Write_String("S1: ");
  1520     00F9  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1521     00FA  00F5               	movwf	Lcd_Write_String@a
  1522     00FB  3080               	movlw	128
  1523     00FC  00F6               	movwf	Lcd_Write_String@a+1
  1524     00FD  160A  158A  249F  120A  118A  	fcall	_Lcd_Write_String
  1525     0102                     l3894:
  1526                           
  1527                           ;main.c: 64:         I2C_Master_Start();
  1528     0102  160A  158A  22C3  120A  118A  	fcall	_I2C_Master_Start
  1529     0107                     l3896:
  1530                           
  1531                           ;main.c: 65:         I2C_Master_Write(0x11);
  1532     0107  3011               	movlw	17
  1533     0108  00F0               	movwf	I2C_Master_Write@d
  1534     0109  3000               	movlw	0
  1535     010A  00F1               	movwf	I2C_Master_Write@d+1
  1536     010B  160A  158A  22D5  120A  118A  	fcall	_I2C_Master_Write
  1537     0110                     l3898:
  1538                           
  1539                           ;main.c: 66:         lecADC = I2C_Master_Read(0);
  1540     0110  3000               	movlw	0
  1541     0111  00F0               	movwf	I2C_Master_Read@a
  1542     0112  00F1               	movwf	I2C_Master_Read@a+1
  1543     0113  160A  158A  23CC  120A  118A  	fcall	_I2C_Master_Read
  1544     0118  0870               	movf	?_I2C_Master_Read,w
  1545     0119  1683               	bsf	3,5	;RP0=1, select bank1
  1546     011A  1303               	bcf	3,6	;RP1=0, select bank1
  1547     011B  00CB               	movwf	_lecADC^(0+128)
  1548     011C                     l3900:
  1549                           
  1550                           ;main.c: 67:         I2C_Master_Stop();
  1551     011C  160A  158A  22CC  120A  118A  	fcall	_I2C_Master_Stop
  1552     0121                     l3902:
  1553                           
  1554                           ;main.c: 68:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1555     0121  3003               	movlw	3
  1556     0122  1683               	bsf	3,5	;RP0=1, select bank1
  1557     0123  1303               	bcf	3,6	;RP1=0, select bank1
  1558     0124  00C5               	movwf	(??_main^(0+128)+2)
  1559     0125  3008               	movlw	8
  1560     0126  00C4               	movwf	(??_main^(0+128)+1)
  1561     0127  3076               	movlw	118
  1562     0128  00C3               	movwf	??_main^(0+128)
  1563     0129                     u6477:
  1564     0129  0BC3               	decfsz	??_main^(0+128),f
  1565     012A  2929               	goto	u6477
  1566     012B  0BC4               	decfsz	(??_main^(0+128)+1),f
  1567     012C  2929               	goto	u6477
  1568     012D  0BC5               	decfsz	(??_main^(0+128)+2),f
  1569     012E  2929               	goto	u6477
  1570     012F  0000               	nop
  1571     0130                     l3904:
  1572                           
  1573                           ;main.c: 70:         conver = (lecADC*5.0)/255;
  1574     0130  3043               	movlw	67
  1575     0131  1283               	bcf	3,5	;RP0=0, select bank0
  1576     0132  1303               	bcf	3,6	;RP1=0, select bank0
  1577     0133  00C1               	movwf	___fldiv@a+3
  1578     0134  307F               	movlw	127
  1579     0135  00C0               	movwf	___fldiv@a+2
  1580     0136  3000               	movlw	0
  1581     0137  00BF               	movwf	___fldiv@a+1
  1582     0138  3000               	movlw	0
  1583     0139  00BE               	movwf	___fldiv@a
  1584     013A  3040               	movlw	64
  1585     013B  00A7               	movwf	___flmul@b+3
  1586     013C  30A0               	movlw	160
  1587     013D  00A6               	movwf	___flmul@b+2
  1588     013E  3000               	movlw	0
  1589     013F  00A5               	movwf	___flmul@b+1
  1590     0140  3000               	movlw	0
  1591     0141  00A4               	movwf	___flmul@b
  1592     0142  1683               	bsf	3,5	;RP0=1, select bank1
  1593     0143  1303               	bcf	3,6	;RP1=0, select bank1
  1594     0144  084B               	movf	_lecADC^(0+128),w
  1595     0145  00C3               	movwf	??_main^(0+128)
  1596     0146  01C4               	clrf	(??_main^(0+128)+1)
  1597     0147  01C5               	clrf	(??_main^(0+128)+2)
  1598     0148  01C6               	clrf	(??_main^(0+128)+3)
  1599     0149  0846               	movf	(??_main+3)^(0+128),w
  1600     014A  00F3               	movwf	___xxtofl@val+3
  1601     014B  0845               	movf	(??_main+2)^(0+128),w
  1602     014C  00F2               	movwf	___xxtofl@val+2
  1603     014D  0844               	movf	(??_main+1)^(0+128),w
  1604     014E  00F1               	movwf	___xxtofl@val+1
  1605     014F  0843               	movf	??_main^(0+128),w
  1606     0150  00F0               	movwf	___xxtofl@val
  1607     0151  3001               	movlw	1
  1608     0152  120A  158A  20A4  120A  118A  	fcall	___xxtofl
  1609     0157  0873               	movf	?___xxtofl+3,w
  1610     0158  1283               	bcf	3,5	;RP0=0, select bank0
  1611     0159  1303               	bcf	3,6	;RP1=0, select bank0
  1612     015A  00AB               	movwf	___flmul@a+3
  1613     015B  0872               	movf	?___xxtofl+2,w
  1614     015C  00AA               	movwf	___flmul@a+2
  1615     015D  0871               	movf	?___xxtofl+1,w
  1616     015E  00A9               	movwf	___flmul@a+1
  1617     015F  0870               	movf	?___xxtofl,w
  1618     0160  00A8               	movwf	___flmul@a
  1619     0161  120A  158A  215C  120A  118A  	fcall	___flmul
  1620     0166  1283               	bcf	3,5	;RP0=0, select bank0
  1621     0167  1303               	bcf	3,6	;RP1=0, select bank0
  1622     0168  0827               	movf	?___flmul+3,w
  1623     0169  00C5               	movwf	___fldiv@b+3
  1624     016A  0826               	movf	?___flmul+2,w
  1625     016B  00C4               	movwf	___fldiv@b+2
  1626     016C  0825               	movf	?___flmul+1,w
  1627     016D  00C3               	movwf	___fldiv@b+1
  1628     016E  0824               	movf	?___flmul,w
  1629     016F  00C2               	movwf	___fldiv@b
  1630     0170  160A  118A  21CA  120A  118A  	fcall	___fldiv
  1631     0175  1283               	bcf	3,5	;RP0=0, select bank0
  1632     0176  1303               	bcf	3,6	;RP1=0, select bank0
  1633     0177  0841               	movf	?___fldiv+3,w
  1634     0178  1683               	bsf	3,5	;RP0=1, select bank1
  1635     0179  1303               	bcf	3,6	;RP1=0, select bank1
  1636     017A  00CA               	movwf	(_conver+3)^(0+128)
  1637     017B  1283               	bcf	3,5	;RP0=0, select bank0
  1638     017C  1303               	bcf	3,6	;RP1=0, select bank0
  1639     017D  0840               	movf	?___fldiv+2,w
  1640     017E  1683               	bsf	3,5	;RP0=1, select bank1
  1641     017F  1303               	bcf	3,6	;RP1=0, select bank1
  1642     0180  00C9               	movwf	(_conver+2)^(0+128)
  1643     0181  1283               	bcf	3,5	;RP0=0, select bank0
  1644     0182  1303               	bcf	3,6	;RP1=0, select bank0
  1645     0183  083F               	movf	?___fldiv+1,w
  1646     0184  1683               	bsf	3,5	;RP0=1, select bank1
  1647     0185  1303               	bcf	3,6	;RP1=0, select bank1
  1648     0186  00C8               	movwf	(_conver+1)^(0+128)
  1649     0187  1283               	bcf	3,5	;RP0=0, select bank0
  1650     0188  1303               	bcf	3,6	;RP1=0, select bank0
  1651     0189  083E               	movf	?___fldiv,w
  1652     018A  1683               	bsf	3,5	;RP0=1, select bank1
  1653     018B  1303               	bcf	3,6	;RP1=0, select bank1
  1654     018C  00C7               	movwf	_conver^(0+128)
  1655     018D                     l3906:
  1656                           
  1657                           ;main.c: 71:         sprintf(valADC, "%.2f", conver);
  1658     018D  3096               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1659     018E  00A0               	movwf	sprintf@f^(0+128)
  1660     018F  084A               	movf	(_conver+3)^(0+128),w
  1661     0190  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1662     0191  0849               	movf	(_conver+2)^(0+128),w
  1663     0192  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1664     0193  0848               	movf	(_conver+1)^(0+128),w
  1665     0194  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1666     0195  0847               	movf	_conver^(0+128),w
  1667     0196  00A1               	movwf	(?_sprintf^(0+128)+1)
  1668     0197  30CC               	movlw	(low (_valADC| 0))& (0+255)
  1669     0198  120A  118A  21B2  120A  118A  	fcall	_sprintf
  1670     019D                     l3908:
  1671                           
  1672                           ;main.c: 72:         Lcd_Set_Cursor(2,1);
  1673     019D  01F4               	clrf	Lcd_Set_Cursor@b
  1674     019E  0AF4               	incf	Lcd_Set_Cursor@b,f
  1675     019F  3002               	movlw	2
  1676     01A0  160A  158A  2525  120A  118A  	fcall	_Lcd_Set_Cursor
  1677     01A5                     l3910:
  1678                           
  1679                           ;main.c: 73:         Lcd_Write_String(valADC);
  1680     01A5  30CC               	movlw	(low (_valADC| 0))& (0+255)
  1681     01A6  00F5               	movwf	Lcd_Write_String@a
  1682     01A7  3000               	movlw	0
  1683     01A8  00F6               	movwf	Lcd_Write_String@a+1
  1684     01A9  160A  158A  249F  120A  118A  	fcall	_Lcd_Write_String
  1685     01AE  2902               	goto	l3894
  1686     01AF  120A  118A  2800   	ljmp	start
  1687     01B2                     __end_of_main:
  1688                           
  1689                           	psect	text1
  1690     01B2                     __ptext1:	
  1691 ;; *************** function _sprintf *****************
  1692 ;; Defined at:
  1693 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  sp              1    wreg     PTR unsigned char 
  1696 ;;		 -> valADC(3), 
  1697 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1698 ;;		 -> STR_2(5), 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1701 ;;		 -> valADC(3), 
  1702 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1703 ;;  tmpval          4   23[BANK1 ] struct .
  1704 ;;  val             4   17[BANK1 ] unsigned long 
  1705 ;;  prec            2   28[BANK1 ] int 
  1706 ;;  eexp            2   21[BANK1 ] int 
  1707 ;;  flag            2   15[BANK1 ] unsigned short 
  1708 ;;  cp              2    0        PTR const unsigned char 
  1709 ;;  len             2    0        unsigned int 
  1710 ;;  width           2    0        int 
  1711 ;;  c               1   34[BANK1 ] unsigned char 
  1712 ;;  ap              1   14[BANK1 ] PTR void [1]
  1713 ;;		 -> ?_sprintf(2), 
  1714 ;;  d               1    0        unsigned char 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  2    0[BANK1 ] int 
  1717 ;; Registers used:
  1718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1724 ;;      Params:         0       0       5       0       0
  1725 ;;      Locals:         0       0      25       0       0
  1726 ;;      Temps:          0       0       5       0       0
  1727 ;;      Totals:         0       0      35       0       0
  1728 ;;Total ram usage:       35 bytes
  1729 ;; Hardware stack levels used: 1
  1730 ;; Hardware stack levels required when called: 3
  1731 ;; This function calls:
  1732 ;;		___awdiv
  1733 ;;		___fladd
  1734 ;;		___fleq
  1735 ;;		___flge
  1736 ;;		___flmul
  1737 ;;		___flneg
  1738 ;;		___flsub
  1739 ;;		___fltol
  1740 ;;		___lldiv
  1741 ;;		___llmod
  1742 ;;		___wmul
  1743 ;;		___xxtofl
  1744 ;;		__div_to_l_
  1745 ;;		__tdiv_to_l_
  1746 ;;		_fround
  1747 ;;		_isdigit
  1748 ;;		_scale
  1749 ;; This function is called by:
  1750 ;;		_main
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754     01B2                     _sprintf:	
  1755                           ;psect for function _sprintf
  1756                           
  1757                           
  1758                           ;incstack = 0
  1759                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1760                           ;sprintf@sp stored from wreg
  1761     01B2  1683               	bsf	3,5	;RP0=1, select bank1
  1762     01B3  1303               	bcf	3,6	;RP1=0, select bank1
  1763     01B4  00BB               	movwf	sprintf@sp^(0+128)
  1764     01B5                     l3542:
  1765                           
  1766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1767     01B5  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1768     01B6  00AE               	movwf	sprintf@ap^(0+128)
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1771     01B7  2FDD               	goto	l3736
  1772     01B8                     l3544:
  1773                           
  1774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1775     01B8  3025               	movlw	37
  1776     01B9  0642               	xorwf	sprintf@c^(0+128),w
  1777     01BA  1903               	btfsc	3,2
  1778     01BB  29BD               	goto	u5811
  1779     01BC  29BE               	goto	u5810
  1780     01BD                     u5811:
  1781     01BD  29C8               	goto	l3550
  1782     01BE                     u5810:
  1783     01BE                     l3546:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1786     01BE  083B               	movf	sprintf@sp^(0+128),w
  1787     01BF  0084               	movwf	4
  1788     01C0  0842               	movf	sprintf@c^(0+128),w
  1789     01C1  1383               	bcf	3,7	;select IRP bank0
  1790     01C2  0080               	movwf	0
  1791     01C3                     l3548:
  1792     01C3  3001               	movlw	1
  1793     01C4  00A5               	movwf	??_sprintf^(0+128)
  1794     01C5  0825               	movf	??_sprintf^(0+128),w
  1795     01C6  07BB               	addwf	sprintf@sp^(0+128),f
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1798     01C7  2FDD               	goto	l3736
  1799     01C8                     l3550:
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1802     01C8  01AF               	clrf	sprintf@flag^(0+128)
  1803     01C9  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1804     01CA                     l3552:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1807     01CA  0820               	movf	sprintf@f^(0+128),w
  1808     01CB  0084               	movwf	4
  1809     01CC  160A  118A  200A  120A  118A  	fcall	stringdir
  1810     01D1  3A2E               	xorlw	46
  1811     01D2  1D03               	skipz
  1812     01D3  29D5               	goto	u5821
  1813     01D4  29D6               	goto	u5820
  1814     01D5                     u5821:
  1815     01D5  2A1B               	goto	l3568
  1816     01D6                     u5820:
  1817     01D6                     l3554:
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1820     01D6  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1821     01D7                     l3556:
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  1824     01D7  3001               	movlw	1
  1825     01D8  00A5               	movwf	??_sprintf^(0+128)
  1826     01D9  0825               	movf	??_sprintf^(0+128),w
  1827     01DA  07A0               	addwf	sprintf@f^(0+128),f
  1828     01DB                     l3558:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1831     01DB  01BC               	clrf	sprintf@prec^(0+128)
  1832     01DC  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1835     01DD  2A0A               	goto	l3566
  1836     01DE                     l3560:
  1837                           
  1838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1839     01DE  300A               	movlw	10
  1840     01DF  00F0               	movwf	___wmul@multiplier
  1841     01E0  3000               	movlw	0
  1842     01E1  00F1               	movwf	___wmul@multiplier+1
  1843     01E2  1683               	bsf	3,5	;RP0=1, select bank1
  1844     01E3  1303               	bcf	3,6	;RP1=0, select bank1
  1845     01E4  083D               	movf	(sprintf@prec+1)^(0+128),w
  1846     01E5  00F3               	movwf	___wmul@multiplicand+1
  1847     01E6  083C               	movf	sprintf@prec^(0+128),w
  1848     01E7  00F2               	movwf	___wmul@multiplicand
  1849     01E8  160A  158A  2380  120A  118A  	fcall	___wmul
  1850     01ED  0871               	movf	?___wmul+1,w
  1851     01EE  1683               	bsf	3,5	;RP0=1, select bank1
  1852     01EF  1303               	bcf	3,6	;RP1=0, select bank1
  1853     01F0  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1854     01F1  0870               	movf	?___wmul,w
  1855     01F2  00BC               	movwf	sprintf@prec^(0+128)
  1856     01F3                     l3562:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1859     01F3  0820               	movf	sprintf@f^(0+128),w
  1860     01F4  0084               	movwf	4
  1861     01F5  160A  118A  200A  120A  118A  	fcall	stringdir
  1862     01FA  3ED0               	addlw	208
  1863     01FB  00A5               	movwf	??_sprintf^(0+128)
  1864     01FC  30FF               	movlw	255
  1865     01FD  1803               	skipnc
  1866     01FE  3000               	movlw	0
  1867     01FF  00A6               	movwf	(??_sprintf^(0+128)+1)
  1868     0200  0825               	movf	??_sprintf^(0+128),w
  1869     0201  07BC               	addwf	sprintf@prec^(0+128),f
  1870     0202  1803               	skipnc
  1871     0203  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  1872     0204  0826               	movf	(??_sprintf+1)^(0+128),w
  1873     0205  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  1874     0206                     l3564:
  1875     0206  3001               	movlw	1
  1876     0207  00A5               	movwf	??_sprintf^(0+128)
  1877     0208  0825               	movf	??_sprintf^(0+128),w
  1878     0209  07A0               	addwf	sprintf@f^(0+128),f
  1879     020A                     l3566:
  1880                           
  1881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1882     020A  0820               	movf	sprintf@f^(0+128),w
  1883     020B  0084               	movwf	4
  1884     020C  160A  118A  200A  120A  118A  	fcall	stringdir
  1885     0211  160A  158A  2304  120A  118A  	fcall	_isdigit
  1886     0216  1803               	btfsc	3,0
  1887     0217  2A19               	goto	u5831
  1888     0218  2A1A               	goto	u5830
  1889     0219                     u5831:
  1890     0219  29DE               	goto	l3560
  1891     021A                     u5830:
  1892     021A  2A21               	goto	l3574
  1893     021B                     l3568:
  1894                           
  1895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1896     021B  01BC               	clrf	sprintf@prec^(0+128)
  1897     021C  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1898     021D                     l3570:
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1901     021D  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1902     021E  2A21               	goto	l3574
  1903     021F                     l368:	
  1904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1905                           
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1908     021F  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1909                           
  1910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  1911     0220  2A3D               	goto	l3576
  1912     0221                     l3574:
  1913     0221  3001               	movlw	1
  1914     0222  1683               	bsf	3,5	;RP0=1, select bank1
  1915     0223  1303               	bcf	3,6	;RP1=0, select bank1
  1916     0224  07A0               	addwf	sprintf@f^(0+128),f
  1917     0225  30FF               	movlw	-1
  1918     0226  0720               	addwf	sprintf@f^(0+128),w
  1919     0227  0084               	movwf	4
  1920     0228  160A  118A  200A  120A  118A  	fcall	stringdir
  1921     022D  00C2               	movwf	sprintf@c^(0+128)
  1922     022E  00A5               	movwf	??_sprintf^(0+128)
  1923     022F  01A6               	clrf	(??_sprintf^(0+128)+1)
  1924                           
  1925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1926                           ; Switch size 1, requested type "simple"
  1927                           ; Number of cases is 1, Range of values is 0 to 0
  1928                           ; switch strategies available:
  1929                           ; Name         Instructions Cycles
  1930                           ; simple_byte            4     3 (average)
  1931                           ; direct_byte           11     8 (fixed)
  1932                           ; jumptable            260     6 (fixed)
  1933                           ;	Chosen strategy is simple_byte
  1934     0230  0826               	movf	(??_sprintf+1)^(0+128),w
  1935     0231  3A00               	xorlw	0	; case 0
  1936     0232  1903               	skipnz
  1937     0233  2A35               	goto	l3974
  1938     0234  2FDD               	goto	l3736
  1939     0235                     l3974:
  1940                           
  1941                           ; Switch size 1, requested type "simple"
  1942                           ; Number of cases is 2, Range of values is 0 to 102
  1943                           ; switch strategies available:
  1944                           ; Name         Instructions Cycles
  1945                           ; simple_byte            7     4 (average)
  1946                           ; jumptable            260     6 (fixed)
  1947                           ;	Chosen strategy is simple_byte
  1948     0235  0825               	movf	??_sprintf^(0+128),w
  1949     0236  3A00               	xorlw	0	; case 0
  1950     0237  1903               	skipnz
  1951     0238  2FED               	goto	l3738
  1952     0239  3A66               	xorlw	102	; case 102
  1953     023A  1903               	skipnz
  1954     023B  2A1F               	goto	l368
  1955     023C  2FDD               	goto	l3736
  1956     023D                     l3576:
  1957                           
  1958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1959     023D  3000               	movlw	0
  1960     023E  052F               	andwf	sprintf@flag^(0+128),w
  1961     023F  00A5               	movwf	??_sprintf^(0+128)
  1962     0240  3007               	movlw	7
  1963     0241  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1964     0242  00A6               	movwf	(??_sprintf+1)^(0+128)
  1965     0243  0825               	movf	??_sprintf^(0+128),w
  1966     0244  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1967     0245  1903               	btfsc	3,2
  1968     0246  2A48               	goto	u5841
  1969     0247  2A49               	goto	u5840
  1970     0248                     u5841:
  1971     0248  2F9A               	goto	l3718
  1972     0249                     u5840:
  1973     0249                     l3578:
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1976     0249  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  1977     024A  2A4C               	goto	u5851
  1978     024B  2A4D               	goto	u5850
  1979     024C                     u5851:
  1980     024C  2A51               	goto	l3582
  1981     024D                     u5850:
  1982     024D                     l3580:
  1983                           
  1984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1985     024D  3006               	movlw	6
  1986     024E  00BC               	movwf	sprintf@prec^(0+128)
  1987     024F  3000               	movlw	0
  1988     0250  00BD               	movwf	(sprintf@prec^(0+128)+1)
  1989     0251                     l3582:
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1992     0251  082E               	movf	sprintf@ap^(0+128),w
  1993     0252  0084               	movwf	4
  1994     0253  1383               	bcf	3,7	;select IRP bank0
  1995     0254  0800               	movf	0,w
  1996     0255  00BE               	movwf	sprintf@fval^(0+128)
  1997     0256  0A84               	incf	4,f
  1998     0257  0800               	movf	0,w
  1999     0258  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2000     0259  0A84               	incf	4,f
  2001     025A  0800               	movf	0,w
  2002     025B  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2003     025C  0A84               	incf	4,f
  2004     025D  0800               	movf	0,w
  2005     025E  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2006     025F                     l3584:
  2007     025F  3004               	movlw	4
  2008     0260  00A5               	movwf	??_sprintf^(0+128)
  2009     0261  0825               	movf	??_sprintf^(0+128),w
  2010     0262  07AE               	addwf	sprintf@ap^(0+128),f
  2011     0263                     l3586:
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2014     0263  0841               	movf	(sprintf@fval+3)^(0+128),w
  2015     0264  00F3               	movwf	___flge@ff1+3
  2016     0265  0840               	movf	(sprintf@fval+2)^(0+128),w
  2017     0266  00F2               	movwf	___flge@ff1+2
  2018     0267  083F               	movf	(sprintf@fval+1)^(0+128),w
  2019     0268  00F1               	movwf	___flge@ff1+1
  2020     0269  083E               	movf	sprintf@fval^(0+128),w
  2021     026A  00F0               	movwf	___flge@ff1
  2022     026B  3000               	movlw	0
  2023     026C  00F7               	movwf	___flge@ff2+3
  2024     026D  3000               	movlw	0
  2025     026E  00F6               	movwf	___flge@ff2+2
  2026     026F  3000               	movlw	0
  2027     0270  00F5               	movwf	___flge@ff2+1
  2028     0271  3000               	movlw	0
  2029     0272  00F4               	movwf	___flge@ff2
  2030     0273  120A  158A  2002  120A  118A  	fcall	___flge
  2031     0278  1803               	btfsc	3,0
  2032     0279  2A7B               	goto	u5861
  2033     027A  2A7C               	goto	u5860
  2034     027B                     u5861:
  2035     027B  2A99               	goto	l3592
  2036     027C                     u5860:
  2037     027C                     l3588:
  2038                           
  2039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2040     027C  1683               	bsf	3,5	;RP0=1, select bank1
  2041     027D  1303               	bcf	3,6	;RP1=0, select bank1
  2042     027E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2043     027F  00F3               	movwf	___flneg@f1+3
  2044     0280  0840               	movf	(sprintf@fval+2)^(0+128),w
  2045     0281  00F2               	movwf	___flneg@f1+2
  2046     0282  083F               	movf	(sprintf@fval+1)^(0+128),w
  2047     0283  00F1               	movwf	___flneg@f1+1
  2048     0284  083E               	movf	sprintf@fval^(0+128),w
  2049     0285  00F0               	movwf	___flneg@f1
  2050     0286  160A  158A  22DF  120A  118A  	fcall	___flneg
  2051     028B  0873               	movf	?___flneg+3,w
  2052     028C  1683               	bsf	3,5	;RP0=1, select bank1
  2053     028D  1303               	bcf	3,6	;RP1=0, select bank1
  2054     028E  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2055     028F  0872               	movf	?___flneg+2,w
  2056     0290  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2057     0291  0871               	movf	?___flneg+1,w
  2058     0292  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2059     0293  0870               	movf	?___flneg,w
  2060     0294  00BE               	movwf	sprintf@fval^(0+128)
  2061     0295                     l3590:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2064     0295  3003               	movlw	3
  2065     0296  04AF               	iorwf	sprintf@flag^(0+128),f
  2066     0297  3000               	movlw	0
  2067     0298  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2068     0299                     l3592:
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2071     0299  1683               	bsf	3,5	;RP0=1, select bank1
  2072     029A  1303               	bcf	3,6	;RP1=0, select bank1
  2073     029B  01B5               	clrf	sprintf@eexp^(0+128)
  2074     029C  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2075     029D                     l3594:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2078     029D  0841               	movf	(sprintf@fval+3)^(0+128),w
  2079     029E  00F3               	movwf	___fleq@ff1+3
  2080     029F  0840               	movf	(sprintf@fval+2)^(0+128),w
  2081     02A0  00F2               	movwf	___fleq@ff1+2
  2082     02A1  083F               	movf	(sprintf@fval+1)^(0+128),w
  2083     02A2  00F1               	movwf	___fleq@ff1+1
  2084     02A3  083E               	movf	sprintf@fval^(0+128),w
  2085     02A4  00F0               	movwf	___fleq@ff1
  2086     02A5  3000               	movlw	0
  2087     02A6  00F7               	movwf	___fleq@ff2+3
  2088     02A7  3000               	movlw	0
  2089     02A8  00F6               	movwf	___fleq@ff2+2
  2090     02A9  3000               	movlw	0
  2091     02AA  00F5               	movwf	___fleq@ff2+1
  2092     02AB  3000               	movlw	0
  2093     02AC  00F4               	movwf	___fleq@ff2
  2094     02AD  160A  158A  256B  120A  118A  	fcall	___fleq
  2095     02B2  1803               	btfsc	3,0
  2096     02B3  2AB5               	goto	u5871
  2097     02B4  2AB6               	goto	u5870
  2098     02B5                     u5871:
  2099     02B5  2BA6               	goto	l3620
  2100     02B6                     u5870:
  2101     02B6                     l3596:
  2102                           
  2103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2104     02B6  1003               	clrc
  2105     02B7  1683               	bsf	3,5	;RP0=1, select bank1
  2106     02B8  1303               	bcf	3,6	;RP1=0, select bank1
  2107     02B9  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2108     02BA  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2109     02BB  3E82               	addlw	130
  2110     02BC  00B5               	movwf	sprintf@eexp^(0+128)
  2111     02BD  30FF               	movlw	255
  2112     02BE  1803               	skipnc
  2113     02BF  3000               	movlw	0
  2114     02C0  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  2115     02C1                     l3598:
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2118     02C1  30FF               	movlw	255
  2119     02C2  07B5               	addwf	sprintf@eexp^(0+128),f
  2120     02C3  1803               	skipnc
  2121     02C4  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2122     02C5  30FF               	movlw	255
  2123     02C6  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2124     02C7                     l3600:
  2125                           
  2126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2127     02C7  3003               	movlw	3
  2128     02C8  00F0               	movwf	___wmul@multiplier
  2129     02C9  3000               	movlw	0
  2130     02CA  00F1               	movwf	___wmul@multiplier+1
  2131     02CB  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2132     02CC  00F3               	movwf	___wmul@multiplicand+1
  2133     02CD  0835               	movf	sprintf@eexp^(0+128),w
  2134     02CE  00F2               	movwf	___wmul@multiplicand
  2135     02CF  160A  158A  2380  120A  118A  	fcall	___wmul
  2136     02D4  0871               	movf	?___wmul+1,w
  2137     02D5  1683               	bsf	3,5	;RP0=1, select bank1
  2138     02D6  1303               	bcf	3,6	;RP1=0, select bank1
  2139     02D7  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2140     02D8  0870               	movf	?___wmul,w
  2141     02D9  00B5               	movwf	sprintf@eexp^(0+128)
  2142     02DA                     l3602:
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2145     02DA  300A               	movlw	10
  2146     02DB  00F7               	movwf	___awdiv@divisor
  2147     02DC  3000               	movlw	0
  2148     02DD  00F8               	movwf	___awdiv@divisor+1
  2149     02DE  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2150     02DF  00FA               	movwf	___awdiv@dividend+1
  2151     02E0  0835               	movf	sprintf@eexp^(0+128),w
  2152     02E1  00F9               	movwf	___awdiv@dividend
  2153     02E2  160A  118A  20AA  120A  118A  	fcall	___awdiv
  2154     02E7  0878               	movf	?___awdiv+1,w
  2155     02E8  1683               	bsf	3,5	;RP0=1, select bank1
  2156     02E9  1303               	bcf	3,6	;RP1=0, select bank1
  2157     02EA  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2158     02EB  0877               	movf	?___awdiv,w
  2159     02EC  00B5               	movwf	sprintf@eexp^(0+128)
  2160     02ED                     l3604:
  2161                           
  2162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2163     02ED  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  2164     02EE  2AF0               	goto	u5881
  2165     02EF  2AF1               	goto	u5880
  2166     02F0                     u5881:
  2167     02F0  2AF7               	goto	l3608
  2168     02F1                     u5880:
  2169     02F1                     l3606:
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2172     02F1  30FF               	movlw	255
  2173     02F2  07B5               	addwf	sprintf@eexp^(0+128),f
  2174     02F3  1803               	skipnc
  2175     02F4  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2176     02F5  30FF               	movlw	255
  2177     02F6  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2178     02F7                     l3608:
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2181     02F7  0335               	decf	sprintf@eexp^(0+128),w
  2182     02F8  3AFF               	xorlw	255
  2183     02F9  120A  158A  24A1  120A  118A  	fcall	_scale
  2184     02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2185     02FF  1303               	bcf	3,6	;RP1=0, select bank0
  2186     0300  0841               	movf	?_scale+3,w
  2187     0301  1683               	bsf	3,5	;RP0=1, select bank1
  2188     0302  1303               	bcf	3,6	;RP1=0, select bank1
  2189     0303  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2190     0304  1283               	bcf	3,5	;RP0=0, select bank0
  2191     0305  1303               	bcf	3,6	;RP1=0, select bank0
  2192     0306  0840               	movf	?_scale+2,w
  2193     0307  1683               	bsf	3,5	;RP0=1, select bank1
  2194     0308  1303               	bcf	3,6	;RP1=0, select bank1
  2195     0309  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2196     030A  1283               	bcf	3,5	;RP0=0, select bank0
  2197     030B  1303               	bcf	3,6	;RP1=0, select bank0
  2198     030C  083F               	movf	?_scale+1,w
  2199     030D  1683               	bsf	3,5	;RP0=1, select bank1
  2200     030E  1303               	bcf	3,6	;RP1=0, select bank1
  2201     030F  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2202     0310  1283               	bcf	3,5	;RP0=0, select bank0
  2203     0311  1303               	bcf	3,6	;RP1=0, select bank0
  2204     0312  083E               	movf	?_scale,w
  2205     0313  1683               	bsf	3,5	;RP0=1, select bank1
  2206     0314  1303               	bcf	3,6	;RP1=0, select bank1
  2207     0315  00B7               	movwf	sprintf@tmpval^(0+128)
  2208     0316                     l3610:
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2211     0316  0841               	movf	(sprintf@fval+3)^(0+128),w
  2212     0317  1283               	bcf	3,5	;RP0=0, select bank0
  2213     0318  1303               	bcf	3,6	;RP1=0, select bank0
  2214     0319  00A7               	movwf	___flmul@b+3
  2215     031A  1683               	bsf	3,5	;RP0=1, select bank1
  2216     031B  1303               	bcf	3,6	;RP1=0, select bank1
  2217     031C  0840               	movf	(sprintf@fval+2)^(0+128),w
  2218     031D  1283               	bcf	3,5	;RP0=0, select bank0
  2219     031E  1303               	bcf	3,6	;RP1=0, select bank0
  2220     031F  00A6               	movwf	___flmul@b+2
  2221     0320  1683               	bsf	3,5	;RP0=1, select bank1
  2222     0321  1303               	bcf	3,6	;RP1=0, select bank1
  2223     0322  083F               	movf	(sprintf@fval+1)^(0+128),w
  2224     0323  1283               	bcf	3,5	;RP0=0, select bank0
  2225     0324  1303               	bcf	3,6	;RP1=0, select bank0
  2226     0325  00A5               	movwf	___flmul@b+1
  2227     0326  1683               	bsf	3,5	;RP0=1, select bank1
  2228     0327  1303               	bcf	3,6	;RP1=0, select bank1
  2229     0328  083E               	movf	sprintf@fval^(0+128),w
  2230     0329  1283               	bcf	3,5	;RP0=0, select bank0
  2231     032A  1303               	bcf	3,6	;RP1=0, select bank0
  2232     032B  00A4               	movwf	___flmul@b
  2233     032C  1683               	bsf	3,5	;RP0=1, select bank1
  2234     032D  1303               	bcf	3,6	;RP1=0, select bank1
  2235     032E  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2236     032F  1283               	bcf	3,5	;RP0=0, select bank0
  2237     0330  1303               	bcf	3,6	;RP1=0, select bank0
  2238     0331  00AB               	movwf	___flmul@a+3
  2239     0332  1683               	bsf	3,5	;RP0=1, select bank1
  2240     0333  1303               	bcf	3,6	;RP1=0, select bank1
  2241     0334  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2242     0335  1283               	bcf	3,5	;RP0=0, select bank0
  2243     0336  1303               	bcf	3,6	;RP1=0, select bank0
  2244     0337  00AA               	movwf	___flmul@a+2
  2245     0338  1683               	bsf	3,5	;RP0=1, select bank1
  2246     0339  1303               	bcf	3,6	;RP1=0, select bank1
  2247     033A  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2248     033B  1283               	bcf	3,5	;RP0=0, select bank0
  2249     033C  1303               	bcf	3,6	;RP1=0, select bank0
  2250     033D  00A9               	movwf	___flmul@a+1
  2251     033E  1683               	bsf	3,5	;RP0=1, select bank1
  2252     033F  1303               	bcf	3,6	;RP1=0, select bank1
  2253     0340  0837               	movf	sprintf@tmpval^(0+128),w
  2254     0341  1283               	bcf	3,5	;RP0=0, select bank0
  2255     0342  1303               	bcf	3,6	;RP1=0, select bank0
  2256     0343  00A8               	movwf	___flmul@a
  2257     0344  120A  158A  215C  120A  118A  	fcall	___flmul
  2258     0349  1283               	bcf	3,5	;RP0=0, select bank0
  2259     034A  1303               	bcf	3,6	;RP1=0, select bank0
  2260     034B  0827               	movf	?___flmul+3,w
  2261     034C  1683               	bsf	3,5	;RP0=1, select bank1
  2262     034D  1303               	bcf	3,6	;RP1=0, select bank1
  2263     034E  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2264     034F  1283               	bcf	3,5	;RP0=0, select bank0
  2265     0350  1303               	bcf	3,6	;RP1=0, select bank0
  2266     0351  0826               	movf	?___flmul+2,w
  2267     0352  1683               	bsf	3,5	;RP0=1, select bank1
  2268     0353  1303               	bcf	3,6	;RP1=0, select bank1
  2269     0354  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2270     0355  1283               	bcf	3,5	;RP0=0, select bank0
  2271     0356  1303               	bcf	3,6	;RP1=0, select bank0
  2272     0357  0825               	movf	?___flmul+1,w
  2273     0358  1683               	bsf	3,5	;RP0=1, select bank1
  2274     0359  1303               	bcf	3,6	;RP1=0, select bank1
  2275     035A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2276     035B  1283               	bcf	3,5	;RP0=0, select bank0
  2277     035C  1303               	bcf	3,6	;RP1=0, select bank0
  2278     035D  0824               	movf	?___flmul,w
  2279     035E  1683               	bsf	3,5	;RP0=1, select bank1
  2280     035F  1303               	bcf	3,6	;RP1=0, select bank1
  2281     0360  00B7               	movwf	sprintf@tmpval^(0+128)
  2282     0361                     l3612:
  2283                           
  2284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2285     0361  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2286     0362  00F3               	movwf	___flge@ff1+3
  2287     0363  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2288     0364  00F2               	movwf	___flge@ff1+2
  2289     0365  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2290     0366  00F1               	movwf	___flge@ff1+1
  2291     0367  0837               	movf	sprintf@tmpval^(0+128),w
  2292     0368  00F0               	movwf	___flge@ff1
  2293     0369  303F               	movlw	63
  2294     036A  00F7               	movwf	___flge@ff2+3
  2295     036B  3080               	movlw	128
  2296     036C  00F6               	movwf	___flge@ff2+2
  2297     036D  3000               	movlw	0
  2298     036E  00F5               	movwf	___flge@ff2+1
  2299     036F  3000               	movlw	0
  2300     0370  00F4               	movwf	___flge@ff2
  2301     0371  120A  158A  2002  120A  118A  	fcall	___flge
  2302     0376  1803               	btfsc	3,0
  2303     0377  2B79               	goto	u5891
  2304     0378  2B7A               	goto	u5890
  2305     0379                     u5891:
  2306     0379  2B83               	goto	l3616
  2307     037A                     u5890:
  2308     037A                     l3614:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2311     037A  30FF               	movlw	255
  2312     037B  1683               	bsf	3,5	;RP0=1, select bank1
  2313     037C  1303               	bcf	3,6	;RP1=0, select bank1
  2314     037D  07B5               	addwf	sprintf@eexp^(0+128),f
  2315     037E  1803               	skipnc
  2316     037F  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2317     0380  30FF               	movlw	255
  2318     0381  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2319     0382  2BA6               	goto	l3620
  2320     0383                     l3616:
  2321     0383  1683               	bsf	3,5	;RP0=1, select bank1
  2322     0384  1303               	bcf	3,6	;RP1=0, select bank1
  2323     0385  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2324     0386  00F3               	movwf	___flge@ff1+3
  2325     0387  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2326     0388  00F2               	movwf	___flge@ff1+2
  2327     0389  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2328     038A  00F1               	movwf	___flge@ff1+1
  2329     038B  0837               	movf	sprintf@tmpval^(0+128),w
  2330     038C  00F0               	movwf	___flge@ff1
  2331     038D  3041               	movlw	65
  2332     038E  00F7               	movwf	___flge@ff2+3
  2333     038F  3020               	movlw	32
  2334     0390  00F6               	movwf	___flge@ff2+2
  2335     0391  3000               	movlw	0
  2336     0392  00F5               	movwf	___flge@ff2+1
  2337     0393  3000               	movlw	0
  2338     0394  00F4               	movwf	___flge@ff2
  2339     0395  120A  158A  2002  120A  118A  	fcall	___flge
  2340     039A  1C03               	btfss	3,0
  2341     039B  2B9D               	goto	u5901
  2342     039C  2B9E               	goto	u5900
  2343     039D                     u5901:
  2344     039D  2BA6               	goto	l3620
  2345     039E                     u5900:
  2346     039E                     l3618:
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2349     039E  3001               	movlw	1
  2350     039F  1683               	bsf	3,5	;RP0=1, select bank1
  2351     03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2352     03A1  07B5               	addwf	sprintf@eexp^(0+128),f
  2353     03A2  1803               	skipnc
  2354     03A3  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2355     03A4  3000               	movlw	0
  2356     03A5  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2357     03A6                     l3620:
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2360     03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2361     03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2362     03A8  083D               	movf	(sprintf@prec+1)^(0+128),w
  2363     03A9  3A80               	xorlw	128
  2364     03AA  00FF               	movwf	btemp+1
  2365     03AB  3080               	movlw	128
  2366     03AC  027F               	subwf	btemp+1,w
  2367     03AD  1D03               	skipz
  2368     03AE  2BB1               	goto	u5915
  2369     03AF  300D               	movlw	13
  2370     03B0  023C               	subwf	sprintf@prec^(0+128),w
  2371     03B1                     u5915:
  2372     03B1  1803               	skipnc
  2373     03B2  2BB4               	goto	u5911
  2374     03B3  2BB5               	goto	u5910
  2375     03B4                     u5911:
  2376     03B4  2BFC               	goto	l3624
  2377     03B5                     u5910:
  2378     03B5                     l3622:
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2381     03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2382     03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2383     03B7  083C               	movf	sprintf@prec^(0+128),w
  2384     03B8  160A  118A  239D  120A  118A  	fcall	_fround
  2385     03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2386     03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2387     03BF  0841               	movf	?_fround+3,w
  2388     03C0  00D5               	movwf	___fladd@b+3
  2389     03C1  0840               	movf	?_fround+2,w
  2390     03C2  00D4               	movwf	___fladd@b+2
  2391     03C3  083F               	movf	?_fround+1,w
  2392     03C4  00D3               	movwf	___fladd@b+1
  2393     03C5  083E               	movf	?_fround,w
  2394     03C6  00D2               	movwf	___fladd@b
  2395     03C7  1683               	bsf	3,5	;RP0=1, select bank1
  2396     03C8  1303               	bcf	3,6	;RP1=0, select bank1
  2397     03C9  0841               	movf	(sprintf@fval+3)^(0+128),w
  2398     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2399     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2400     03CC  00D9               	movwf	___fladd@a+3
  2401     03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2402     03CE  1303               	bcf	3,6	;RP1=0, select bank1
  2403     03CF  0840               	movf	(sprintf@fval+2)^(0+128),w
  2404     03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2405     03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2406     03D2  00D8               	movwf	___fladd@a+2
  2407     03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2408     03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2409     03D5  083F               	movf	(sprintf@fval+1)^(0+128),w
  2410     03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2411     03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2412     03D8  00D7               	movwf	___fladd@a+1
  2413     03D9  1683               	bsf	3,5	;RP0=1, select bank1
  2414     03DA  1303               	bcf	3,6	;RP1=0, select bank1
  2415     03DB  083E               	movf	sprintf@fval^(0+128),w
  2416     03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2417     03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2418     03DE  00D6               	movwf	___fladd@a
  2419     03DF  160A  118A  25A8  120A  118A  	fcall	___fladd
  2420     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2421     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2422     03E6  0855               	movf	?___fladd+3,w
  2423     03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2424     03E8  1303               	bcf	3,6	;RP1=0, select bank1
  2425     03E9  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2426     03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2427     03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2428     03EC  0854               	movf	?___fladd+2,w
  2429     03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2430     03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2431     03EF  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2432     03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2433     03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2434     03F2  0853               	movf	?___fladd+1,w
  2435     03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2436     03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2437     03F5  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2438     03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2439     03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2440     03F8  0852               	movf	?___fladd,w
  2441     03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2442     03FA  1303               	bcf	3,6	;RP1=0, select bank1
  2443     03FB  00BE               	movwf	sprintf@fval^(0+128)
  2444     03FC                     l3624:
  2445                           
  2446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2447     03FC  1683               	bsf	3,5	;RP0=1, select bank1
  2448     03FD  1303               	bcf	3,6	;RP1=0, select bank1
  2449     03FE  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2450     03FF  3A80               	xorlw	128
  2451     0400  00FF               	movwf	btemp+1
  2452     0401  3080               	movlw	128
  2453     0402  027F               	subwf	btemp+1,w
  2454     0403  1D03               	skipz
  2455     0404  2C07               	goto	u5925
  2456     0405  300A               	movlw	10
  2457     0406  0235               	subwf	sprintf@eexp^(0+128),w
  2458     0407                     u5925:
  2459     0407  1803               	skipnc
  2460     0408  2C0A               	goto	u5921
  2461     0409  2C0B               	goto	u5920
  2462     040A                     u5921:
  2463     040A  2C5C               	goto	l3632
  2464     040B                     u5920:
  2465     040B                     l3626:
  2466     040B  1683               	bsf	3,5	;RP0=1, select bank1
  2467     040C  1303               	bcf	3,6	;RP1=0, select bank1
  2468     040D  0841               	movf	(sprintf@fval+3)^(0+128),w
  2469     040E  00F3               	movwf	___fleq@ff1+3
  2470     040F  0840               	movf	(sprintf@fval+2)^(0+128),w
  2471     0410  00F2               	movwf	___fleq@ff1+2
  2472     0411  083F               	movf	(sprintf@fval+1)^(0+128),w
  2473     0412  00F1               	movwf	___fleq@ff1+1
  2474     0413  083E               	movf	sprintf@fval^(0+128),w
  2475     0414  00F0               	movwf	___fleq@ff1
  2476     0415  3000               	movlw	0
  2477     0416  00F7               	movwf	___fleq@ff2+3
  2478     0417  3000               	movlw	0
  2479     0418  00F6               	movwf	___fleq@ff2+2
  2480     0419  3000               	movlw	0
  2481     041A  00F5               	movwf	___fleq@ff2+1
  2482     041B  3000               	movlw	0
  2483     041C  00F4               	movwf	___fleq@ff2
  2484     041D  160A  158A  256B  120A  118A  	fcall	___fleq
  2485     0422  1803               	btfsc	3,0
  2486     0423  2C25               	goto	u5931
  2487     0424  2C26               	goto	u5930
  2488     0425                     u5931:
  2489     0425  2CCE               	goto	l3646
  2490     0426                     u5930:
  2491     0426                     l3628:
  2492     0426  1683               	bsf	3,5	;RP0=1, select bank1
  2493     0427  1303               	bcf	3,6	;RP1=0, select bank1
  2494     0428  0841               	movf	(sprintf@fval+3)^(0+128),w
  2495     0429  1283               	bcf	3,5	;RP0=0, select bank0
  2496     042A  1303               	bcf	3,6	;RP1=0, select bank0
  2497     042B  00D4               	movwf	___fltol@f1+3
  2498     042C  1683               	bsf	3,5	;RP0=1, select bank1
  2499     042D  1303               	bcf	3,6	;RP1=0, select bank1
  2500     042E  0840               	movf	(sprintf@fval+2)^(0+128),w
  2501     042F  1283               	bcf	3,5	;RP0=0, select bank0
  2502     0430  1303               	bcf	3,6	;RP1=0, select bank0
  2503     0431  00D3               	movwf	___fltol@f1+2
  2504     0432  1683               	bsf	3,5	;RP0=1, select bank1
  2505     0433  1303               	bcf	3,6	;RP1=0, select bank1
  2506     0434  083F               	movf	(sprintf@fval+1)^(0+128),w
  2507     0435  1283               	bcf	3,5	;RP0=0, select bank0
  2508     0436  1303               	bcf	3,6	;RP1=0, select bank0
  2509     0437  00D2               	movwf	___fltol@f1+1
  2510     0438  1683               	bsf	3,5	;RP0=1, select bank1
  2511     0439  1303               	bcf	3,6	;RP1=0, select bank1
  2512     043A  083E               	movf	sprintf@fval^(0+128),w
  2513     043B  1283               	bcf	3,5	;RP0=0, select bank0
  2514     043C  1303               	bcf	3,6	;RP1=0, select bank0
  2515     043D  00D1               	movwf	___fltol@f1
  2516     043E  160A  158A  2788  120A  118A  	fcall	___fltol
  2517     0443  1283               	bcf	3,5	;RP0=0, select bank0
  2518     0444  1303               	bcf	3,6	;RP1=0, select bank0
  2519     0445  0854               	movf	?___fltol+3,w
  2520     0446  0453               	iorwf	?___fltol+2,w
  2521     0447  0452               	iorwf	?___fltol+1,w
  2522     0448  0451               	iorwf	?___fltol,w
  2523     0449  1D03               	skipz
  2524     044A  2C4C               	goto	u5941
  2525     044B  2C4D               	goto	u5940
  2526     044C                     u5941:
  2527     044C  2CCE               	goto	l3646
  2528     044D                     u5940:
  2529     044D                     l3630:
  2530     044D  1683               	bsf	3,5	;RP0=1, select bank1
  2531     044E  1303               	bcf	3,6	;RP1=0, select bank1
  2532     044F  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2533     0450  3A80               	xorlw	128
  2534     0451  00FF               	movwf	btemp+1
  2535     0452  3080               	movlw	128
  2536     0453  027F               	subwf	btemp+1,w
  2537     0454  1D03               	skipz
  2538     0455  2C58               	goto	u5955
  2539     0456  3002               	movlw	2
  2540     0457  0235               	subwf	sprintf@eexp^(0+128),w
  2541     0458                     u5955:
  2542     0458  1C03               	skipc
  2543     0459  2C5B               	goto	u5951
  2544     045A  2C5C               	goto	u5950
  2545     045B                     u5951:
  2546     045B  2CCE               	goto	l3646
  2547     045C                     u5950:
  2548     045C                     l3632:
  2549                           
  2550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2551     045C  1683               	bsf	3,5	;RP0=1, select bank1
  2552     045D  1303               	bcf	3,6	;RP1=0, select bank1
  2553     045E  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2554     045F  00F3               	movwf	___flge@ff1+3
  2555     0460  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2556     0461  00F2               	movwf	___flge@ff1+2
  2557     0462  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2558     0463  00F1               	movwf	___flge@ff1+1
  2559     0464  0837               	movf	sprintf@tmpval^(0+128),w
  2560     0465  00F0               	movwf	___flge@ff1
  2561     0466  3040               	movlw	64
  2562     0467  00F7               	movwf	___flge@ff2+3
  2563     0468  3089               	movlw	137
  2564     0469  00F6               	movwf	___flge@ff2+2
  2565     046A  3070               	movlw	112
  2566     046B  00F5               	movwf	___flge@ff2+1
  2567     046C  305F               	movlw	95
  2568     046D  00F4               	movwf	___flge@ff2
  2569     046E  120A  158A  2002  120A  118A  	fcall	___flge
  2570     0473  1803               	btfsc	3,0
  2571     0474  2C76               	goto	u5961
  2572     0475  2C77               	goto	u5960
  2573     0476                     u5961:
  2574     0476  2C80               	goto	l3636
  2575     0477                     u5960:
  2576     0477                     l3634:
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2579     0477  30F7               	movlw	247
  2580     0478  1683               	bsf	3,5	;RP0=1, select bank1
  2581     0479  1303               	bcf	3,6	;RP1=0, select bank1
  2582     047A  07B5               	addwf	sprintf@eexp^(0+128),f
  2583     047B  1803               	skipnc
  2584     047C  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2585     047D  30FF               	movlw	255
  2586     047E  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2587                           
  2588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2589     047F  2C88               	goto	l3638
  2590     0480                     l3636:
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2593     0480  30F8               	movlw	248
  2594     0481  1683               	bsf	3,5	;RP0=1, select bank1
  2595     0482  1303               	bcf	3,6	;RP1=0, select bank1
  2596     0483  07B5               	addwf	sprintf@eexp^(0+128),f
  2597     0484  1803               	skipnc
  2598     0485  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2599     0486  30FF               	movlw	255
  2600     0487  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2601     0488                     l3638:
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2604     0488  0835               	movf	sprintf@eexp^(0+128),w
  2605     0489  120A  158A  24A1  120A  118A  	fcall	_scale
  2606     048E  1283               	bcf	3,5	;RP0=0, select bank0
  2607     048F  1303               	bcf	3,6	;RP1=0, select bank0
  2608     0490  0841               	movf	?_scale+3,w
  2609     0491  1683               	bsf	3,5	;RP0=1, select bank1
  2610     0492  1303               	bcf	3,6	;RP1=0, select bank1
  2611     0493  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2612     0494  1283               	bcf	3,5	;RP0=0, select bank0
  2613     0495  1303               	bcf	3,6	;RP1=0, select bank0
  2614     0496  0840               	movf	?_scale+2,w
  2615     0497  1683               	bsf	3,5	;RP0=1, select bank1
  2616     0498  1303               	bcf	3,6	;RP1=0, select bank1
  2617     0499  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2618     049A  1283               	bcf	3,5	;RP0=0, select bank0
  2619     049B  1303               	bcf	3,6	;RP1=0, select bank0
  2620     049C  083F               	movf	?_scale+1,w
  2621     049D  1683               	bsf	3,5	;RP0=1, select bank1
  2622     049E  1303               	bcf	3,6	;RP1=0, select bank1
  2623     049F  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2624     04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2625     04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2626     04A2  083E               	movf	?_scale,w
  2627     04A3  1683               	bsf	3,5	;RP0=1, select bank1
  2628     04A4  1303               	bcf	3,6	;RP1=0, select bank1
  2629     04A5  00B7               	movwf	sprintf@tmpval^(0+128)
  2630     04A6                     l3640:
  2631     04A6  0841               	movf	(sprintf@fval+3)^(0+128),w
  2632     04A7  00F3               	movwf	__div_to_l_@f1+3
  2633     04A8  0840               	movf	(sprintf@fval+2)^(0+128),w
  2634     04A9  00F2               	movwf	__div_to_l_@f1+2
  2635     04AA  083F               	movf	(sprintf@fval+1)^(0+128),w
  2636     04AB  00F1               	movwf	__div_to_l_@f1+1
  2637     04AC  083E               	movf	sprintf@fval^(0+128),w
  2638     04AD  00F0               	movwf	__div_to_l_@f1
  2639     04AE  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2640     04AF  00F7               	movwf	__div_to_l_@f2+3
  2641     04B0  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2642     04B1  00F6               	movwf	__div_to_l_@f2+2
  2643     04B2  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2644     04B3  00F5               	movwf	__div_to_l_@f2+1
  2645     04B4  0837               	movf	sprintf@tmpval^(0+128),w
  2646     04B5  00F4               	movwf	__div_to_l_@f2
  2647     04B6  120A  118A  2024  120A  118A  	fcall	__div_to_l_
  2648     04BB  0873               	movf	?__div_to_l_+3,w
  2649     04BC  1683               	bsf	3,5	;RP0=1, select bank1
  2650     04BD  1303               	bcf	3,6	;RP1=0, select bank1
  2651     04BE  00B4               	movwf	(sprintf@val+3)^(0+128)
  2652     04BF  0872               	movf	?__div_to_l_+2,w
  2653     04C0  00B3               	movwf	(sprintf@val+2)^(0+128)
  2654     04C1  0871               	movf	?__div_to_l_+1,w
  2655     04C2  00B2               	movwf	(sprintf@val+1)^(0+128)
  2656     04C3  0870               	movf	?__div_to_l_,w
  2657     04C4  00B1               	movwf	sprintf@val^(0+128)
  2658     04C5                     l3644:
  2659                           
  2660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2661     04C5  3000               	movlw	0
  2662     04C6  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2663     04C7  3000               	movlw	0
  2664     04C8  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2665     04C9  3000               	movlw	0
  2666     04CA  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2667     04CB  3000               	movlw	0
  2668     04CC  00BE               	movwf	sprintf@fval^(0+128)
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2671     04CD  2D52               	goto	l3652
  2672     04CE                     l3646:
  2673                           
  2674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2675     04CE  1683               	bsf	3,5	;RP0=1, select bank1
  2676     04CF  1303               	bcf	3,6	;RP1=0, select bank1
  2677     04D0  0841               	movf	(sprintf@fval+3)^(0+128),w
  2678     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2679     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2680     04D3  00D4               	movwf	___fltol@f1+3
  2681     04D4  1683               	bsf	3,5	;RP0=1, select bank1
  2682     04D5  1303               	bcf	3,6	;RP1=0, select bank1
  2683     04D6  0840               	movf	(sprintf@fval+2)^(0+128),w
  2684     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2685     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2686     04D9  00D3               	movwf	___fltol@f1+2
  2687     04DA  1683               	bsf	3,5	;RP0=1, select bank1
  2688     04DB  1303               	bcf	3,6	;RP1=0, select bank1
  2689     04DC  083F               	movf	(sprintf@fval+1)^(0+128),w
  2690     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2691     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2692     04DF  00D2               	movwf	___fltol@f1+1
  2693     04E0  1683               	bsf	3,5	;RP0=1, select bank1
  2694     04E1  1303               	bcf	3,6	;RP1=0, select bank1
  2695     04E2  083E               	movf	sprintf@fval^(0+128),w
  2696     04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2697     04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2698     04E5  00D1               	movwf	___fltol@f1
  2699     04E6  160A  158A  2788  120A  118A  	fcall	___fltol
  2700     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2701     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2702     04ED  0854               	movf	?___fltol+3,w
  2703     04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2704     04EF  1303               	bcf	3,6	;RP1=0, select bank1
  2705     04F0  00B4               	movwf	(sprintf@val+3)^(0+128)
  2706     04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2707     04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2708     04F3  0853               	movf	?___fltol+2,w
  2709     04F4  1683               	bsf	3,5	;RP0=1, select bank1
  2710     04F5  1303               	bcf	3,6	;RP1=0, select bank1
  2711     04F6  00B3               	movwf	(sprintf@val+2)^(0+128)
  2712     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2713     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2714     04F9  0852               	movf	?___fltol+1,w
  2715     04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2716     04FB  1303               	bcf	3,6	;RP1=0, select bank1
  2717     04FC  00B2               	movwf	(sprintf@val+1)^(0+128)
  2718     04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2719     04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2720     04FF  0851               	movf	?___fltol,w
  2721     0500  1683               	bsf	3,5	;RP0=1, select bank1
  2722     0501  1303               	bcf	3,6	;RP1=0, select bank1
  2723     0502  00B1               	movwf	sprintf@val^(0+128)
  2724     0503                     l3648:
  2725                           
  2726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2727     0503  0834               	movf	(sprintf@val+3)^(0+128),w
  2728     0504  00F3               	movwf	___xxtofl@val+3
  2729     0505  0833               	movf	(sprintf@val+2)^(0+128),w
  2730     0506  00F2               	movwf	___xxtofl@val+2
  2731     0507  0832               	movf	(sprintf@val+1)^(0+128),w
  2732     0508  00F1               	movwf	___xxtofl@val+1
  2733     0509  0831               	movf	sprintf@val^(0+128),w
  2734     050A  00F0               	movwf	___xxtofl@val
  2735     050B  3000               	movlw	0
  2736     050C  120A  158A  20A4  120A  118A  	fcall	___xxtofl
  2737     0511  0873               	movf	?___xxtofl+3,w
  2738     0512  1283               	bcf	3,5	;RP0=0, select bank0
  2739     0513  1303               	bcf	3,6	;RP1=0, select bank0
  2740     0514  00E9               	movwf	___flsub@a+3
  2741     0515  0872               	movf	?___xxtofl+2,w
  2742     0516  00E8               	movwf	___flsub@a+2
  2743     0517  0871               	movf	?___xxtofl+1,w
  2744     0518  00E7               	movwf	___flsub@a+1
  2745     0519  0870               	movf	?___xxtofl,w
  2746     051A  00E6               	movwf	___flsub@a
  2747     051B  1683               	bsf	3,5	;RP0=1, select bank1
  2748     051C  1303               	bcf	3,6	;RP1=0, select bank1
  2749     051D  0841               	movf	(sprintf@fval+3)^(0+128),w
  2750     051E  1283               	bcf	3,5	;RP0=0, select bank0
  2751     051F  1303               	bcf	3,6	;RP1=0, select bank0
  2752     0520  00ED               	movwf	___flsub@b+3
  2753     0521  1683               	bsf	3,5	;RP0=1, select bank1
  2754     0522  1303               	bcf	3,6	;RP1=0, select bank1
  2755     0523  0840               	movf	(sprintf@fval+2)^(0+128),w
  2756     0524  1283               	bcf	3,5	;RP0=0, select bank0
  2757     0525  1303               	bcf	3,6	;RP1=0, select bank0
  2758     0526  00EC               	movwf	___flsub@b+2
  2759     0527  1683               	bsf	3,5	;RP0=1, select bank1
  2760     0528  1303               	bcf	3,6	;RP1=0, select bank1
  2761     0529  083F               	movf	(sprintf@fval+1)^(0+128),w
  2762     052A  1283               	bcf	3,5	;RP0=0, select bank0
  2763     052B  1303               	bcf	3,6	;RP1=0, select bank0
  2764     052C  00EB               	movwf	___flsub@b+1
  2765     052D  1683               	bsf	3,5	;RP0=1, select bank1
  2766     052E  1303               	bcf	3,6	;RP1=0, select bank1
  2767     052F  083E               	movf	sprintf@fval^(0+128),w
  2768     0530  1283               	bcf	3,5	;RP0=0, select bank0
  2769     0531  1303               	bcf	3,6	;RP1=0, select bank0
  2770     0532  00EA               	movwf	___flsub@b
  2771     0533  160A  158A  235C  120A  118A  	fcall	___flsub
  2772     0538  1283               	bcf	3,5	;RP0=0, select bank0
  2773     0539  1303               	bcf	3,6	;RP1=0, select bank0
  2774     053A  0869               	movf	?___flsub+3,w
  2775     053B  1683               	bsf	3,5	;RP0=1, select bank1
  2776     053C  1303               	bcf	3,6	;RP1=0, select bank1
  2777     053D  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2778     053E  1283               	bcf	3,5	;RP0=0, select bank0
  2779     053F  1303               	bcf	3,6	;RP1=0, select bank0
  2780     0540  0868               	movf	?___flsub+2,w
  2781     0541  1683               	bsf	3,5	;RP0=1, select bank1
  2782     0542  1303               	bcf	3,6	;RP1=0, select bank1
  2783     0543  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2784     0544  1283               	bcf	3,5	;RP0=0, select bank0
  2785     0545  1303               	bcf	3,6	;RP1=0, select bank0
  2786     0546  0867               	movf	?___flsub+1,w
  2787     0547  1683               	bsf	3,5	;RP0=1, select bank1
  2788     0548  1303               	bcf	3,6	;RP1=0, select bank1
  2789     0549  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2790     054A  1283               	bcf	3,5	;RP0=0, select bank0
  2791     054B  1303               	bcf	3,6	;RP1=0, select bank0
  2792     054C  0866               	movf	?___flsub,w
  2793     054D  1683               	bsf	3,5	;RP0=1, select bank1
  2794     054E  1303               	bcf	3,6	;RP1=0, select bank1
  2795     054F  00BE               	movwf	sprintf@fval^(0+128)
  2796     0550                     l3650:
  2797                           
  2798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2799     0550  01B5               	clrf	sprintf@eexp^(0+128)
  2800     0551  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2801     0552                     l3652:
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2804     0552  01C2               	clrf	sprintf@c^(0+128)
  2805     0553  0AC2               	incf	sprintf@c^(0+128),f
  2806     0554                     l3658:
  2807                           
  2808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2809     0554  0842               	movf	sprintf@c^(0+128),w
  2810     0555  00A5               	movwf	??_sprintf^(0+128)
  2811     0556  3001               	movlw	1
  2812     0557                     u5975:
  2813     0557  1003               	clrc
  2814     0558  0DA5               	rlf	??_sprintf^(0+128),f
  2815     0559  3EFF               	addlw	-1
  2816     055A  1D03               	skipz
  2817     055B  2D57               	goto	u5975
  2818     055C  1003               	clrc
  2819     055D  0D25               	rlf	??_sprintf^(0+128),w
  2820     055E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2821     055F  0084               	movwf	4
  2822     0560  160A  118A  200A  120A  118A  	fcall	stringdir
  2823     0565  00A6               	movwf	(??_sprintf+1)^(0+128)
  2824     0566  160A  118A  200A  120A  118A  	fcall	stringdir
  2825     056B  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2826     056C  160A  118A  200A  120A  118A  	fcall	stringdir
  2827     0571  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2828     0572  160A  118A  200A  120A  118A  	fcall	stringdir
  2829     0577  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2830     0578  0829               	movf	(??_sprintf+4)^(0+128),w
  2831     0579  0234               	subwf	(sprintf@val+3)^(0+128),w
  2832     057A  1D03               	skipz
  2833     057B  2D86               	goto	u5985
  2834     057C  0828               	movf	(??_sprintf+3)^(0+128),w
  2835     057D  0233               	subwf	(sprintf@val+2)^(0+128),w
  2836     057E  1D03               	skipz
  2837     057F  2D86               	goto	u5985
  2838     0580  0827               	movf	(??_sprintf+2)^(0+128),w
  2839     0581  0232               	subwf	(sprintf@val+1)^(0+128),w
  2840     0582  1D03               	skipz
  2841     0583  2D86               	goto	u5985
  2842     0584  0826               	movf	(??_sprintf+1)^(0+128),w
  2843     0585  0231               	subwf	sprintf@val^(0+128),w
  2844     0586                     u5985:
  2845     0586  1803               	skipnc
  2846     0587  2D89               	goto	u5981
  2847     0588  2D8A               	goto	u5980
  2848     0589                     u5981:
  2849     0589  2D8B               	goto	l3662
  2850     058A                     u5980:
  2851     058A  2D95               	goto	l3664
  2852     058B                     l3662:
  2853     058B  3001               	movlw	1
  2854     058C  00A5               	movwf	??_sprintf^(0+128)
  2855     058D  0825               	movf	??_sprintf^(0+128),w
  2856     058E  07C2               	addwf	sprintf@c^(0+128),f
  2857     058F  300A               	movlw	10
  2858     0590  0642               	xorwf	sprintf@c^(0+128),w
  2859     0591  1D03               	btfss	3,2
  2860     0592  2D94               	goto	u5991
  2861     0593  2D95               	goto	u5990
  2862     0594                     u5991:
  2863     0594  2D54               	goto	l3658
  2864     0595                     u5990:
  2865     0595                     l3664:
  2866                           
  2867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2868     0595  3003               	movlw	3
  2869     0596  052F               	andwf	sprintf@flag^(0+128),w
  2870     0597  00A5               	movwf	??_sprintf^(0+128)
  2871     0598  3000               	movlw	0
  2872     0599  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2873     059A  00A6               	movwf	(??_sprintf+1)^(0+128)
  2874     059B  0825               	movf	??_sprintf^(0+128),w
  2875     059C  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2876     059D  1903               	btfsc	3,2
  2877     059E  2DA0               	goto	u6001
  2878     059F  2DA1               	goto	u6000
  2879     05A0                     u6001:
  2880     05A0  2E0F               	goto	l394
  2881     05A1                     u6000:
  2882     05A1                     l3666:
  2883                           
  2884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2885     05A1  083B               	movf	sprintf@sp^(0+128),w
  2886     05A2  0084               	movwf	4
  2887     05A3  302D               	movlw	45
  2888     05A4  1383               	bcf	3,7	;select IRP bank0
  2889     05A5  0080               	movwf	0
  2890     05A6                     l3668:
  2891     05A6  3001               	movlw	1
  2892     05A7  00A5               	movwf	??_sprintf^(0+128)
  2893     05A8  0825               	movf	??_sprintf^(0+128),w
  2894     05A9  07BB               	addwf	sprintf@sp^(0+128),f
  2895     05AA  2E0F               	goto	l394
  2896     05AB                     l3670:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2899     05AB  0842               	movf	sprintf@c^(0+128),w
  2900     05AC  00A5               	movwf	??_sprintf^(0+128)
  2901     05AD  3001               	movlw	1
  2902     05AE                     u6015:
  2903     05AE  1003               	clrc
  2904     05AF  0DA5               	rlf	??_sprintf^(0+128),f
  2905     05B0  3EFF               	addlw	-1
  2906     05B1  1D03               	skipz
  2907     05B2  2DAE               	goto	u6015
  2908     05B3  1003               	clrc
  2909     05B4  0D25               	rlf	??_sprintf^(0+128),w
  2910     05B5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2911     05B6  0084               	movwf	4
  2912     05B7  160A  118A  200A  120A  118A  	fcall	stringdir
  2913     05BC  00F0               	movwf	___lldiv@divisor
  2914     05BD  160A  118A  200A  120A  118A  	fcall	stringdir
  2915     05C2  00F1               	movwf	___lldiv@divisor+1
  2916     05C3  160A  118A  200A  120A  118A  	fcall	stringdir
  2917     05C8  00F2               	movwf	___lldiv@divisor+2
  2918     05C9  160A  118A  200A  120A  118A  	fcall	stringdir
  2919     05CE  00F3               	movwf	___lldiv@divisor+3
  2920     05CF  0834               	movf	(sprintf@val+3)^(0+128),w
  2921     05D0  00F7               	movwf	___lldiv@dividend+3
  2922     05D1  0833               	movf	(sprintf@val+2)^(0+128),w
  2923     05D2  00F6               	movwf	___lldiv@dividend+2
  2924     05D3  0832               	movf	(sprintf@val+1)^(0+128),w
  2925     05D4  00F5               	movwf	___lldiv@dividend+1
  2926     05D5  0831               	movf	sprintf@val^(0+128),w
  2927     05D6  00F4               	movwf	___lldiv@dividend
  2928     05D7  160A  158A  2722  120A  118A  	fcall	___lldiv
  2929     05DC  0873               	movf	?___lldiv+3,w
  2930     05DD  1683               	bsf	3,5	;RP0=1, select bank1
  2931     05DE  1303               	bcf	3,6	;RP1=0, select bank1
  2932     05DF  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2933     05E0  0872               	movf	?___lldiv+2,w
  2934     05E1  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2935     05E2  0871               	movf	?___lldiv+1,w
  2936     05E3  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2937     05E4  0870               	movf	?___lldiv,w
  2938     05E5  00B7               	movwf	sprintf@tmpval^(0+128)
  2939     05E6                     l3672:
  2940                           
  2941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2942     05E6  3000               	movlw	0
  2943     05E7  00F3               	movwf	___llmod@divisor+3
  2944     05E8  3000               	movlw	0
  2945     05E9  00F2               	movwf	___llmod@divisor+2
  2946     05EA  3000               	movlw	0
  2947     05EB  00F1               	movwf	___llmod@divisor+1
  2948     05EC  300A               	movlw	10
  2949     05ED  00F0               	movwf	___llmod@divisor
  2950     05EE  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2951     05EF  00F7               	movwf	___llmod@dividend+3
  2952     05F0  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2953     05F1  00F6               	movwf	___llmod@dividend+2
  2954     05F2  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2955     05F3  00F5               	movwf	___llmod@dividend+1
  2956     05F4  0837               	movf	sprintf@tmpval^(0+128),w
  2957     05F5  00F4               	movwf	___llmod@dividend
  2958     05F6  160A  158A  25B9  120A  118A  	fcall	___llmod
  2959     05FB  0873               	movf	?___llmod+3,w
  2960     05FC  1683               	bsf	3,5	;RP0=1, select bank1
  2961     05FD  1303               	bcf	3,6	;RP1=0, select bank1
  2962     05FE  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2963     05FF  0872               	movf	?___llmod+2,w
  2964     0600  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2965     0601  0871               	movf	?___llmod+1,w
  2966     0602  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2967     0603  0870               	movf	?___llmod,w
  2968     0604  00B7               	movwf	sprintf@tmpval^(0+128)
  2969     0605                     l3674:
  2970                           
  2971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2972     0605  083B               	movf	sprintf@sp^(0+128),w
  2973     0606  0084               	movwf	4
  2974     0607  0837               	movf	sprintf@tmpval^(0+128),w
  2975     0608  3E30               	addlw	48
  2976     0609  1383               	bcf	3,7	;select IRP bank0
  2977     060A  0080               	movwf	0
  2978     060B  3001               	movlw	1
  2979     060C  00A5               	movwf	??_sprintf^(0+128)
  2980     060D  0825               	movf	??_sprintf^(0+128),w
  2981     060E  07BB               	addwf	sprintf@sp^(0+128),f
  2982     060F                     l394:	
  2983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  2984                           
  2985                           
  2986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2987     060F  3001               	movlw	1
  2988     0610  02C2               	subwf	sprintf@c^(0+128),f
  2989     0611  0A42               	incf	sprintf@c^(0+128),w
  2990     0612  1D03               	btfss	3,2
  2991     0613  2E15               	goto	u6021
  2992     0614  2E16               	goto	u6020
  2993     0615                     u6021:
  2994     0615  2DAB               	goto	l3670
  2995     0616                     u6020:
  2996     0616  2E28               	goto	l3682
  2997     0617                     l3676:
  2998                           
  2999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3000     0617  1683               	bsf	3,5	;RP0=1, select bank1
  3001     0618  1303               	bcf	3,6	;RP1=0, select bank1
  3002     0619  083B               	movf	sprintf@sp^(0+128),w
  3003     061A  0084               	movwf	4
  3004     061B  3030               	movlw	48
  3005     061C  1383               	bcf	3,7	;select IRP bank0
  3006     061D  0080               	movwf	0
  3007     061E                     l3678:
  3008     061E  3001               	movlw	1
  3009     061F  00A5               	movwf	??_sprintf^(0+128)
  3010     0620  0825               	movf	??_sprintf^(0+128),w
  3011     0621  07BB               	addwf	sprintf@sp^(0+128),f
  3012     0622                     l3680:
  3013                           
  3014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3015     0622  30FF               	movlw	255
  3016     0623  07B5               	addwf	sprintf@eexp^(0+128),f
  3017     0624  1803               	skipnc
  3018     0625  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3019     0626  30FF               	movlw	255
  3020     0627  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3021     0628                     l3682:
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3024     0628  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3025     0629  3A80               	xorlw	128
  3026     062A  00FF               	movwf	btemp+1
  3027     062B  3080               	movlw	128
  3028     062C  027F               	subwf	btemp+1,w
  3029     062D  1D03               	skipz
  3030     062E  2E31               	goto	u6035
  3031     062F  3001               	movlw	1
  3032     0630  0235               	subwf	sprintf@eexp^(0+128),w
  3033     0631                     u6035:
  3034     0631  1803               	skipnc
  3035     0632  2E34               	goto	u6031
  3036     0633  2E35               	goto	u6030
  3037     0634                     u6031:
  3038     0634  2E17               	goto	l3676
  3039     0635                     u6030:
  3040     0635                     l3684:
  3041                           
  3042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3043     0635  1683               	bsf	3,5	;RP0=1, select bank1
  3044     0636  1303               	bcf	3,6	;RP1=0, select bank1
  3045     0637  083D               	movf	(sprintf@prec+1)^(0+128),w
  3046     0638  3A80               	xorlw	128
  3047     0639  00FF               	movwf	btemp+1
  3048     063A  3080               	movlw	128
  3049     063B  027F               	subwf	btemp+1,w
  3050     063C  1D03               	skipz
  3051     063D  2E40               	goto	u6045
  3052     063E  3009               	movlw	9
  3053     063F  023C               	subwf	sprintf@prec^(0+128),w
  3054     0640                     u6045:
  3055     0640  1C03               	skipc
  3056     0641  2E43               	goto	u6041
  3057     0642  2E44               	goto	u6040
  3058     0643                     u6041:
  3059     0643  2E49               	goto	l3688
  3060     0644                     u6040:
  3061     0644                     l3686:
  3062                           
  3063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3064     0644  3008               	movlw	8
  3065     0645  1683               	bsf	3,5	;RP0=1, select bank1
  3066     0646  1303               	bcf	3,6	;RP1=0, select bank1
  3067     0647  00C2               	movwf	sprintf@c^(0+128)
  3068     0648  2E4D               	goto	l401
  3069     0649                     l3688:
  3070                           
  3071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3072     0649  1683               	bsf	3,5	;RP0=1, select bank1
  3073     064A  1303               	bcf	3,6	;RP1=0, select bank1
  3074     064B  083C               	movf	sprintf@prec^(0+128),w
  3075     064C  00C2               	movwf	sprintf@c^(0+128)
  3076     064D                     l401:
  3077                           
  3078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3079     064D  0842               	movf	sprintf@c^(0+128),w
  3080     064E  00A5               	movwf	??_sprintf^(0+128)
  3081     064F  01A6               	clrf	(??_sprintf^(0+128)+1)
  3082     0650  0825               	movf	??_sprintf^(0+128),w
  3083     0651  02BC               	subwf	sprintf@prec^(0+128),f
  3084     0652  0826               	movf	(??_sprintf+1)^(0+128),w
  3085     0653  1C03               	skipc
  3086     0654  03BD               	decf	(sprintf@prec+1)^(0+128),f
  3087     0655  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  3088     0656                     l3690:
  3089                           
  3090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3091     0656  0842               	movf	sprintf@c^(0+128),w
  3092     0657  1903               	btfsc	3,2
  3093     0658  2E5A               	goto	u6051
  3094     0659  2E5B               	goto	u6050
  3095     065A                     u6051:
  3096     065A  2E64               	goto	l3696
  3097     065B                     u6050:
  3098     065B                     l3692:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3101     065B  083B               	movf	sprintf@sp^(0+128),w
  3102     065C  0084               	movwf	4
  3103     065D  302E               	movlw	46
  3104     065E  1383               	bcf	3,7	;select IRP bank0
  3105     065F  0080               	movwf	0
  3106     0660                     l3694:
  3107     0660  3001               	movlw	1
  3108     0661  00A5               	movwf	??_sprintf^(0+128)
  3109     0662  0825               	movf	??_sprintf^(0+128),w
  3110     0663  07BB               	addwf	sprintf@sp^(0+128),f
  3111     0664                     l3696:
  3112                           
  3113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3114     0664  0842               	movf	sprintf@c^(0+128),w
  3115     0665  120A  158A  24A1  120A  118A  	fcall	_scale
  3116     066A  1283               	bcf	3,5	;RP0=0, select bank0
  3117     066B  1303               	bcf	3,6	;RP1=0, select bank0
  3118     066C  0841               	movf	?_scale+3,w
  3119     066D  1683               	bsf	3,5	;RP0=1, select bank1
  3120     066E  1303               	bcf	3,6	;RP1=0, select bank1
  3121     066F  00AD               	movwf	(_sprintf$1018+3)^(0+128)
  3122     0670  1283               	bcf	3,5	;RP0=0, select bank0
  3123     0671  1303               	bcf	3,6	;RP1=0, select bank0
  3124     0672  0840               	movf	?_scale+2,w
  3125     0673  1683               	bsf	3,5	;RP0=1, select bank1
  3126     0674  1303               	bcf	3,6	;RP1=0, select bank1
  3127     0675  00AC               	movwf	(_sprintf$1018+2)^(0+128)
  3128     0676  1283               	bcf	3,5	;RP0=0, select bank0
  3129     0677  1303               	bcf	3,6	;RP1=0, select bank0
  3130     0678  083F               	movf	?_scale+1,w
  3131     0679  1683               	bsf	3,5	;RP0=1, select bank1
  3132     067A  1303               	bcf	3,6	;RP1=0, select bank1
  3133     067B  00AB               	movwf	(_sprintf$1018+1)^(0+128)
  3134     067C  1283               	bcf	3,5	;RP0=0, select bank0
  3135     067D  1303               	bcf	3,6	;RP1=0, select bank0
  3136     067E  083E               	movf	?_scale,w
  3137     067F  1683               	bsf	3,5	;RP0=1, select bank1
  3138     0680  1303               	bcf	3,6	;RP1=0, select bank1
  3139     0681  00AA               	movwf	_sprintf$1018^(0+128)
  3140     0682                     l3698:
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3143     0682  082D               	movf	(_sprintf$1018+3)^(0+128),w
  3144     0683  1283               	bcf	3,5	;RP0=0, select bank0
  3145     0684  1303               	bcf	3,6	;RP1=0, select bank0
  3146     0685  00AB               	movwf	___flmul@a+3
  3147     0686  1683               	bsf	3,5	;RP0=1, select bank1
  3148     0687  1303               	bcf	3,6	;RP1=0, select bank1
  3149     0688  082C               	movf	(_sprintf$1018+2)^(0+128),w
  3150     0689  1283               	bcf	3,5	;RP0=0, select bank0
  3151     068A  1303               	bcf	3,6	;RP1=0, select bank0
  3152     068B  00AA               	movwf	___flmul@a+2
  3153     068C  1683               	bsf	3,5	;RP0=1, select bank1
  3154     068D  1303               	bcf	3,6	;RP1=0, select bank1
  3155     068E  082B               	movf	(_sprintf$1018+1)^(0+128),w
  3156     068F  1283               	bcf	3,5	;RP0=0, select bank0
  3157     0690  1303               	bcf	3,6	;RP1=0, select bank0
  3158     0691  00A9               	movwf	___flmul@a+1
  3159     0692  1683               	bsf	3,5	;RP0=1, select bank1
  3160     0693  1303               	bcf	3,6	;RP1=0, select bank1
  3161     0694  082A               	movf	_sprintf$1018^(0+128),w
  3162     0695  1283               	bcf	3,5	;RP0=0, select bank0
  3163     0696  1303               	bcf	3,6	;RP1=0, select bank0
  3164     0697  00A8               	movwf	___flmul@a
  3165     0698  1683               	bsf	3,5	;RP0=1, select bank1
  3166     0699  1303               	bcf	3,6	;RP1=0, select bank1
  3167     069A  0841               	movf	(sprintf@fval+3)^(0+128),w
  3168     069B  1283               	bcf	3,5	;RP0=0, select bank0
  3169     069C  1303               	bcf	3,6	;RP1=0, select bank0
  3170     069D  00A7               	movwf	___flmul@b+3
  3171     069E  1683               	bsf	3,5	;RP0=1, select bank1
  3172     069F  1303               	bcf	3,6	;RP1=0, select bank1
  3173     06A0  0840               	movf	(sprintf@fval+2)^(0+128),w
  3174     06A1  1283               	bcf	3,5	;RP0=0, select bank0
  3175     06A2  1303               	bcf	3,6	;RP1=0, select bank0
  3176     06A3  00A6               	movwf	___flmul@b+2
  3177     06A4  1683               	bsf	3,5	;RP0=1, select bank1
  3178     06A5  1303               	bcf	3,6	;RP1=0, select bank1
  3179     06A6  083F               	movf	(sprintf@fval+1)^(0+128),w
  3180     06A7  1283               	bcf	3,5	;RP0=0, select bank0
  3181     06A8  1303               	bcf	3,6	;RP1=0, select bank0
  3182     06A9  00A5               	movwf	___flmul@b+1
  3183     06AA  1683               	bsf	3,5	;RP0=1, select bank1
  3184     06AB  1303               	bcf	3,6	;RP1=0, select bank1
  3185     06AC  083E               	movf	sprintf@fval^(0+128),w
  3186     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3187     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3188     06AF  00A4               	movwf	___flmul@b
  3189     06B0  120A  158A  215C  120A  118A  	fcall	___flmul
  3190     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  3191     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  3192     06B7  0827               	movf	?___flmul+3,w
  3193     06B8  00D4               	movwf	___fltol@f1+3
  3194     06B9  0826               	movf	?___flmul+2,w
  3195     06BA  00D3               	movwf	___fltol@f1+2
  3196     06BB  0825               	movf	?___flmul+1,w
  3197     06BC  00D2               	movwf	___fltol@f1+1
  3198     06BD  0824               	movf	?___flmul,w
  3199     06BE  00D1               	movwf	___fltol@f1
  3200     06BF  160A  158A  2788  120A  118A  	fcall	___fltol
  3201     06C4  1283               	bcf	3,5	;RP0=0, select bank0
  3202     06C5  1303               	bcf	3,6	;RP1=0, select bank0
  3203     06C6  0854               	movf	?___fltol+3,w
  3204     06C7  1683               	bsf	3,5	;RP0=1, select bank1
  3205     06C8  1303               	bcf	3,6	;RP1=0, select bank1
  3206     06C9  00B4               	movwf	(sprintf@val+3)^(0+128)
  3207     06CA  1283               	bcf	3,5	;RP0=0, select bank0
  3208     06CB  1303               	bcf	3,6	;RP1=0, select bank0
  3209     06CC  0853               	movf	?___fltol+2,w
  3210     06CD  1683               	bsf	3,5	;RP0=1, select bank1
  3211     06CE  1303               	bcf	3,6	;RP1=0, select bank1
  3212     06CF  00B3               	movwf	(sprintf@val+2)^(0+128)
  3213     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  3214     06D1  1303               	bcf	3,6	;RP1=0, select bank0
  3215     06D2  0852               	movf	?___fltol+1,w
  3216     06D3  1683               	bsf	3,5	;RP0=1, select bank1
  3217     06D4  1303               	bcf	3,6	;RP1=0, select bank1
  3218     06D5  00B2               	movwf	(sprintf@val+1)^(0+128)
  3219     06D6  1283               	bcf	3,5	;RP0=0, select bank0
  3220     06D7  1303               	bcf	3,6	;RP1=0, select bank0
  3221     06D8  0851               	movf	?___fltol,w
  3222     06D9  1683               	bsf	3,5	;RP0=1, select bank1
  3223     06DA  1303               	bcf	3,6	;RP1=0, select bank1
  3224     06DB  00B1               	movwf	sprintf@val^(0+128)
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3227     06DC  2F7C               	goto	l3708
  3228     06DD                     l3700:
  3229                           
  3230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3231     06DD  0842               	movf	sprintf@c^(0+128),w
  3232     06DE  00A5               	movwf	??_sprintf^(0+128)
  3233     06DF  3001               	movlw	1
  3234     06E0                     u6065:
  3235     06E0  1003               	clrc
  3236     06E1  0DA5               	rlf	??_sprintf^(0+128),f
  3237     06E2  3EFF               	addlw	-1
  3238     06E3  1D03               	skipz
  3239     06E4  2EE0               	goto	u6065
  3240     06E5  1003               	clrc
  3241     06E6  0D25               	rlf	??_sprintf^(0+128),w
  3242     06E7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3243     06E8  0084               	movwf	4
  3244     06E9  160A  118A  200A  120A  118A  	fcall	stringdir
  3245     06EE  00F0               	movwf	___lldiv@divisor
  3246     06EF  160A  118A  200A  120A  118A  	fcall	stringdir
  3247     06F4  00F1               	movwf	___lldiv@divisor+1
  3248     06F5  160A  118A  200A  120A  118A  	fcall	stringdir
  3249     06FA  00F2               	movwf	___lldiv@divisor+2
  3250     06FB  160A  118A  200A  120A  118A  	fcall	stringdir
  3251     0700  00F3               	movwf	___lldiv@divisor+3
  3252     0701  0834               	movf	(sprintf@val+3)^(0+128),w
  3253     0702  00F7               	movwf	___lldiv@dividend+3
  3254     0703  0833               	movf	(sprintf@val+2)^(0+128),w
  3255     0704  00F6               	movwf	___lldiv@dividend+2
  3256     0705  0832               	movf	(sprintf@val+1)^(0+128),w
  3257     0706  00F5               	movwf	___lldiv@dividend+1
  3258     0707  0831               	movf	sprintf@val^(0+128),w
  3259     0708  00F4               	movwf	___lldiv@dividend
  3260     0709  160A  158A  2722  120A  118A  	fcall	___lldiv
  3261     070E  0873               	movf	?___lldiv+3,w
  3262     070F  1683               	bsf	3,5	;RP0=1, select bank1
  3263     0710  1303               	bcf	3,6	;RP1=0, select bank1
  3264     0711  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3265     0712  0872               	movf	?___lldiv+2,w
  3266     0713  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3267     0714  0871               	movf	?___lldiv+1,w
  3268     0715  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3269     0716  0870               	movf	?___lldiv,w
  3270     0717  00B7               	movwf	sprintf@tmpval^(0+128)
  3271     0718                     l3702:
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3274     0718  3000               	movlw	0
  3275     0719  00F3               	movwf	___llmod@divisor+3
  3276     071A  3000               	movlw	0
  3277     071B  00F2               	movwf	___llmod@divisor+2
  3278     071C  3000               	movlw	0
  3279     071D  00F1               	movwf	___llmod@divisor+1
  3280     071E  300A               	movlw	10
  3281     071F  00F0               	movwf	___llmod@divisor
  3282     0720  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3283     0721  00F7               	movwf	___llmod@dividend+3
  3284     0722  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3285     0723  00F6               	movwf	___llmod@dividend+2
  3286     0724  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3287     0725  00F5               	movwf	___llmod@dividend+1
  3288     0726  0837               	movf	sprintf@tmpval^(0+128),w
  3289     0727  00F4               	movwf	___llmod@dividend
  3290     0728  160A  158A  25B9  120A  118A  	fcall	___llmod
  3291     072D  0873               	movf	?___llmod+3,w
  3292     072E  1683               	bsf	3,5	;RP0=1, select bank1
  3293     072F  1303               	bcf	3,6	;RP1=0, select bank1
  3294     0730  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3295     0731  0872               	movf	?___llmod+2,w
  3296     0732  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3297     0733  0871               	movf	?___llmod+1,w
  3298     0734  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3299     0735  0870               	movf	?___llmod,w
  3300     0736  00B7               	movwf	sprintf@tmpval^(0+128)
  3301     0737                     l3704:
  3302                           
  3303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3304     0737  083B               	movf	sprintf@sp^(0+128),w
  3305     0738  0084               	movwf	4
  3306     0739  0837               	movf	sprintf@tmpval^(0+128),w
  3307     073A  3E30               	addlw	48
  3308     073B  1383               	bcf	3,7	;select IRP bank0
  3309     073C  0080               	movwf	0
  3310     073D  3001               	movlw	1
  3311     073E  00A5               	movwf	??_sprintf^(0+128)
  3312     073F  0825               	movf	??_sprintf^(0+128),w
  3313     0740  07BB               	addwf	sprintf@sp^(0+128),f
  3314     0741                     l3706:
  3315                           
  3316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3317     0741  0842               	movf	sprintf@c^(0+128),w
  3318     0742  00A5               	movwf	??_sprintf^(0+128)
  3319     0743  3001               	movlw	1
  3320     0744                     u6075:
  3321     0744  1003               	clrc
  3322     0745  0DA5               	rlf	??_sprintf^(0+128),f
  3323     0746  3EFF               	addlw	-1
  3324     0747  1D03               	skipz
  3325     0748  2F44               	goto	u6075
  3326     0749  1003               	clrc
  3327     074A  0D25               	rlf	??_sprintf^(0+128),w
  3328     074B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3329     074C  0084               	movwf	4
  3330     074D  160A  118A  200A  120A  118A  	fcall	stringdir
  3331     0752  00F0               	movwf	___llmod@divisor
  3332     0753  160A  118A  200A  120A  118A  	fcall	stringdir
  3333     0758  00F1               	movwf	___llmod@divisor+1
  3334     0759  160A  118A  200A  120A  118A  	fcall	stringdir
  3335     075E  00F2               	movwf	___llmod@divisor+2
  3336     075F  160A  118A  200A  120A  118A  	fcall	stringdir
  3337     0764  00F3               	movwf	___llmod@divisor+3
  3338     0765  0834               	movf	(sprintf@val+3)^(0+128),w
  3339     0766  00F7               	movwf	___llmod@dividend+3
  3340     0767  0833               	movf	(sprintf@val+2)^(0+128),w
  3341     0768  00F6               	movwf	___llmod@dividend+2
  3342     0769  0832               	movf	(sprintf@val+1)^(0+128),w
  3343     076A  00F5               	movwf	___llmod@dividend+1
  3344     076B  0831               	movf	sprintf@val^(0+128),w
  3345     076C  00F4               	movwf	___llmod@dividend
  3346     076D  160A  158A  25B9  120A  118A  	fcall	___llmod
  3347     0772  0873               	movf	?___llmod+3,w
  3348     0773  1683               	bsf	3,5	;RP0=1, select bank1
  3349     0774  1303               	bcf	3,6	;RP1=0, select bank1
  3350     0775  00B4               	movwf	(sprintf@val+3)^(0+128)
  3351     0776  0872               	movf	?___llmod+2,w
  3352     0777  00B3               	movwf	(sprintf@val+2)^(0+128)
  3353     0778  0871               	movf	?___llmod+1,w
  3354     0779  00B2               	movwf	(sprintf@val+1)^(0+128)
  3355     077A  0870               	movf	?___llmod,w
  3356     077B  00B1               	movwf	sprintf@val^(0+128)
  3357     077C                     l3708:
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3360     077C  3001               	movlw	1
  3361     077D  02C2               	subwf	sprintf@c^(0+128),f
  3362     077E  0A42               	incf	sprintf@c^(0+128),w
  3363     077F  1D03               	btfss	3,2
  3364     0780  2F82               	goto	u6081
  3365     0781  2F83               	goto	u6080
  3366     0782                     u6081:
  3367     0782  2EDD               	goto	l3700
  3368     0783                     u6080:
  3369     0783  2F93               	goto	l3716
  3370     0784                     l3710:
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3373     0784  083B               	movf	sprintf@sp^(0+128),w
  3374     0785  0084               	movwf	4
  3375     0786  3030               	movlw	48
  3376     0787  1383               	bcf	3,7	;select IRP bank0
  3377     0788  0080               	movwf	0
  3378     0789                     l3712:
  3379     0789  3001               	movlw	1
  3380     078A  00A5               	movwf	??_sprintf^(0+128)
  3381     078B  0825               	movf	??_sprintf^(0+128),w
  3382     078C  07BB               	addwf	sprintf@sp^(0+128),f
  3383     078D                     l3714:
  3384                           
  3385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3386     078D  30FF               	movlw	255
  3387     078E  07BC               	addwf	sprintf@prec^(0+128),f
  3388     078F  1803               	skipnc
  3389     0790  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3390     0791  30FF               	movlw	255
  3391     0792  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3392     0793                     l3716:
  3393                           
  3394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3395     0793  083C               	movf	sprintf@prec^(0+128),w
  3396     0794  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3397     0795  1D03               	btfss	3,2
  3398     0796  2F98               	goto	u6091
  3399     0797  2F99               	goto	u6090
  3400     0798                     u6091:
  3401     0798  2F84               	goto	l3710
  3402     0799                     u6090:
  3403     0799  2FDD               	goto	l3736
  3404     079A                     l3718:
  3405                           
  3406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3407     079A  083C               	movf	sprintf@prec^(0+128),w
  3408     079B  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3409     079C  1D03               	btfss	3,2
  3410     079D  2F9F               	goto	u6101
  3411     079E  2FA0               	goto	u6100
  3412     079F                     u6101:
  3413     079F  2FAE               	goto	l409
  3414     07A0                     u6100:
  3415     07A0                     l3720:
  3416     07A0  0834               	movf	(sprintf@val+3)^(0+128),w
  3417     07A1  0433               	iorwf	(sprintf@val+2)^(0+128),w
  3418     07A2  0432               	iorwf	(sprintf@val+1)^(0+128),w
  3419     07A3  0431               	iorwf	sprintf@val^(0+128),w
  3420     07A4  1D03               	skipz
  3421     07A5  2FA7               	goto	u6111
  3422     07A6  2FA8               	goto	u6110
  3423     07A7                     u6111:
  3424     07A7  2FAE               	goto	l409
  3425     07A8                     u6110:
  3426     07A8                     l3722:
  3427                           
  3428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3429     07A8  3001               	movlw	1
  3430     07A9  07BC               	addwf	sprintf@prec^(0+128),f
  3431     07AA  1803               	skipnc
  3432     07AB  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3433     07AC  3000               	movlw	0
  3434     07AD  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3435     07AE                     l409:
  3436                           
  3437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3438     07AE  083D               	movf	(sprintf@prec+1)^(0+128),w
  3439     07AF  3A80               	xorlw	128
  3440     07B0  3C80               	sublw	128
  3441     07B1  1D03               	skipz
  3442     07B2  2FB5               	goto	u6125
  3443     07B3  083C               	movf	sprintf@prec^(0+128),w
  3444     07B4  0242               	subwf	sprintf@c^(0+128),w
  3445     07B5                     u6125:
  3446     07B5  1803               	skipnc
  3447     07B6  2FB8               	goto	u6121
  3448     07B7  2FB9               	goto	u6120
  3449     07B8                     u6121:
  3450     07B8  2FBA               	goto	l3726
  3451     07B9                     u6120:
  3452     07B9                     l3724:
  3453     07B9  2FC9               	goto	l3730
  3454     07BA                     l3726:
  3455     07BA  1683               	bsf	3,5	;RP0=1, select bank1
  3456     07BB  1303               	bcf	3,6	;RP1=0, select bank1
  3457     07BC  083D               	movf	(sprintf@prec+1)^(0+128),w
  3458     07BD  3A80               	xorlw	128
  3459     07BE  00A5               	movwf	??_sprintf^(0+128)
  3460     07BF  3080               	movlw	128
  3461     07C0  0225               	subwf	??_sprintf^(0+128),w
  3462     07C1  1D03               	skipz
  3463     07C2  2FC5               	goto	u6135
  3464     07C3  0842               	movf	sprintf@c^(0+128),w
  3465     07C4  023C               	subwf	sprintf@prec^(0+128),w
  3466     07C5                     u6135:
  3467     07C5  1803               	skipnc
  3468     07C6  2FC8               	goto	u6131
  3469     07C7  2FC9               	goto	u6130
  3470     07C8                     u6131:
  3471     07C8  2FC9               	goto	l3730
  3472     07C9                     u6130:
  3473     07C9                     l3728:
  3474     07C9                     l3730:
  3475                           
  3476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3477     07C9  3003               	movlw	3
  3478     07CA  1683               	bsf	3,5	;RP0=1, select bank1
  3479     07CB  1303               	bcf	3,6	;RP1=0, select bank1
  3480     07CC  052F               	andwf	sprintf@flag^(0+128),w
  3481     07CD  00A5               	movwf	??_sprintf^(0+128)
  3482     07CE  3000               	movlw	0
  3483     07CF  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3484     07D0  00A6               	movwf	(??_sprintf+1)^(0+128)
  3485     07D1  0825               	movf	??_sprintf^(0+128),w
  3486     07D2  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3487     07D3  1903               	btfsc	3,2
  3488     07D4  2FD6               	goto	u6141
  3489     07D5  2FD7               	goto	u6140
  3490     07D6                     u6141:
  3491     07D6  2FDD               	goto	l3736
  3492     07D7                     u6140:
  3493     07D7                     l3732:
  3494                           
  3495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3496     07D7  083B               	movf	sprintf@sp^(0+128),w
  3497     07D8  0084               	movwf	4
  3498     07D9  302D               	movlw	45
  3499     07DA  1383               	bcf	3,7	;select IRP bank0
  3500     07DB  0080               	movwf	0
  3501     07DC  29C3               	goto	l3548
  3502     07DD                     l3736:
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3505     07DD  3001               	movlw	1
  3506     07DE  07A0               	addwf	sprintf@f^(0+128),f
  3507     07DF  30FF               	movlw	-1
  3508     07E0  0720               	addwf	sprintf@f^(0+128),w
  3509     07E1  0084               	movwf	4
  3510     07E2  160A  118A  200A  120A  118A  	fcall	stringdir
  3511     07E7  00C2               	movwf	sprintf@c^(0+128)
  3512     07E8  0842               	movf	sprintf@c^(0+128),w
  3513     07E9  1D03               	btfss	3,2
  3514     07EA  2FEC               	goto	u6151
  3515     07EB  2FED               	goto	u6150
  3516     07EC                     u6151:
  3517     07EC  29B8               	goto	l3544
  3518     07ED                     u6150:
  3519     07ED                     l3738:
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3522     07ED  083B               	movf	sprintf@sp^(0+128),w
  3523     07EE  0084               	movwf	4
  3524     07EF  1383               	bcf	3,7	;select IRP bank0
  3525     07F0  0180               	clrf	0
  3526     07F1                     l415:
  3527     07F1  0008               	return
  3528     07F2                     __end_of_sprintf:
  3529                           
  3530                           	psect	text2
  3531     0CA1                     __ptext2:	
  3532 ;; *************** function _scale *****************
  3533 ;; Defined at:
  3534 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  scl             1    wreg     char 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  scl             1   48[BANK0 ] char 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  4   30[BANK0 ] char 
  3541 ;; Registers used:
  3542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3548 ;;      Params:         0       4       0       0       0
  3549 ;;      Locals:         0       5       0       0       0
  3550 ;;      Temps:          0      10       0       0       0
  3551 ;;      Totals:         0      19       0       0       0
  3552 ;;Total ram usage:       19 bytes
  3553 ;; Hardware stack levels used: 1
  3554 ;; Hardware stack levels required when called: 2
  3555 ;; This function calls:
  3556 ;;		___awdiv
  3557 ;;		___awmod
  3558 ;;		___flmul
  3559 ;; This function is called by:
  3560 ;;		_sprintf
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564     0CA1                     _scale:	
  3565                           ;psect for function _scale
  3566                           
  3567                           
  3568                           ;incstack = 0
  3569                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3570                           ;scale@scl stored from wreg
  3571     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  3572     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  3573     0CA3  00D0               	movwf	scale@scl
  3574     0CA4                     l3134:
  3575                           
  3576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3577     0CA4  1FD0               	btfss	scale@scl,7
  3578     0CA5  2CA7               	goto	u4751
  3579     0CA6  2CA8               	goto	u4750
  3580     0CA7                     u4751:
  3581     0CA7  2E55               	goto	l3156
  3582     0CA8                     u4750:
  3583     0CA8                     l3136:
  3584                           
  3585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3586     0CA8  09D0               	comf	scale@scl,f
  3587     0CA9  0AD0               	incf	scale@scl,f
  3588     0CAA                     l3138:
  3589                           
  3590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3591     0CAA  0850               	movf	scale@scl,w
  3592     0CAB  3A80               	xorlw	128
  3593     0CAC  3E12               	addlw	-238
  3594     0CAD  1C03               	skipc
  3595     0CAE  2CB0               	goto	u4761
  3596     0CAF  2CB1               	goto	u4760
  3597     0CB0                     u4761:
  3598     0CB0  2D99               	goto	l3146
  3599     0CB1                     u4760:
  3600     0CB1                     l3140:
  3601                           
  3602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3603     0CB1  300A               	movlw	10
  3604     0CB2  00F7               	movwf	___awdiv@divisor
  3605     0CB3  3000               	movlw	0
  3606     0CB4  00F8               	movwf	___awdiv@divisor+1
  3607     0CB5  0850               	movf	scale@scl,w
  3608     0CB6  00F2               	movwf	___awmod@dividend
  3609     0CB7  01F3               	clrf	___awmod@dividend+1
  3610     0CB8  1BF2               	btfsc	___awmod@dividend,7
  3611     0CB9  03F3               	decf	___awmod@dividend+1,f
  3612     0CBA  3064               	movlw	100
  3613     0CBB  00F0               	movwf	___awmod@divisor
  3614     0CBC  3000               	movlw	0
  3615     0CBD  00F1               	movwf	___awmod@divisor+1
  3616     0CBE  160A  158A  260D  120A  158A  	fcall	___awmod
  3617     0CC3  0871               	movf	?___awmod+1,w
  3618     0CC4  00FA               	movwf	___awdiv@dividend+1
  3619     0CC5  0870               	movf	?___awmod,w
  3620     0CC6  00F9               	movwf	___awdiv@dividend
  3621     0CC7  160A  118A  20AA  120A  158A  	fcall	___awdiv
  3622     0CCC  0877               	movf	?___awdiv,w
  3623     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  3624     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  3625     0CCF  00C2               	movwf	??_scale
  3626     0CD0  3001               	movlw	1
  3627     0CD1                     u4775:
  3628     0CD1  1003               	clrc
  3629     0CD2  0DC2               	rlf	??_scale,f
  3630     0CD3  3EFF               	addlw	-1
  3631     0CD4  1D03               	skipz
  3632     0CD5  2CD1               	goto	u4775
  3633     0CD6  1003               	clrc
  3634     0CD7  0D42               	rlf	??_scale,w
  3635     0CD8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3636     0CD9  0084               	movwf	4
  3637     0CDA  160A  118A  200A  120A  158A  	fcall	stringdir
  3638     0CDF  00C3               	movwf	??_scale+1
  3639     0CE0  160A  118A  200A  120A  158A  	fcall	stringdir
  3640     0CE5  00C4               	movwf	??_scale+2
  3641     0CE6  160A  118A  200A  120A  158A  	fcall	stringdir
  3642     0CEB  00C5               	movwf	??_scale+3
  3643     0CEC  160A  118A  200A  120A  158A  	fcall	stringdir
  3644     0CF1  00C6               	movwf	??_scale+4
  3645     0CF2  0846               	movf	??_scale+4,w
  3646     0CF3  00A7               	movwf	___flmul@b+3
  3647     0CF4  0845               	movf	??_scale+3,w
  3648     0CF5  00A6               	movwf	___flmul@b+2
  3649     0CF6  0844               	movf	??_scale+2,w
  3650     0CF7  00A5               	movwf	___flmul@b+1
  3651     0CF8  0843               	movf	??_scale+1,w
  3652     0CF9  00A4               	movwf	___flmul@b
  3653     0CFA  3064               	movlw	100
  3654     0CFB  00F7               	movwf	___awdiv@divisor
  3655     0CFC  3000               	movlw	0
  3656     0CFD  00F8               	movwf	___awdiv@divisor+1
  3657     0CFE  0850               	movf	scale@scl,w
  3658     0CFF  00F9               	movwf	___awdiv@dividend
  3659     0D00  01FA               	clrf	___awdiv@dividend+1
  3660     0D01  1BF9               	btfsc	___awdiv@dividend,7
  3661     0D02  03FA               	decf	___awdiv@dividend+1,f
  3662     0D03  160A  118A  20AA  120A  158A  	fcall	___awdiv
  3663     0D08  0877               	movf	?___awdiv,w
  3664     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  3665     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  3666     0D0B  00C7               	movwf	??_scale+5
  3667     0D0C  3001               	movlw	1
  3668     0D0D                     u4785:
  3669     0D0D  1003               	clrc
  3670     0D0E  0DC7               	rlf	??_scale+5,f
  3671     0D0F  3EFF               	addlw	-1
  3672     0D10  1D03               	skipz
  3673     0D11  2D0D               	goto	u4785
  3674     0D12  1003               	clrc
  3675     0D13  0D47               	rlf	??_scale+5,w
  3676     0D14  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3677     0D15  0084               	movwf	4
  3678     0D16  160A  118A  200A  120A  158A  	fcall	stringdir
  3679     0D1B  00C8               	movwf	??_scale+6
  3680     0D1C  160A  118A  200A  120A  158A  	fcall	stringdir
  3681     0D21  00C9               	movwf	??_scale+7
  3682     0D22  160A  118A  200A  120A  158A  	fcall	stringdir
  3683     0D27  00CA               	movwf	??_scale+8
  3684     0D28  160A  118A  200A  120A  158A  	fcall	stringdir
  3685     0D2D  00CB               	movwf	??_scale+9
  3686     0D2E  084B               	movf	??_scale+9,w
  3687     0D2F  00AB               	movwf	___flmul@a+3
  3688     0D30  084A               	movf	??_scale+8,w
  3689     0D31  00AA               	movwf	___flmul@a+2
  3690     0D32  0849               	movf	??_scale+7,w
  3691     0D33  00A9               	movwf	___flmul@a+1
  3692     0D34  0848               	movf	??_scale+6,w
  3693     0D35  00A8               	movwf	___flmul@a
  3694     0D36  120A  158A  215C  120A  158A  	fcall	___flmul
  3695     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  3696     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  3697     0D3D  0827               	movf	?___flmul+3,w
  3698     0D3E  00CF               	movwf	_scale$1017+3
  3699     0D3F  0826               	movf	?___flmul+2,w
  3700     0D40  00CE               	movwf	_scale$1017+2
  3701     0D41  0825               	movf	?___flmul+1,w
  3702     0D42  00CD               	movwf	_scale$1017+1
  3703     0D43  0824               	movf	?___flmul,w
  3704     0D44  00CC               	movwf	_scale$1017
  3705                           
  3706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3707     0D45  300A               	movlw	10
  3708     0D46  00F0               	movwf	___awmod@divisor
  3709     0D47  3000               	movlw	0
  3710     0D48  00F1               	movwf	___awmod@divisor+1
  3711     0D49  0850               	movf	scale@scl,w
  3712     0D4A  00F2               	movwf	___awmod@dividend
  3713     0D4B  01F3               	clrf	___awmod@dividend+1
  3714     0D4C  1BF2               	btfsc	___awmod@dividend,7
  3715     0D4D  03F3               	decf	___awmod@dividend+1,f
  3716     0D4E  160A  158A  260D  120A  158A  	fcall	___awmod
  3717     0D53  0870               	movf	?___awmod,w
  3718     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  3719     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  3720     0D56  00C2               	movwf	??_scale
  3721     0D57  3001               	movlw	1
  3722     0D58                     u4795:
  3723     0D58  1003               	clrc
  3724     0D59  0DC2               	rlf	??_scale,f
  3725     0D5A  3EFF               	addlw	-1
  3726     0D5B  1D03               	skipz
  3727     0D5C  2D58               	goto	u4795
  3728     0D5D  1003               	clrc
  3729     0D5E  0D42               	rlf	??_scale,w
  3730     0D5F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3731     0D60  0084               	movwf	4
  3732     0D61  160A  118A  200A  120A  158A  	fcall	stringdir
  3733     0D66  00C3               	movwf	??_scale+1
  3734     0D67  160A  118A  200A  120A  158A  	fcall	stringdir
  3735     0D6C  00C4               	movwf	??_scale+2
  3736     0D6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3737     0D72  00C5               	movwf	??_scale+3
  3738     0D73  160A  118A  200A  120A  158A  	fcall	stringdir
  3739     0D78  00C6               	movwf	??_scale+4
  3740     0D79  0846               	movf	??_scale+4,w
  3741     0D7A  00A7               	movwf	___flmul@b+3
  3742     0D7B  0845               	movf	??_scale+3,w
  3743     0D7C  00A6               	movwf	___flmul@b+2
  3744     0D7D  0844               	movf	??_scale+2,w
  3745     0D7E  00A5               	movwf	___flmul@b+1
  3746     0D7F  0843               	movf	??_scale+1,w
  3747     0D80  00A4               	movwf	___flmul@b
  3748     0D81  084F               	movf	_scale$1017+3,w
  3749     0D82  00AB               	movwf	___flmul@a+3
  3750     0D83  084E               	movf	_scale$1017+2,w
  3751     0D84  00AA               	movwf	___flmul@a+2
  3752     0D85  084D               	movf	_scale$1017+1,w
  3753     0D86  00A9               	movwf	___flmul@a+1
  3754     0D87  084C               	movf	_scale$1017,w
  3755     0D88  00A8               	movwf	___flmul@a
  3756     0D89  120A  158A  215C  120A  158A  	fcall	___flmul
  3757     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  3758     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  3759     0D90  0827               	movf	?___flmul+3,w
  3760     0D91  00C1               	movwf	?_scale+3
  3761     0D92  0826               	movf	?___flmul+2,w
  3762     0D93  00C0               	movwf	?_scale+2
  3763     0D94  0825               	movf	?___flmul+1,w
  3764     0D95  00BF               	movwf	?_scale+1
  3765     0D96  0824               	movf	?___flmul,w
  3766     0D97  00BE               	movwf	?_scale
  3767     0D98  2FFF               	goto	l349
  3768     0D99                     l3146:
  3769     0D99  0850               	movf	scale@scl,w
  3770     0D9A  3A80               	xorlw	128
  3771     0D9B  3E75               	addlw	-139
  3772     0D9C  1C03               	skipc
  3773     0D9D  2D9F               	goto	u4801
  3774     0D9E  2DA0               	goto	u4800
  3775     0D9F                     u4801:
  3776     0D9F  2E28               	goto	l3152
  3777     0DA0                     u4800:
  3778     0DA0                     l3148:
  3779                           
  3780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3781     0DA0  300A               	movlw	10
  3782     0DA1  00F0               	movwf	___awmod@divisor
  3783     0DA2  3000               	movlw	0
  3784     0DA3  00F1               	movwf	___awmod@divisor+1
  3785     0DA4  0850               	movf	scale@scl,w
  3786     0DA5  00F2               	movwf	___awmod@dividend
  3787     0DA6  01F3               	clrf	___awmod@dividend+1
  3788     0DA7  1BF2               	btfsc	___awmod@dividend,7
  3789     0DA8  03F3               	decf	___awmod@dividend+1,f
  3790     0DA9  160A  158A  260D  120A  158A  	fcall	___awmod
  3791     0DAE  0870               	movf	?___awmod,w
  3792     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3793     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  3794     0DB1  00C2               	movwf	??_scale
  3795     0DB2  3001               	movlw	1
  3796     0DB3                     u4815:
  3797     0DB3  1003               	clrc
  3798     0DB4  0DC2               	rlf	??_scale,f
  3799     0DB5  3EFF               	addlw	-1
  3800     0DB6  1D03               	skipz
  3801     0DB7  2DB3               	goto	u4815
  3802     0DB8  1003               	clrc
  3803     0DB9  0D42               	rlf	??_scale,w
  3804     0DBA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3805     0DBB  0084               	movwf	4
  3806     0DBC  160A  118A  200A  120A  158A  	fcall	stringdir
  3807     0DC1  00C3               	movwf	??_scale+1
  3808     0DC2  160A  118A  200A  120A  158A  	fcall	stringdir
  3809     0DC7  00C4               	movwf	??_scale+2
  3810     0DC8  160A  118A  200A  120A  158A  	fcall	stringdir
  3811     0DCD  00C5               	movwf	??_scale+3
  3812     0DCE  160A  118A  200A  120A  158A  	fcall	stringdir
  3813     0DD3  00C6               	movwf	??_scale+4
  3814     0DD4  0846               	movf	??_scale+4,w
  3815     0DD5  00A7               	movwf	___flmul@b+3
  3816     0DD6  0845               	movf	??_scale+3,w
  3817     0DD7  00A6               	movwf	___flmul@b+2
  3818     0DD8  0844               	movf	??_scale+2,w
  3819     0DD9  00A5               	movwf	___flmul@b+1
  3820     0DDA  0843               	movf	??_scale+1,w
  3821     0DDB  00A4               	movwf	___flmul@b
  3822     0DDC  300A               	movlw	10
  3823     0DDD  00F7               	movwf	___awdiv@divisor
  3824     0DDE  3000               	movlw	0
  3825     0DDF  00F8               	movwf	___awdiv@divisor+1
  3826     0DE0  0850               	movf	scale@scl,w
  3827     0DE1  00F9               	movwf	___awdiv@dividend
  3828     0DE2  01FA               	clrf	___awdiv@dividend+1
  3829     0DE3  1BF9               	btfsc	___awdiv@dividend,7
  3830     0DE4  03FA               	decf	___awdiv@dividend+1,f
  3831     0DE5  160A  118A  20AA  120A  158A  	fcall	___awdiv
  3832     0DEA  0877               	movf	?___awdiv,w
  3833     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  3834     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  3835     0DED  00C7               	movwf	??_scale+5
  3836     0DEE  3001               	movlw	1
  3837     0DEF                     u4825:
  3838     0DEF  1003               	clrc
  3839     0DF0  0DC7               	rlf	??_scale+5,f
  3840     0DF1  3EFF               	addlw	-1
  3841     0DF2  1D03               	skipz
  3842     0DF3  2DEF               	goto	u4825
  3843     0DF4  1003               	clrc
  3844     0DF5  0D47               	rlf	??_scale+5,w
  3845     0DF6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3846     0DF7  0084               	movwf	4
  3847     0DF8  160A  118A  200A  120A  158A  	fcall	stringdir
  3848     0DFD  00C8               	movwf	??_scale+6
  3849     0DFE  160A  118A  200A  120A  158A  	fcall	stringdir
  3850     0E03  00C9               	movwf	??_scale+7
  3851     0E04  160A  118A  200A  120A  158A  	fcall	stringdir
  3852     0E09  00CA               	movwf	??_scale+8
  3853     0E0A  160A  118A  200A  120A  158A  	fcall	stringdir
  3854     0E0F  00CB               	movwf	??_scale+9
  3855     0E10  084B               	movf	??_scale+9,w
  3856     0E11  00AB               	movwf	___flmul@a+3
  3857     0E12  084A               	movf	??_scale+8,w
  3858     0E13  00AA               	movwf	___flmul@a+2
  3859     0E14  0849               	movf	??_scale+7,w
  3860     0E15  00A9               	movwf	___flmul@a+1
  3861     0E16  0848               	movf	??_scale+6,w
  3862     0E17  00A8               	movwf	___flmul@a
  3863     0E18  120A  158A  215C  120A  158A  	fcall	___flmul
  3864     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  3865     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  3866     0E1F  0827               	movf	?___flmul+3,w
  3867     0E20  00C1               	movwf	?_scale+3
  3868     0E21  0826               	movf	?___flmul+2,w
  3869     0E22  00C0               	movwf	?_scale+2
  3870     0E23  0825               	movf	?___flmul+1,w
  3871     0E24  00BF               	movwf	?_scale+1
  3872     0E25  0824               	movf	?___flmul,w
  3873     0E26  00BE               	movwf	?_scale
  3874     0E27  2FFF               	goto	l349
  3875     0E28                     l3152:
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3878     0E28  0850               	movf	scale@scl,w
  3879     0E29  00C2               	movwf	??_scale
  3880     0E2A  3001               	movlw	1
  3881     0E2B                     u4835:
  3882     0E2B  1003               	clrc
  3883     0E2C  0DC2               	rlf	??_scale,f
  3884     0E2D  3EFF               	addlw	-1
  3885     0E2E  1D03               	skipz
  3886     0E2F  2E2B               	goto	u4835
  3887     0E30  1003               	clrc
  3888     0E31  0D42               	rlf	??_scale,w
  3889     0E32  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3890     0E33  0084               	movwf	4
  3891     0E34  160A  118A  200A  120A  158A  	fcall	stringdir
  3892     0E39  00C3               	movwf	??_scale+1
  3893     0E3A  160A  118A  200A  120A  158A  	fcall	stringdir
  3894     0E3F  00C4               	movwf	??_scale+2
  3895     0E40  160A  118A  200A  120A  158A  	fcall	stringdir
  3896     0E45  00C5               	movwf	??_scale+3
  3897     0E46  160A  118A  200A  120A  158A  	fcall	stringdir
  3898     0E4B  00C6               	movwf	??_scale+4
  3899     0E4C  0846               	movf	??_scale+4,w
  3900     0E4D  00C1               	movwf	?_scale+3
  3901     0E4E  0845               	movf	??_scale+3,w
  3902     0E4F  00C0               	movwf	?_scale+2
  3903     0E50  0844               	movf	??_scale+2,w
  3904     0E51  00BF               	movwf	?_scale+1
  3905     0E52  0843               	movf	??_scale+1,w
  3906     0E53  00BE               	movwf	?_scale
  3907     0E54  2FFF               	goto	l349
  3908     0E55                     l3156:
  3909                           
  3910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3911     0E55  0850               	movf	scale@scl,w
  3912     0E56  3A80               	xorlw	128
  3913     0E57  3E12               	addlw	-238
  3914     0E58  1C03               	skipc
  3915     0E59  2E5B               	goto	u4841
  3916     0E5A  2E5C               	goto	u4840
  3917     0E5B                     u4841:
  3918     0E5B  2F44               	goto	l3164
  3919     0E5C                     u4840:
  3920     0E5C                     l3158:
  3921                           
  3922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3923     0E5C  300A               	movlw	10
  3924     0E5D  00F7               	movwf	___awdiv@divisor
  3925     0E5E  3000               	movlw	0
  3926     0E5F  00F8               	movwf	___awdiv@divisor+1
  3927     0E60  0850               	movf	scale@scl,w
  3928     0E61  00F2               	movwf	___awmod@dividend
  3929     0E62  01F3               	clrf	___awmod@dividend+1
  3930     0E63  1BF2               	btfsc	___awmod@dividend,7
  3931     0E64  03F3               	decf	___awmod@dividend+1,f
  3932     0E65  3064               	movlw	100
  3933     0E66  00F0               	movwf	___awmod@divisor
  3934     0E67  3000               	movlw	0
  3935     0E68  00F1               	movwf	___awmod@divisor+1
  3936     0E69  160A  158A  260D  120A  158A  	fcall	___awmod
  3937     0E6E  0871               	movf	?___awmod+1,w
  3938     0E6F  00FA               	movwf	___awdiv@dividend+1
  3939     0E70  0870               	movf	?___awmod,w
  3940     0E71  00F9               	movwf	___awdiv@dividend
  3941     0E72  160A  118A  20AA  120A  158A  	fcall	___awdiv
  3942     0E77  0877               	movf	?___awdiv,w
  3943     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  3944     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  3945     0E7A  00C2               	movwf	??_scale
  3946     0E7B  3001               	movlw	1
  3947     0E7C                     u4855:
  3948     0E7C  1003               	clrc
  3949     0E7D  0DC2               	rlf	??_scale,f
  3950     0E7E  3EFF               	addlw	-1
  3951     0E7F  1D03               	skipz
  3952     0E80  2E7C               	goto	u4855
  3953     0E81  1003               	clrc
  3954     0E82  0D42               	rlf	??_scale,w
  3955     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3956     0E84  0084               	movwf	4
  3957     0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  3958     0E8A  00C3               	movwf	??_scale+1
  3959     0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  3960     0E90  00C4               	movwf	??_scale+2
  3961     0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  3962     0E96  00C5               	movwf	??_scale+3
  3963     0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  3964     0E9C  00C6               	movwf	??_scale+4
  3965     0E9D  0846               	movf	??_scale+4,w
  3966     0E9E  00A7               	movwf	___flmul@b+3
  3967     0E9F  0845               	movf	??_scale+3,w
  3968     0EA0  00A6               	movwf	___flmul@b+2
  3969     0EA1  0844               	movf	??_scale+2,w
  3970     0EA2  00A5               	movwf	___flmul@b+1
  3971     0EA3  0843               	movf	??_scale+1,w
  3972     0EA4  00A4               	movwf	___flmul@b
  3973     0EA5  3064               	movlw	100
  3974     0EA6  00F7               	movwf	___awdiv@divisor
  3975     0EA7  3000               	movlw	0
  3976     0EA8  00F8               	movwf	___awdiv@divisor+1
  3977     0EA9  0850               	movf	scale@scl,w
  3978     0EAA  00F9               	movwf	___awdiv@dividend
  3979     0EAB  01FA               	clrf	___awdiv@dividend+1
  3980     0EAC  1BF9               	btfsc	___awdiv@dividend,7
  3981     0EAD  03FA               	decf	___awdiv@dividend+1,f
  3982     0EAE  160A  118A  20AA  120A  158A  	fcall	___awdiv
  3983     0EB3  0877               	movf	?___awdiv,w
  3984     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  3985     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  3986     0EB6  00C7               	movwf	??_scale+5
  3987     0EB7  3001               	movlw	1
  3988     0EB8                     u4865:
  3989     0EB8  1003               	clrc
  3990     0EB9  0DC7               	rlf	??_scale+5,f
  3991     0EBA  3EFF               	addlw	-1
  3992     0EBB  1D03               	skipz
  3993     0EBC  2EB8               	goto	u4865
  3994     0EBD  1003               	clrc
  3995     0EBE  0D47               	rlf	??_scale+5,w
  3996     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3997     0EC0  0084               	movwf	4
  3998     0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  3999     0EC6  00C8               	movwf	??_scale+6
  4000     0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  4001     0ECC  00C9               	movwf	??_scale+7
  4002     0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  4003     0ED2  00CA               	movwf	??_scale+8
  4004     0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  4005     0ED8  00CB               	movwf	??_scale+9
  4006     0ED9  084B               	movf	??_scale+9,w
  4007     0EDA  00AB               	movwf	___flmul@a+3
  4008     0EDB  084A               	movf	??_scale+8,w
  4009     0EDC  00AA               	movwf	___flmul@a+2
  4010     0EDD  0849               	movf	??_scale+7,w
  4011     0EDE  00A9               	movwf	___flmul@a+1
  4012     0EDF  0848               	movf	??_scale+6,w
  4013     0EE0  00A8               	movwf	___flmul@a
  4014     0EE1  120A  158A  215C  120A  158A  	fcall	___flmul
  4015     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4016     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4017     0EE8  0827               	movf	?___flmul+3,w
  4018     0EE9  00CF               	movwf	_scale$1017+3
  4019     0EEA  0826               	movf	?___flmul+2,w
  4020     0EEB  00CE               	movwf	_scale$1017+2
  4021     0EEC  0825               	movf	?___flmul+1,w
  4022     0EED  00CD               	movwf	_scale$1017+1
  4023     0EEE  0824               	movf	?___flmul,w
  4024     0EEF  00CC               	movwf	_scale$1017
  4025                           
  4026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4027     0EF0  300A               	movlw	10
  4028     0EF1  00F0               	movwf	___awmod@divisor
  4029     0EF2  3000               	movlw	0
  4030     0EF3  00F1               	movwf	___awmod@divisor+1
  4031     0EF4  0850               	movf	scale@scl,w
  4032     0EF5  00F2               	movwf	___awmod@dividend
  4033     0EF6  01F3               	clrf	___awmod@dividend+1
  4034     0EF7  1BF2               	btfsc	___awmod@dividend,7
  4035     0EF8  03F3               	decf	___awmod@dividend+1,f
  4036     0EF9  160A  158A  260D  120A  158A  	fcall	___awmod
  4037     0EFE  0870               	movf	?___awmod,w
  4038     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4039     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4040     0F01  00C2               	movwf	??_scale
  4041     0F02  3001               	movlw	1
  4042     0F03                     u4875:
  4043     0F03  1003               	clrc
  4044     0F04  0DC2               	rlf	??_scale,f
  4045     0F05  3EFF               	addlw	-1
  4046     0F06  1D03               	skipz
  4047     0F07  2F03               	goto	u4875
  4048     0F08  1003               	clrc
  4049     0F09  0D42               	rlf	??_scale,w
  4050     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4051     0F0B  0084               	movwf	4
  4052     0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4053     0F11  00C3               	movwf	??_scale+1
  4054     0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  4055     0F17  00C4               	movwf	??_scale+2
  4056     0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  4057     0F1D  00C5               	movwf	??_scale+3
  4058     0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  4059     0F23  00C6               	movwf	??_scale+4
  4060     0F24  0846               	movf	??_scale+4,w
  4061     0F25  00A7               	movwf	___flmul@b+3
  4062     0F26  0845               	movf	??_scale+3,w
  4063     0F27  00A6               	movwf	___flmul@b+2
  4064     0F28  0844               	movf	??_scale+2,w
  4065     0F29  00A5               	movwf	___flmul@b+1
  4066     0F2A  0843               	movf	??_scale+1,w
  4067     0F2B  00A4               	movwf	___flmul@b
  4068     0F2C  084F               	movf	_scale$1017+3,w
  4069     0F2D  00AB               	movwf	___flmul@a+3
  4070     0F2E  084E               	movf	_scale$1017+2,w
  4071     0F2F  00AA               	movwf	___flmul@a+2
  4072     0F30  084D               	movf	_scale$1017+1,w
  4073     0F31  00A9               	movwf	___flmul@a+1
  4074     0F32  084C               	movf	_scale$1017,w
  4075     0F33  00A8               	movwf	___flmul@a
  4076     0F34  120A  158A  215C  120A  158A  	fcall	___flmul
  4077     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4078     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4079     0F3B  0827               	movf	?___flmul+3,w
  4080     0F3C  00C1               	movwf	?_scale+3
  4081     0F3D  0826               	movf	?___flmul+2,w
  4082     0F3E  00C0               	movwf	?_scale+2
  4083     0F3F  0825               	movf	?___flmul+1,w
  4084     0F40  00BF               	movwf	?_scale+1
  4085     0F41  0824               	movf	?___flmul,w
  4086     0F42  00BE               	movwf	?_scale
  4087     0F43  2FFF               	goto	l349
  4088     0F44                     l3164:
  4089     0F44  0850               	movf	scale@scl,w
  4090     0F45  3A80               	xorlw	128
  4091     0F46  3E75               	addlw	-139
  4092     0F47  1C03               	skipc
  4093     0F48  2F4A               	goto	u4881
  4094     0F49  2F4B               	goto	u4880
  4095     0F4A                     u4881:
  4096     0F4A  2FD3               	goto	l3170
  4097     0F4B                     u4880:
  4098     0F4B                     l3166:
  4099                           
  4100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4101     0F4B  300A               	movlw	10
  4102     0F4C  00F0               	movwf	___awmod@divisor
  4103     0F4D  3000               	movlw	0
  4104     0F4E  00F1               	movwf	___awmod@divisor+1
  4105     0F4F  0850               	movf	scale@scl,w
  4106     0F50  00F2               	movwf	___awmod@dividend
  4107     0F51  01F3               	clrf	___awmod@dividend+1
  4108     0F52  1BF2               	btfsc	___awmod@dividend,7
  4109     0F53  03F3               	decf	___awmod@dividend+1,f
  4110     0F54  160A  158A  260D  120A  158A  	fcall	___awmod
  4111     0F59  0870               	movf	?___awmod,w
  4112     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4113     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4114     0F5C  00C2               	movwf	??_scale
  4115     0F5D  3001               	movlw	1
  4116     0F5E                     u4895:
  4117     0F5E  1003               	clrc
  4118     0F5F  0DC2               	rlf	??_scale,f
  4119     0F60  3EFF               	addlw	-1
  4120     0F61  1D03               	skipz
  4121     0F62  2F5E               	goto	u4895
  4122     0F63  1003               	clrc
  4123     0F64  0D42               	rlf	??_scale,w
  4124     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4125     0F66  0084               	movwf	4
  4126     0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  4127     0F6C  00C3               	movwf	??_scale+1
  4128     0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  4129     0F72  00C4               	movwf	??_scale+2
  4130     0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  4131     0F78  00C5               	movwf	??_scale+3
  4132     0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  4133     0F7E  00C6               	movwf	??_scale+4
  4134     0F7F  0846               	movf	??_scale+4,w
  4135     0F80  00A7               	movwf	___flmul@b+3
  4136     0F81  0845               	movf	??_scale+3,w
  4137     0F82  00A6               	movwf	___flmul@b+2
  4138     0F83  0844               	movf	??_scale+2,w
  4139     0F84  00A5               	movwf	___flmul@b+1
  4140     0F85  0843               	movf	??_scale+1,w
  4141     0F86  00A4               	movwf	___flmul@b
  4142     0F87  300A               	movlw	10
  4143     0F88  00F7               	movwf	___awdiv@divisor
  4144     0F89  3000               	movlw	0
  4145     0F8A  00F8               	movwf	___awdiv@divisor+1
  4146     0F8B  0850               	movf	scale@scl,w
  4147     0F8C  00F9               	movwf	___awdiv@dividend
  4148     0F8D  01FA               	clrf	___awdiv@dividend+1
  4149     0F8E  1BF9               	btfsc	___awdiv@dividend,7
  4150     0F8F  03FA               	decf	___awdiv@dividend+1,f
  4151     0F90  160A  118A  20AA  120A  158A  	fcall	___awdiv
  4152     0F95  0877               	movf	?___awdiv,w
  4153     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4154     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  4155     0F98  00C7               	movwf	??_scale+5
  4156     0F99  3001               	movlw	1
  4157     0F9A                     u4905:
  4158     0F9A  1003               	clrc
  4159     0F9B  0DC7               	rlf	??_scale+5,f
  4160     0F9C  3EFF               	addlw	-1
  4161     0F9D  1D03               	skipz
  4162     0F9E  2F9A               	goto	u4905
  4163     0F9F  1003               	clrc
  4164     0FA0  0D47               	rlf	??_scale+5,w
  4165     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4166     0FA2  0084               	movwf	4
  4167     0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4168     0FA8  00C8               	movwf	??_scale+6
  4169     0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4170     0FAE  00C9               	movwf	??_scale+7
  4171     0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  4172     0FB4  00CA               	movwf	??_scale+8
  4173     0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4174     0FBA  00CB               	movwf	??_scale+9
  4175     0FBB  084B               	movf	??_scale+9,w
  4176     0FBC  00AB               	movwf	___flmul@a+3
  4177     0FBD  084A               	movf	??_scale+8,w
  4178     0FBE  00AA               	movwf	___flmul@a+2
  4179     0FBF  0849               	movf	??_scale+7,w
  4180     0FC0  00A9               	movwf	___flmul@a+1
  4181     0FC1  0848               	movf	??_scale+6,w
  4182     0FC2  00A8               	movwf	___flmul@a
  4183     0FC3  120A  158A  215C  120A  158A  	fcall	___flmul
  4184     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4185     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4186     0FCA  0827               	movf	?___flmul+3,w
  4187     0FCB  00C1               	movwf	?_scale+3
  4188     0FCC  0826               	movf	?___flmul+2,w
  4189     0FCD  00C0               	movwf	?_scale+2
  4190     0FCE  0825               	movf	?___flmul+1,w
  4191     0FCF  00BF               	movwf	?_scale+1
  4192     0FD0  0824               	movf	?___flmul,w
  4193     0FD1  00BE               	movwf	?_scale
  4194     0FD2  2FFF               	goto	l349
  4195     0FD3                     l3170:
  4196                           
  4197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4198     0FD3  0850               	movf	scale@scl,w
  4199     0FD4  00C2               	movwf	??_scale
  4200     0FD5  3001               	movlw	1
  4201     0FD6                     u4915:
  4202     0FD6  1003               	clrc
  4203     0FD7  0DC2               	rlf	??_scale,f
  4204     0FD8  3EFF               	addlw	-1
  4205     0FD9  1D03               	skipz
  4206     0FDA  2FD6               	goto	u4915
  4207     0FDB  1003               	clrc
  4208     0FDC  0D42               	rlf	??_scale,w
  4209     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4210     0FDE  0084               	movwf	4
  4211     0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  4212     0FE4  00C3               	movwf	??_scale+1
  4213     0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4214     0FEA  00C4               	movwf	??_scale+2
  4215     0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  4216     0FF0  00C5               	movwf	??_scale+3
  4217     0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  4218     0FF6  00C6               	movwf	??_scale+4
  4219     0FF7  0846               	movf	??_scale+4,w
  4220     0FF8  00C1               	movwf	?_scale+3
  4221     0FF9  0845               	movf	??_scale+3,w
  4222     0FFA  00C0               	movwf	?_scale+2
  4223     0FFB  0844               	movf	??_scale+2,w
  4224     0FFC  00BF               	movwf	?_scale+1
  4225     0FFD  0843               	movf	??_scale+1,w
  4226     0FFE  00BE               	movwf	?_scale
  4227     0FFF                     l349:
  4228     0FFF  0008               	return
  4229     1000                     __end_of_scale:
  4230                           
  4231                           	psect	text3
  4232     1E0D                     __ptext3:	
  4233 ;; *************** function ___awmod *****************
  4234 ;; Defined at:
  4235 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  divisor         2    0[COMMON] int 
  4238 ;;  dividend        2    2[COMMON] int 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  sign            1    6[COMMON] unsigned char 
  4241 ;;  counter         1    5[COMMON] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  2    0[COMMON] int 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4251 ;;      Params:         4       0       0       0       0
  4252 ;;      Locals:         2       0       0       0       0
  4253 ;;      Temps:          1       0       0       0       0
  4254 ;;      Totals:         7       0       0       0       0
  4255 ;;Total ram usage:        7 bytes
  4256 ;; Hardware stack levels used: 1
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		_scale
  4261 ;;		_descomponer
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265     1E0D                     ___awmod:	
  4266                           ;psect for function ___awmod
  4267                           
  4268     1E0D                     l2650:	
  4269                           ;incstack = 0
  4270                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4271                           
  4272     1E0D  01F6               	clrf	___awmod@sign
  4273     1E0E                     l2652:
  4274     1E0E  1FF3               	btfss	___awmod@dividend+1,7
  4275     1E0F  2E11               	goto	u3581
  4276     1E10  2E12               	goto	u3580
  4277     1E11                     u3581:
  4278     1E11  2E19               	goto	l2658
  4279     1E12                     u3580:
  4280     1E12                     l2654:
  4281     1E12  09F2               	comf	___awmod@dividend,f
  4282     1E13  09F3               	comf	___awmod@dividend+1,f
  4283     1E14  0AF2               	incf	___awmod@dividend,f
  4284     1E15  1903               	skipnz
  4285     1E16  0AF3               	incf	___awmod@dividend+1,f
  4286     1E17                     l2656:
  4287     1E17  01F6               	clrf	___awmod@sign
  4288     1E18  0AF6               	incf	___awmod@sign,f
  4289     1E19                     l2658:
  4290     1E19  1FF1               	btfss	___awmod@divisor+1,7
  4291     1E1A  2E1C               	goto	u3591
  4292     1E1B  2E1D               	goto	u3590
  4293     1E1C                     u3591:
  4294     1E1C  2E22               	goto	l2662
  4295     1E1D                     u3590:
  4296     1E1D                     l2660:
  4297     1E1D  09F0               	comf	___awmod@divisor,f
  4298     1E1E  09F1               	comf	___awmod@divisor+1,f
  4299     1E1F  0AF0               	incf	___awmod@divisor,f
  4300     1E20  1903               	skipnz
  4301     1E21  0AF1               	incf	___awmod@divisor+1,f
  4302     1E22                     l2662:
  4303     1E22  0870               	movf	___awmod@divisor,w
  4304     1E23  0471               	iorwf	___awmod@divisor+1,w
  4305     1E24  1903               	btfsc	3,2
  4306     1E25  2E27               	goto	u3601
  4307     1E26  2E28               	goto	u3600
  4308     1E27                     u3601:
  4309     1E27  2E57               	goto	l2680
  4310     1E28                     u3600:
  4311     1E28                     l2664:
  4312     1E28  01F5               	clrf	___awmod@counter
  4313     1E29  0AF5               	incf	___awmod@counter,f
  4314     1E2A  2E36               	goto	l2670
  4315     1E2B                     l2666:
  4316     1E2B  3001               	movlw	1
  4317     1E2C                     u3615:
  4318     1E2C  1003               	clrc
  4319     1E2D  0DF0               	rlf	___awmod@divisor,f
  4320     1E2E  0DF1               	rlf	___awmod@divisor+1,f
  4321     1E2F  3EFF               	addlw	-1
  4322     1E30  1D03               	skipz
  4323     1E31  2E2C               	goto	u3615
  4324     1E32                     l2668:
  4325     1E32  3001               	movlw	1
  4326     1E33  00F4               	movwf	??___awmod
  4327     1E34  0874               	movf	??___awmod,w
  4328     1E35  07F5               	addwf	___awmod@counter,f
  4329     1E36                     l2670:
  4330     1E36  1FF1               	btfss	___awmod@divisor+1,7
  4331     1E37  2E39               	goto	u3621
  4332     1E38  2E3A               	goto	u3620
  4333     1E39                     u3621:
  4334     1E39  2E2B               	goto	l2666
  4335     1E3A                     u3620:
  4336     1E3A                     l2672:
  4337     1E3A  0871               	movf	___awmod@divisor+1,w
  4338     1E3B  0273               	subwf	___awmod@dividend+1,w
  4339     1E3C  1D03               	skipz
  4340     1E3D  2E40               	goto	u3635
  4341     1E3E  0870               	movf	___awmod@divisor,w
  4342     1E3F  0272               	subwf	___awmod@dividend,w
  4343     1E40                     u3635:
  4344     1E40  1C03               	skipc
  4345     1E41  2E43               	goto	u3631
  4346     1E42  2E44               	goto	u3630
  4347     1E43                     u3631:
  4348     1E43  2E4A               	goto	l2676
  4349     1E44                     u3630:
  4350     1E44                     l2674:
  4351     1E44  0870               	movf	___awmod@divisor,w
  4352     1E45  02F2               	subwf	___awmod@dividend,f
  4353     1E46  0871               	movf	___awmod@divisor+1,w
  4354     1E47  1C03               	skipc
  4355     1E48  03F3               	decf	___awmod@dividend+1,f
  4356     1E49  02F3               	subwf	___awmod@dividend+1,f
  4357     1E4A                     l2676:
  4358     1E4A  3001               	movlw	1
  4359     1E4B                     u3645:
  4360     1E4B  1003               	clrc
  4361     1E4C  0CF1               	rrf	___awmod@divisor+1,f
  4362     1E4D  0CF0               	rrf	___awmod@divisor,f
  4363     1E4E  3EFF               	addlw	-1
  4364     1E4F  1D03               	skipz
  4365     1E50  2E4B               	goto	u3645
  4366     1E51                     l2678:
  4367     1E51  3001               	movlw	1
  4368     1E52  02F5               	subwf	___awmod@counter,f
  4369     1E53  1D03               	btfss	3,2
  4370     1E54  2E56               	goto	u3651
  4371     1E55  2E57               	goto	u3650
  4372     1E56                     u3651:
  4373     1E56  2E3A               	goto	l2672
  4374     1E57                     u3650:
  4375     1E57                     l2680:
  4376     1E57  0876               	movf	___awmod@sign,w
  4377     1E58  1903               	btfsc	3,2
  4378     1E59  2E5B               	goto	u3661
  4379     1E5A  2E5C               	goto	u3660
  4380     1E5B                     u3661:
  4381     1E5B  2E61               	goto	l2684
  4382     1E5C                     u3660:
  4383     1E5C                     l2682:
  4384     1E5C  09F2               	comf	___awmod@dividend,f
  4385     1E5D  09F3               	comf	___awmod@dividend+1,f
  4386     1E5E  0AF2               	incf	___awmod@dividend,f
  4387     1E5F  1903               	skipnz
  4388     1E60  0AF3               	incf	___awmod@dividend+1,f
  4389     1E61                     l2684:
  4390     1E61  0873               	movf	___awmod@dividend+1,w
  4391     1E62  00F1               	movwf	?___awmod+1
  4392     1E63  0872               	movf	___awmod@dividend,w
  4393     1E64  00F0               	movwf	?___awmod
  4394     1E65                     l585:
  4395     1E65  0008               	return
  4396     1E66                     __end_of___awmod:
  4397                           
  4398                           	psect	text4
  4399     10AA                     __ptext4:	
  4400 ;; *************** function ___awdiv *****************
  4401 ;; Defined at:
  4402 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  divisor         2    7[COMMON] int 
  4405 ;;  dividend        2    9[COMMON] int 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  quotient        2    2[BANK0 ] int 
  4408 ;;  sign            1    1[BANK0 ] unsigned char 
  4409 ;;  counter         1    0[BANK0 ] unsigned char 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  2    7[COMMON] int 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4419 ;;      Params:         4       0       0       0       0
  4420 ;;      Locals:         0       4       0       0       0
  4421 ;;      Temps:          1       0       0       0       0
  4422 ;;      Totals:         5       4       0       0       0
  4423 ;;Total ram usage:        9 bytes
  4424 ;; Hardware stack levels used: 1
  4425 ;; This function calls:
  4426 ;;		Nothing
  4427 ;; This function is called by:
  4428 ;;		_scale
  4429 ;;		_sprintf
  4430 ;;		_descomponer
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434     10AA                     ___awdiv:	
  4435                           ;psect for function ___awdiv
  4436                           
  4437     10AA                     l2606:	
  4438                           ;incstack = 0
  4439                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4440                           
  4441     10AA  1283               	bcf	3,5	;RP0=0, select bank0
  4442     10AB  1303               	bcf	3,6	;RP1=0, select bank0
  4443     10AC  01A1               	clrf	___awdiv@sign
  4444     10AD                     l2608:
  4445     10AD  1FF8               	btfss	___awdiv@divisor+1,7
  4446     10AE  28B0               	goto	u3481
  4447     10AF  28B1               	goto	u3480
  4448     10B0                     u3481:
  4449     10B0  28B8               	goto	l2614
  4450     10B1                     u3480:
  4451     10B1                     l2610:
  4452     10B1  09F7               	comf	___awdiv@divisor,f
  4453     10B2  09F8               	comf	___awdiv@divisor+1,f
  4454     10B3  0AF7               	incf	___awdiv@divisor,f
  4455     10B4  1903               	skipnz
  4456     10B5  0AF8               	incf	___awdiv@divisor+1,f
  4457     10B6                     l2612:
  4458     10B6  01A1               	clrf	___awdiv@sign
  4459     10B7  0AA1               	incf	___awdiv@sign,f
  4460     10B8                     l2614:
  4461     10B8  1FFA               	btfss	___awdiv@dividend+1,7
  4462     10B9  28BB               	goto	u3491
  4463     10BA  28BC               	goto	u3490
  4464     10BB                     u3491:
  4465     10BB  28C5               	goto	l2620
  4466     10BC                     u3490:
  4467     10BC                     l2616:
  4468     10BC  09F9               	comf	___awdiv@dividend,f
  4469     10BD  09FA               	comf	___awdiv@dividend+1,f
  4470     10BE  0AF9               	incf	___awdiv@dividend,f
  4471     10BF  1903               	skipnz
  4472     10C0  0AFA               	incf	___awdiv@dividend+1,f
  4473     10C1                     l2618:
  4474     10C1  3001               	movlw	1
  4475     10C2  00FB               	movwf	??___awdiv
  4476     10C3  087B               	movf	??___awdiv,w
  4477     10C4  06A1               	xorwf	___awdiv@sign,f
  4478     10C5                     l2620:
  4479     10C5  01A2               	clrf	___awdiv@quotient
  4480     10C6  01A3               	clrf	___awdiv@quotient+1
  4481     10C7                     l2622:
  4482     10C7  0877               	movf	___awdiv@divisor,w
  4483     10C8  0478               	iorwf	___awdiv@divisor+1,w
  4484     10C9  1903               	btfsc	3,2
  4485     10CA  28CC               	goto	u3501
  4486     10CB  28CD               	goto	u3500
  4487     10CC                     u3501:
  4488     10CC  2904               	goto	l2642
  4489     10CD                     u3500:
  4490     10CD                     l2624:
  4491     10CD  01A0               	clrf	___awdiv@counter
  4492     10CE  0AA0               	incf	___awdiv@counter,f
  4493     10CF  28DB               	goto	l2630
  4494     10D0                     l2626:
  4495     10D0  3001               	movlw	1
  4496     10D1                     u3515:
  4497     10D1  1003               	clrc
  4498     10D2  0DF7               	rlf	___awdiv@divisor,f
  4499     10D3  0DF8               	rlf	___awdiv@divisor+1,f
  4500     10D4  3EFF               	addlw	-1
  4501     10D5  1D03               	skipz
  4502     10D6  28D1               	goto	u3515
  4503     10D7                     l2628:
  4504     10D7  3001               	movlw	1
  4505     10D8  00FB               	movwf	??___awdiv
  4506     10D9  087B               	movf	??___awdiv,w
  4507     10DA  07A0               	addwf	___awdiv@counter,f
  4508     10DB                     l2630:
  4509     10DB  1FF8               	btfss	___awdiv@divisor+1,7
  4510     10DC  28DE               	goto	u3521
  4511     10DD  28DF               	goto	u3520
  4512     10DE                     u3521:
  4513     10DE  28D0               	goto	l2626
  4514     10DF                     u3520:
  4515     10DF                     l2632:
  4516     10DF  3001               	movlw	1
  4517     10E0                     u3535:
  4518     10E0  1003               	clrc
  4519     10E1  0DA2               	rlf	___awdiv@quotient,f
  4520     10E2  0DA3               	rlf	___awdiv@quotient+1,f
  4521     10E3  3EFF               	addlw	-1
  4522     10E4  1D03               	skipz
  4523     10E5  28E0               	goto	u3535
  4524     10E6  0878               	movf	___awdiv@divisor+1,w
  4525     10E7  027A               	subwf	___awdiv@dividend+1,w
  4526     10E8  1D03               	skipz
  4527     10E9  28EC               	goto	u3545
  4528     10EA  0877               	movf	___awdiv@divisor,w
  4529     10EB  0279               	subwf	___awdiv@dividend,w
  4530     10EC                     u3545:
  4531     10EC  1C03               	skipc
  4532     10ED  28EF               	goto	u3541
  4533     10EE  28F0               	goto	u3540
  4534     10EF                     u3541:
  4535     10EF  28F7               	goto	l2638
  4536     10F0                     u3540:
  4537     10F0                     l2634:
  4538     10F0  0877               	movf	___awdiv@divisor,w
  4539     10F1  02F9               	subwf	___awdiv@dividend,f
  4540     10F2  0878               	movf	___awdiv@divisor+1,w
  4541     10F3  1C03               	skipc
  4542     10F4  03FA               	decf	___awdiv@dividend+1,f
  4543     10F5  02FA               	subwf	___awdiv@dividend+1,f
  4544     10F6                     l2636:
  4545     10F6  1422               	bsf	___awdiv@quotient,0
  4546     10F7                     l2638:
  4547     10F7  3001               	movlw	1
  4548     10F8                     u3555:
  4549     10F8  1003               	clrc
  4550     10F9  0CF8               	rrf	___awdiv@divisor+1,f
  4551     10FA  0CF7               	rrf	___awdiv@divisor,f
  4552     10FB  3EFF               	addlw	-1
  4553     10FC  1D03               	skipz
  4554     10FD  28F8               	goto	u3555
  4555     10FE                     l2640:
  4556     10FE  3001               	movlw	1
  4557     10FF  02A0               	subwf	___awdiv@counter,f
  4558     1100  1D03               	btfss	3,2
  4559     1101  2903               	goto	u3561
  4560     1102  2904               	goto	u3560
  4561     1103                     u3561:
  4562     1103  28DF               	goto	l2632
  4563     1104                     u3560:
  4564     1104                     l2642:
  4565     1104  0821               	movf	___awdiv@sign,w
  4566     1105  1903               	btfsc	3,2
  4567     1106  2908               	goto	u3571
  4568     1107  2909               	goto	u3570
  4569     1108                     u3571:
  4570     1108  290E               	goto	l2646
  4571     1109                     u3570:
  4572     1109                     l2644:
  4573     1109  09A2               	comf	___awdiv@quotient,f
  4574     110A  09A3               	comf	___awdiv@quotient+1,f
  4575     110B  0AA2               	incf	___awdiv@quotient,f
  4576     110C  1903               	skipnz
  4577     110D  0AA3               	incf	___awdiv@quotient+1,f
  4578     110E                     l2646:
  4579     110E  0823               	movf	___awdiv@quotient+1,w
  4580     110F  00F8               	movwf	?___awdiv+1
  4581     1110  0822               	movf	___awdiv@quotient,w
  4582     1111  00F7               	movwf	?___awdiv
  4583     1112                     l572:
  4584     1112  0008               	return
  4585     1113                     __end_of___awdiv:
  4586                           
  4587                           	psect	text5
  4588     1B04                     __ptext5:	
  4589 ;; *************** function _isdigit *****************
  4590 ;; Defined at:
  4591 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  c               1    wreg     unsigned char 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  c               1    1[COMMON] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;		None               void
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4605 ;;      Params:         0       0       0       0       0
  4606 ;;      Locals:         2       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0
  4608 ;;      Totals:         2       0       0       0       0
  4609 ;;Total ram usage:        2 bytes
  4610 ;; Hardware stack levels used: 1
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_sprintf
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618     1B04                     _isdigit:	
  4619                           ;psect for function _isdigit
  4620                           
  4621                           
  4622                           ;incstack = 0
  4623                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4624                           ;isdigit@c stored from wreg
  4625     1B04  00F1               	movwf	isdigit@c
  4626     1B05                     l3174:
  4627     1B05  01F0               	clrf	_isdigit$815
  4628     1B06                     l3176:
  4629     1B06  303A               	movlw	58
  4630     1B07  0271               	subwf	isdigit@c,w
  4631     1B08  1803               	skipnc
  4632     1B09  2B0B               	goto	u4921
  4633     1B0A  2B0C               	goto	u4920
  4634     1B0B                     u4921:
  4635     1B0B  2B14               	goto	l3182
  4636     1B0C                     u4920:
  4637     1B0C                     l3178:
  4638     1B0C  3030               	movlw	48
  4639     1B0D  0271               	subwf	isdigit@c,w
  4640     1B0E  1C03               	skipc
  4641     1B0F  2B11               	goto	u4931
  4642     1B10  2B12               	goto	u4930
  4643     1B11                     u4931:
  4644     1B11  2B14               	goto	l3182
  4645     1B12                     u4930:
  4646     1B12                     l3180:
  4647     1B12  01F0               	clrf	_isdigit$815
  4648     1B13  0AF0               	incf	_isdigit$815,f
  4649     1B14                     l3182:
  4650     1B14  0C70               	rrf	_isdigit$815,w
  4651     1B15                     l906:
  4652     1B15  0008               	return
  4653     1B16                     __end_of_isdigit:
  4654                           
  4655                           	psect	text6
  4656     139D                     __ptext6:	
  4657 ;; *************** function _fround *****************
  4658 ;; Defined at:
  4659 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  prec            1    wreg     unsigned char 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  prec            1   49[BANK0 ] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  4   30[BANK0 ] unsigned char 
  4666 ;; Registers used:
  4667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4673 ;;      Params:         0       4       0       0       0
  4674 ;;      Locals:         0       9       0       0       0
  4675 ;;      Temps:          0       7       0       0       0
  4676 ;;      Totals:         0      20       0       0       0
  4677 ;;Total ram usage:       20 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; Hardware stack levels required when called: 2
  4680 ;; This function calls:
  4681 ;;		___flmul
  4682 ;;		___lwdiv
  4683 ;;		___lwmod
  4684 ;; This function is called by:
  4685 ;;		_sprintf
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689     139D                     _fround:	
  4690                           ;psect for function _fround
  4691                           
  4692                           
  4693                           ;incstack = 0
  4694                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4695                           ;fround@prec stored from wreg
  4696     139D  1283               	bcf	3,5	;RP0=0, select bank0
  4697     139E  1303               	bcf	3,6	;RP1=0, select bank0
  4698     139F  00D1               	movwf	fround@prec
  4699     13A0                     l3116:
  4700                           
  4701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4702     13A0  306E               	movlw	110
  4703     13A1  0251               	subwf	fround@prec,w
  4704     13A2  1C03               	skipc
  4705     13A3  2BA5               	goto	u4671
  4706     13A4  2BA6               	goto	u4670
  4707     13A5                     u4671:
  4708     13A5  2CB3               	goto	l3124
  4709     13A6                     u4670:
  4710     13A6                     l3118:
  4711                           
  4712                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4713     13A6  303F               	movlw	63
  4714     13A7  00A7               	movwf	___flmul@b+3
  4715     13A8  3000               	movlw	0
  4716     13A9  00A6               	movwf	___flmul@b+2
  4717     13AA  3000               	movlw	0
  4718     13AB  00A5               	movwf	___flmul@b+1
  4719     13AC  3000               	movlw	0
  4720     13AD  00A4               	movwf	___flmul@b
  4721     13AE  3064               	movlw	100
  4722     13AF  00F6               	movwf	___lwdiv@divisor
  4723     13B0  3000               	movlw	0
  4724     13B1  00F7               	movwf	___lwdiv@divisor+1
  4725     13B2  0851               	movf	fround@prec,w
  4726     13B3  00C2               	movwf	??_fround
  4727     13B4  01C3               	clrf	??_fround+1
  4728     13B5  0842               	movf	??_fround,w
  4729     13B6  00F8               	movwf	___lwdiv@dividend
  4730     13B7  0843               	movf	??_fround+1,w
  4731     13B8  00F9               	movwf	___lwdiv@dividend+1
  4732     13B9  160A  158A  24E1  160A  118A  	fcall	___lwdiv
  4733     13BE  0876               	movf	?___lwdiv,w
  4734     13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4735     13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4736     13C1  00C4               	movwf	??_fround+2
  4737     13C2  3001               	movlw	1
  4738     13C3                     u4685:
  4739     13C3  1003               	clrc
  4740     13C4  0DC4               	rlf	??_fround+2,f
  4741     13C5  3EFF               	addlw	-1
  4742     13C6  1D03               	skipz
  4743     13C7  2BC3               	goto	u4685
  4744     13C8  1003               	clrc
  4745     13C9  0D44               	rlf	??_fround+2,w
  4746     13CA  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4747     13CB  0084               	movwf	4
  4748     13CC  160A  118A  200A  160A  118A  	fcall	stringdir
  4749     13D1  00C5               	movwf	??_fround+3
  4750     13D2  160A  118A  200A  160A  118A  	fcall	stringdir
  4751     13D7  00C6               	movwf	??_fround+4
  4752     13D8  160A  118A  200A  160A  118A  	fcall	stringdir
  4753     13DD  00C7               	movwf	??_fround+5
  4754     13DE  160A  118A  200A  160A  118A  	fcall	stringdir
  4755     13E3  00C8               	movwf	??_fround+6
  4756     13E4  0848               	movf	??_fround+6,w
  4757     13E5  00AB               	movwf	___flmul@a+3
  4758     13E6  0847               	movf	??_fround+5,w
  4759     13E7  00AA               	movwf	___flmul@a+2
  4760     13E8  0846               	movf	??_fround+4,w
  4761     13E9  00A9               	movwf	___flmul@a+1
  4762     13EA  0845               	movf	??_fround+3,w
  4763     13EB  00A8               	movwf	___flmul@a
  4764     13EC  120A  158A  215C  160A  118A  	fcall	___flmul
  4765     13F1  1283               	bcf	3,5	;RP0=0, select bank0
  4766     13F2  1303               	bcf	3,6	;RP1=0, select bank0
  4767     13F3  0827               	movf	?___flmul+3,w
  4768     13F4  00D0               	movwf	_fround$1015+3
  4769     13F5  0826               	movf	?___flmul+2,w
  4770     13F6  00CF               	movwf	_fround$1015+2
  4771     13F7  0825               	movf	?___flmul+1,w
  4772     13F8  00CE               	movwf	_fround$1015+1
  4773     13F9  0824               	movf	?___flmul,w
  4774     13FA  00CD               	movwf	_fround$1015
  4775                           
  4776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4777     13FB  300A               	movlw	10
  4778     13FC  00F6               	movwf	___lwdiv@divisor
  4779     13FD  3000               	movlw	0
  4780     13FE  00F7               	movwf	___lwdiv@divisor+1
  4781     13FF  0851               	movf	fround@prec,w
  4782     1400  00C2               	movwf	??_fround
  4783     1401  01C3               	clrf	??_fround+1
  4784     1402  0842               	movf	??_fround,w
  4785     1403  00F2               	movwf	___lwmod@dividend
  4786     1404  0843               	movf	??_fround+1,w
  4787     1405  00F3               	movwf	___lwmod@dividend+1
  4788     1406  3064               	movlw	100
  4789     1407  00F0               	movwf	___lwmod@divisor
  4790     1408  3000               	movlw	0
  4791     1409  00F1               	movwf	___lwmod@divisor+1
  4792     140A  160A  158A  2465  160A  118A  	fcall	___lwmod
  4793     140F  0871               	movf	?___lwmod+1,w
  4794     1410  00F9               	movwf	___lwdiv@dividend+1
  4795     1411  0870               	movf	?___lwmod,w
  4796     1412  00F8               	movwf	___lwdiv@dividend
  4797     1413  160A  158A  24E1  160A  118A  	fcall	___lwdiv
  4798     1418  0876               	movf	?___lwdiv,w
  4799     1419  1283               	bcf	3,5	;RP0=0, select bank0
  4800     141A  1303               	bcf	3,6	;RP1=0, select bank0
  4801     141B  00C4               	movwf	??_fround+2
  4802     141C  3001               	movlw	1
  4803     141D                     u4695:
  4804     141D  1003               	clrc
  4805     141E  0DC4               	rlf	??_fround+2,f
  4806     141F  3EFF               	addlw	-1
  4807     1420  1D03               	skipz
  4808     1421  2C1D               	goto	u4695
  4809     1422  1003               	clrc
  4810     1423  0D44               	rlf	??_fround+2,w
  4811     1424  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4812     1425  0084               	movwf	4
  4813     1426  160A  118A  200A  160A  118A  	fcall	stringdir
  4814     142B  00C5               	movwf	??_fround+3
  4815     142C  160A  118A  200A  160A  118A  	fcall	stringdir
  4816     1431  00C6               	movwf	??_fround+4
  4817     1432  160A  118A  200A  160A  118A  	fcall	stringdir
  4818     1437  00C7               	movwf	??_fround+5
  4819     1438  160A  118A  200A  160A  118A  	fcall	stringdir
  4820     143D  00C8               	movwf	??_fround+6
  4821     143E  0848               	movf	??_fround+6,w
  4822     143F  00A7               	movwf	___flmul@b+3
  4823     1440  0847               	movf	??_fround+5,w
  4824     1441  00A6               	movwf	___flmul@b+2
  4825     1442  0846               	movf	??_fround+4,w
  4826     1443  00A5               	movwf	___flmul@b+1
  4827     1444  0845               	movf	??_fround+3,w
  4828     1445  00A4               	movwf	___flmul@b
  4829     1446  0850               	movf	_fround$1015+3,w
  4830     1447  00AB               	movwf	___flmul@a+3
  4831     1448  084F               	movf	_fround$1015+2,w
  4832     1449  00AA               	movwf	___flmul@a+2
  4833     144A  084E               	movf	_fround$1015+1,w
  4834     144B  00A9               	movwf	___flmul@a+1
  4835     144C  084D               	movf	_fround$1015,w
  4836     144D  00A8               	movwf	___flmul@a
  4837     144E  120A  158A  215C  160A  118A  	fcall	___flmul
  4838     1453  1283               	bcf	3,5	;RP0=0, select bank0
  4839     1454  1303               	bcf	3,6	;RP1=0, select bank0
  4840     1455  0827               	movf	?___flmul+3,w
  4841     1456  00CC               	movwf	_fround$1016+3
  4842     1457  0826               	movf	?___flmul+2,w
  4843     1458  00CB               	movwf	_fround$1016+2
  4844     1459  0825               	movf	?___flmul+1,w
  4845     145A  00CA               	movwf	_fround$1016+1
  4846     145B  0824               	movf	?___flmul,w
  4847     145C  00C9               	movwf	_fround$1016
  4848                           
  4849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4850     145D  300A               	movlw	10
  4851     145E  00F0               	movwf	___lwmod@divisor
  4852     145F  3000               	movlw	0
  4853     1460  00F1               	movwf	___lwmod@divisor+1
  4854     1461  0851               	movf	fround@prec,w
  4855     1462  00C2               	movwf	??_fround
  4856     1463  01C3               	clrf	??_fround+1
  4857     1464  0842               	movf	??_fround,w
  4858     1465  00F2               	movwf	___lwmod@dividend
  4859     1466  0843               	movf	??_fround+1,w
  4860     1467  00F3               	movwf	___lwmod@dividend+1
  4861     1468  160A  158A  2465  160A  118A  	fcall	___lwmod
  4862     146D  0870               	movf	?___lwmod,w
  4863     146E  1283               	bcf	3,5	;RP0=0, select bank0
  4864     146F  1303               	bcf	3,6	;RP1=0, select bank0
  4865     1470  00C4               	movwf	??_fround+2
  4866     1471  3001               	movlw	1
  4867     1472                     u4705:
  4868     1472  1003               	clrc
  4869     1473  0DC4               	rlf	??_fround+2,f
  4870     1474  3EFF               	addlw	-1
  4871     1475  1D03               	skipz
  4872     1476  2C72               	goto	u4705
  4873     1477  1003               	clrc
  4874     1478  0D44               	rlf	??_fround+2,w
  4875     1479  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4876     147A  0084               	movwf	4
  4877     147B  160A  118A  200A  160A  118A  	fcall	stringdir
  4878     1480  00C5               	movwf	??_fround+3
  4879     1481  160A  118A  200A  160A  118A  	fcall	stringdir
  4880     1486  00C6               	movwf	??_fround+4
  4881     1487  160A  118A  200A  160A  118A  	fcall	stringdir
  4882     148C  00C7               	movwf	??_fround+5
  4883     148D  160A  118A  200A  160A  118A  	fcall	stringdir
  4884     1492  00C8               	movwf	??_fround+6
  4885     1493  0848               	movf	??_fround+6,w
  4886     1494  00A7               	movwf	___flmul@b+3
  4887     1495  0847               	movf	??_fround+5,w
  4888     1496  00A6               	movwf	___flmul@b+2
  4889     1497  0846               	movf	??_fround+4,w
  4890     1498  00A5               	movwf	___flmul@b+1
  4891     1499  0845               	movf	??_fround+3,w
  4892     149A  00A4               	movwf	___flmul@b
  4893     149B  084C               	movf	_fround$1016+3,w
  4894     149C  00AB               	movwf	___flmul@a+3
  4895     149D  084B               	movf	_fround$1016+2,w
  4896     149E  00AA               	movwf	___flmul@a+2
  4897     149F  084A               	movf	_fround$1016+1,w
  4898     14A0  00A9               	movwf	___flmul@a+1
  4899     14A1  0849               	movf	_fround$1016,w
  4900     14A2  00A8               	movwf	___flmul@a
  4901     14A3  120A  158A  215C  160A  118A  	fcall	___flmul
  4902     14A8  1283               	bcf	3,5	;RP0=0, select bank0
  4903     14A9  1303               	bcf	3,6	;RP1=0, select bank0
  4904     14AA  0827               	movf	?___flmul+3,w
  4905     14AB  00C1               	movwf	?_fround+3
  4906     14AC  0826               	movf	?___flmul+2,w
  4907     14AD  00C0               	movwf	?_fround+2
  4908     14AE  0825               	movf	?___flmul+1,w
  4909     14AF  00BF               	movwf	?_fround+1
  4910     14B0  0824               	movf	?___flmul,w
  4911     14B1  00BE               	movwf	?_fround
  4912     14B2  2DA7               	goto	l342
  4913     14B3                     l3124:
  4914     14B3  300B               	movlw	11
  4915     14B4  0251               	subwf	fround@prec,w
  4916     14B5  1C03               	skipc
  4917     14B6  2CB8               	goto	u4711
  4918     14B7  2CB9               	goto	u4710
  4919     14B8                     u4711:
  4920     14B8  2D64               	goto	l3130
  4921     14B9                     u4710:
  4922     14B9                     l3126:
  4923                           
  4924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4925     14B9  303F               	movlw	63
  4926     14BA  00A7               	movwf	___flmul@b+3
  4927     14BB  3000               	movlw	0
  4928     14BC  00A6               	movwf	___flmul@b+2
  4929     14BD  3000               	movlw	0
  4930     14BE  00A5               	movwf	___flmul@b+1
  4931     14BF  3000               	movlw	0
  4932     14C0  00A4               	movwf	___flmul@b
  4933     14C1  300A               	movlw	10
  4934     14C2  00F6               	movwf	___lwdiv@divisor
  4935     14C3  3000               	movlw	0
  4936     14C4  00F7               	movwf	___lwdiv@divisor+1
  4937     14C5  0851               	movf	fround@prec,w
  4938     14C6  00C2               	movwf	??_fround
  4939     14C7  01C3               	clrf	??_fround+1
  4940     14C8  0842               	movf	??_fround,w
  4941     14C9  00F8               	movwf	___lwdiv@dividend
  4942     14CA  0843               	movf	??_fround+1,w
  4943     14CB  00F9               	movwf	___lwdiv@dividend+1
  4944     14CC  160A  158A  24E1  160A  118A  	fcall	___lwdiv
  4945     14D1  0876               	movf	?___lwdiv,w
  4946     14D2  1283               	bcf	3,5	;RP0=0, select bank0
  4947     14D3  1303               	bcf	3,6	;RP1=0, select bank0
  4948     14D4  00C4               	movwf	??_fround+2
  4949     14D5  3001               	movlw	1
  4950     14D6                     u4725:
  4951     14D6  1003               	clrc
  4952     14D7  0DC4               	rlf	??_fround+2,f
  4953     14D8  3EFF               	addlw	-1
  4954     14D9  1D03               	skipz
  4955     14DA  2CD6               	goto	u4725
  4956     14DB  1003               	clrc
  4957     14DC  0D44               	rlf	??_fround+2,w
  4958     14DD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4959     14DE  0084               	movwf	4
  4960     14DF  160A  118A  200A  160A  118A  	fcall	stringdir
  4961     14E4  00C5               	movwf	??_fround+3
  4962     14E5  160A  118A  200A  160A  118A  	fcall	stringdir
  4963     14EA  00C6               	movwf	??_fround+4
  4964     14EB  160A  118A  200A  160A  118A  	fcall	stringdir
  4965     14F0  00C7               	movwf	??_fround+5
  4966     14F1  160A  118A  200A  160A  118A  	fcall	stringdir
  4967     14F6  00C8               	movwf	??_fround+6
  4968     14F7  0848               	movf	??_fround+6,w
  4969     14F8  00AB               	movwf	___flmul@a+3
  4970     14F9  0847               	movf	??_fround+5,w
  4971     14FA  00AA               	movwf	___flmul@a+2
  4972     14FB  0846               	movf	??_fround+4,w
  4973     14FC  00A9               	movwf	___flmul@a+1
  4974     14FD  0845               	movf	??_fround+3,w
  4975     14FE  00A8               	movwf	___flmul@a
  4976     14FF  120A  158A  215C  160A  118A  	fcall	___flmul
  4977     1504  1283               	bcf	3,5	;RP0=0, select bank0
  4978     1505  1303               	bcf	3,6	;RP1=0, select bank0
  4979     1506  0827               	movf	?___flmul+3,w
  4980     1507  00D0               	movwf	_fround$1015+3
  4981     1508  0826               	movf	?___flmul+2,w
  4982     1509  00CF               	movwf	_fround$1015+2
  4983     150A  0825               	movf	?___flmul+1,w
  4984     150B  00CE               	movwf	_fround$1015+1
  4985     150C  0824               	movf	?___flmul,w
  4986     150D  00CD               	movwf	_fround$1015
  4987                           
  4988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4989     150E  300A               	movlw	10
  4990     150F  00F0               	movwf	___lwmod@divisor
  4991     1510  3000               	movlw	0
  4992     1511  00F1               	movwf	___lwmod@divisor+1
  4993     1512  0851               	movf	fround@prec,w
  4994     1513  00C2               	movwf	??_fround
  4995     1514  01C3               	clrf	??_fround+1
  4996     1515  0842               	movf	??_fround,w
  4997     1516  00F2               	movwf	___lwmod@dividend
  4998     1517  0843               	movf	??_fround+1,w
  4999     1518  00F3               	movwf	___lwmod@dividend+1
  5000     1519  160A  158A  2465  160A  118A  	fcall	___lwmod
  5001     151E  0870               	movf	?___lwmod,w
  5002     151F  1283               	bcf	3,5	;RP0=0, select bank0
  5003     1520  1303               	bcf	3,6	;RP1=0, select bank0
  5004     1521  00C4               	movwf	??_fround+2
  5005     1522  3001               	movlw	1
  5006     1523                     u4735:
  5007     1523  1003               	clrc
  5008     1524  0DC4               	rlf	??_fround+2,f
  5009     1525  3EFF               	addlw	-1
  5010     1526  1D03               	skipz
  5011     1527  2D23               	goto	u4735
  5012     1528  1003               	clrc
  5013     1529  0D44               	rlf	??_fround+2,w
  5014     152A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5015     152B  0084               	movwf	4
  5016     152C  160A  118A  200A  160A  118A  	fcall	stringdir
  5017     1531  00C5               	movwf	??_fround+3
  5018     1532  160A  118A  200A  160A  118A  	fcall	stringdir
  5019     1537  00C6               	movwf	??_fround+4
  5020     1538  160A  118A  200A  160A  118A  	fcall	stringdir
  5021     153D  00C7               	movwf	??_fround+5
  5022     153E  160A  118A  200A  160A  118A  	fcall	stringdir
  5023     1543  00C8               	movwf	??_fround+6
  5024     1544  0848               	movf	??_fround+6,w
  5025     1545  00A7               	movwf	___flmul@b+3
  5026     1546  0847               	movf	??_fround+5,w
  5027     1547  00A6               	movwf	___flmul@b+2
  5028     1548  0846               	movf	??_fround+4,w
  5029     1549  00A5               	movwf	___flmul@b+1
  5030     154A  0845               	movf	??_fround+3,w
  5031     154B  00A4               	movwf	___flmul@b
  5032     154C  0850               	movf	_fround$1015+3,w
  5033     154D  00AB               	movwf	___flmul@a+3
  5034     154E  084F               	movf	_fround$1015+2,w
  5035     154F  00AA               	movwf	___flmul@a+2
  5036     1550  084E               	movf	_fround$1015+1,w
  5037     1551  00A9               	movwf	___flmul@a+1
  5038     1552  084D               	movf	_fround$1015,w
  5039     1553  00A8               	movwf	___flmul@a
  5040     1554  120A  158A  215C  160A  118A  	fcall	___flmul
  5041     1559  1283               	bcf	3,5	;RP0=0, select bank0
  5042     155A  1303               	bcf	3,6	;RP1=0, select bank0
  5043     155B  0827               	movf	?___flmul+3,w
  5044     155C  00C1               	movwf	?_fround+3
  5045     155D  0826               	movf	?___flmul+2,w
  5046     155E  00C0               	movwf	?_fround+2
  5047     155F  0825               	movf	?___flmul+1,w
  5048     1560  00BF               	movwf	?_fround+1
  5049     1561  0824               	movf	?___flmul,w
  5050     1562  00BE               	movwf	?_fround
  5051     1563  2DA7               	goto	l342
  5052     1564                     l3130:
  5053                           
  5054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5055     1564  303F               	movlw	63
  5056     1565  00A7               	movwf	___flmul@b+3
  5057     1566  3000               	movlw	0
  5058     1567  00A6               	movwf	___flmul@b+2
  5059     1568  3000               	movlw	0
  5060     1569  00A5               	movwf	___flmul@b+1
  5061     156A  3000               	movlw	0
  5062     156B  00A4               	movwf	___flmul@b
  5063     156C  0851               	movf	fround@prec,w
  5064     156D  00C2               	movwf	??_fround
  5065     156E  3001               	movlw	1
  5066     156F                     u4745:
  5067     156F  1003               	clrc
  5068     1570  0DC2               	rlf	??_fround,f
  5069     1571  3EFF               	addlw	-1
  5070     1572  1D03               	skipz
  5071     1573  2D6F               	goto	u4745
  5072     1574  1003               	clrc
  5073     1575  0D42               	rlf	??_fround,w
  5074     1576  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5075     1577  0084               	movwf	4
  5076     1578  160A  118A  200A  160A  118A  	fcall	stringdir
  5077     157D  00C3               	movwf	??_fround+1
  5078     157E  160A  118A  200A  160A  118A  	fcall	stringdir
  5079     1583  00C4               	movwf	??_fround+2
  5080     1584  160A  118A  200A  160A  118A  	fcall	stringdir
  5081     1589  00C5               	movwf	??_fround+3
  5082     158A  160A  118A  200A  160A  118A  	fcall	stringdir
  5083     158F  00C6               	movwf	??_fround+4
  5084     1590  0846               	movf	??_fround+4,w
  5085     1591  00AB               	movwf	___flmul@a+3
  5086     1592  0845               	movf	??_fround+3,w
  5087     1593  00AA               	movwf	___flmul@a+2
  5088     1594  0844               	movf	??_fround+2,w
  5089     1595  00A9               	movwf	___flmul@a+1
  5090     1596  0843               	movf	??_fround+1,w
  5091     1597  00A8               	movwf	___flmul@a
  5092     1598  120A  158A  215C  160A  118A  	fcall	___flmul
  5093     159D  1283               	bcf	3,5	;RP0=0, select bank0
  5094     159E  1303               	bcf	3,6	;RP1=0, select bank0
  5095     159F  0827               	movf	?___flmul+3,w
  5096     15A0  00C1               	movwf	?_fround+3
  5097     15A1  0826               	movf	?___flmul+2,w
  5098     15A2  00C0               	movwf	?_fround+2
  5099     15A3  0825               	movf	?___flmul+1,w
  5100     15A4  00BF               	movwf	?_fround+1
  5101     15A5  0824               	movf	?___flmul,w
  5102     15A6  00BE               	movwf	?_fround
  5103     15A7                     l342:
  5104     15A7  0008               	return
  5105     15A8                     __end_of_fround:
  5106                           
  5107                           	psect	text7
  5108     1C65                     __ptext7:	
  5109 ;; *************** function ___lwmod *****************
  5110 ;; Defined at:
  5111 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  divisor         2    0[COMMON] unsigned int 
  5114 ;;  dividend        2    2[COMMON] unsigned int 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;  counter         1    5[COMMON] unsigned char 
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  2    0[COMMON] unsigned int 
  5119 ;; Registers used:
  5120 ;;		wreg, status,2, status,0
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5126 ;;      Params:         4       0       0       0       0
  5127 ;;      Locals:         1       0       0       0       0
  5128 ;;      Temps:          1       0       0       0       0
  5129 ;;      Totals:         6       0       0       0       0
  5130 ;;Total ram usage:        6 bytes
  5131 ;; Hardware stack levels used: 1
  5132 ;; This function calls:
  5133 ;;		Nothing
  5134 ;; This function is called by:
  5135 ;;		_fround
  5136 ;;		_descomponer
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140     1C65                     ___lwmod:	
  5141                           ;psect for function ___lwmod
  5142                           
  5143     1C65                     l2714:	
  5144                           ;incstack = 0
  5145                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5146                           
  5147     1C65  0870               	movf	___lwmod@divisor,w
  5148     1C66  0471               	iorwf	___lwmod@divisor+1,w
  5149     1C67  1903               	btfsc	3,2
  5150     1C68  2C6A               	goto	u3741
  5151     1C69  2C6B               	goto	u3740
  5152     1C6A                     u3741:
  5153     1C6A  2C9A               	goto	l2732
  5154     1C6B                     u3740:
  5155     1C6B                     l2716:
  5156     1C6B  01F5               	clrf	___lwmod@counter
  5157     1C6C  0AF5               	incf	___lwmod@counter,f
  5158     1C6D  2C79               	goto	l2722
  5159     1C6E                     l2718:
  5160     1C6E  3001               	movlw	1
  5161     1C6F                     u3755:
  5162     1C6F  1003               	clrc
  5163     1C70  0DF0               	rlf	___lwmod@divisor,f
  5164     1C71  0DF1               	rlf	___lwmod@divisor+1,f
  5165     1C72  3EFF               	addlw	-1
  5166     1C73  1D03               	skipz
  5167     1C74  2C6F               	goto	u3755
  5168     1C75                     l2720:
  5169     1C75  3001               	movlw	1
  5170     1C76  00F4               	movwf	??___lwmod
  5171     1C77  0874               	movf	??___lwmod,w
  5172     1C78  07F5               	addwf	___lwmod@counter,f
  5173     1C79                     l2722:
  5174     1C79  1FF1               	btfss	___lwmod@divisor+1,7
  5175     1C7A  2C7C               	goto	u3761
  5176     1C7B  2C7D               	goto	u3760
  5177     1C7C                     u3761:
  5178     1C7C  2C6E               	goto	l2718
  5179     1C7D                     u3760:
  5180     1C7D                     l2724:
  5181     1C7D  0871               	movf	___lwmod@divisor+1,w
  5182     1C7E  0273               	subwf	___lwmod@dividend+1,w
  5183     1C7F  1D03               	skipz
  5184     1C80  2C83               	goto	u3775
  5185     1C81  0870               	movf	___lwmod@divisor,w
  5186     1C82  0272               	subwf	___lwmod@dividend,w
  5187     1C83                     u3775:
  5188     1C83  1C03               	skipc
  5189     1C84  2C86               	goto	u3771
  5190     1C85  2C87               	goto	u3770
  5191     1C86                     u3771:
  5192     1C86  2C8D               	goto	l2728
  5193     1C87                     u3770:
  5194     1C87                     l2726:
  5195     1C87  0870               	movf	___lwmod@divisor,w
  5196     1C88  02F2               	subwf	___lwmod@dividend,f
  5197     1C89  0871               	movf	___lwmod@divisor+1,w
  5198     1C8A  1C03               	skipc
  5199     1C8B  03F3               	decf	___lwmod@dividend+1,f
  5200     1C8C  02F3               	subwf	___lwmod@dividend+1,f
  5201     1C8D                     l2728:
  5202     1C8D  3001               	movlw	1
  5203     1C8E                     u3785:
  5204     1C8E  1003               	clrc
  5205     1C8F  0CF1               	rrf	___lwmod@divisor+1,f
  5206     1C90  0CF0               	rrf	___lwmod@divisor,f
  5207     1C91  3EFF               	addlw	-1
  5208     1C92  1D03               	skipz
  5209     1C93  2C8E               	goto	u3785
  5210     1C94                     l2730:
  5211     1C94  3001               	movlw	1
  5212     1C95  02F5               	subwf	___lwmod@counter,f
  5213     1C96  1D03               	btfss	3,2
  5214     1C97  2C99               	goto	u3791
  5215     1C98  2C9A               	goto	u3790
  5216     1C99                     u3791:
  5217     1C99  2C7D               	goto	l2724
  5218     1C9A                     u3790:
  5219     1C9A                     l2732:
  5220     1C9A  0873               	movf	___lwmod@dividend+1,w
  5221     1C9B  00F1               	movwf	?___lwmod+1
  5222     1C9C  0872               	movf	___lwmod@dividend,w
  5223     1C9D  00F0               	movwf	?___lwmod
  5224     1C9E                     l735:
  5225     1C9E  0008               	return
  5226     1C9F                     __end_of___lwmod:
  5227                           
  5228                           	psect	text8
  5229     1CE1                     __ptext8:	
  5230 ;; *************** function ___lwdiv *****************
  5231 ;; Defined at:
  5232 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  divisor         2    6[COMMON] unsigned int 
  5235 ;;  dividend        2    8[COMMON] unsigned int 
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;  quotient        2   11[COMMON] unsigned int 
  5238 ;;  counter         1   13[COMMON] unsigned char 
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  2    6[COMMON] unsigned int 
  5241 ;; Registers used:
  5242 ;;		wreg, status,2, status,0
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5248 ;;      Params:         4       0       0       0       0
  5249 ;;      Locals:         3       0       0       0       0
  5250 ;;      Temps:          1       0       0       0       0
  5251 ;;      Totals:         8       0       0       0       0
  5252 ;;Total ram usage:        8 bytes
  5253 ;; Hardware stack levels used: 1
  5254 ;; This function calls:
  5255 ;;		Nothing
  5256 ;; This function is called by:
  5257 ;;		_fround
  5258 ;;		_descomponer
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262     1CE1                     ___lwdiv:	
  5263                           ;psect for function ___lwdiv
  5264                           
  5265     1CE1                     l2688:	
  5266                           ;incstack = 0
  5267                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5268                           
  5269     1CE1  01FB               	clrf	___lwdiv@quotient
  5270     1CE2  01FC               	clrf	___lwdiv@quotient+1
  5271     1CE3                     l2690:
  5272     1CE3  0876               	movf	___lwdiv@divisor,w
  5273     1CE4  0477               	iorwf	___lwdiv@divisor+1,w
  5274     1CE5  1903               	btfsc	3,2
  5275     1CE6  2CE8               	goto	u3671
  5276     1CE7  2CE9               	goto	u3670
  5277     1CE8                     u3671:
  5278     1CE8  2D20               	goto	l2710
  5279     1CE9                     u3670:
  5280     1CE9                     l2692:
  5281     1CE9  01FD               	clrf	___lwdiv@counter
  5282     1CEA  0AFD               	incf	___lwdiv@counter,f
  5283     1CEB  2CF7               	goto	l2698
  5284     1CEC                     l2694:
  5285     1CEC  3001               	movlw	1
  5286     1CED                     u3685:
  5287     1CED  1003               	clrc
  5288     1CEE  0DF6               	rlf	___lwdiv@divisor,f
  5289     1CEF  0DF7               	rlf	___lwdiv@divisor+1,f
  5290     1CF0  3EFF               	addlw	-1
  5291     1CF1  1D03               	skipz
  5292     1CF2  2CED               	goto	u3685
  5293     1CF3                     l2696:
  5294     1CF3  3001               	movlw	1
  5295     1CF4  00FA               	movwf	??___lwdiv
  5296     1CF5  087A               	movf	??___lwdiv,w
  5297     1CF6  07FD               	addwf	___lwdiv@counter,f
  5298     1CF7                     l2698:
  5299     1CF7  1FF7               	btfss	___lwdiv@divisor+1,7
  5300     1CF8  2CFA               	goto	u3691
  5301     1CF9  2CFB               	goto	u3690
  5302     1CFA                     u3691:
  5303     1CFA  2CEC               	goto	l2694
  5304     1CFB                     u3690:
  5305     1CFB                     l2700:
  5306     1CFB  3001               	movlw	1
  5307     1CFC                     u3705:
  5308     1CFC  1003               	clrc
  5309     1CFD  0DFB               	rlf	___lwdiv@quotient,f
  5310     1CFE  0DFC               	rlf	___lwdiv@quotient+1,f
  5311     1CFF  3EFF               	addlw	-1
  5312     1D00  1D03               	skipz
  5313     1D01  2CFC               	goto	u3705
  5314     1D02  0877               	movf	___lwdiv@divisor+1,w
  5315     1D03  0279               	subwf	___lwdiv@dividend+1,w
  5316     1D04  1D03               	skipz
  5317     1D05  2D08               	goto	u3715
  5318     1D06  0876               	movf	___lwdiv@divisor,w
  5319     1D07  0278               	subwf	___lwdiv@dividend,w
  5320     1D08                     u3715:
  5321     1D08  1C03               	skipc
  5322     1D09  2D0B               	goto	u3711
  5323     1D0A  2D0C               	goto	u3710
  5324     1D0B                     u3711:
  5325     1D0B  2D13               	goto	l2706
  5326     1D0C                     u3710:
  5327     1D0C                     l2702:
  5328     1D0C  0876               	movf	___lwdiv@divisor,w
  5329     1D0D  02F8               	subwf	___lwdiv@dividend,f
  5330     1D0E  0877               	movf	___lwdiv@divisor+1,w
  5331     1D0F  1C03               	skipc
  5332     1D10  03F9               	decf	___lwdiv@dividend+1,f
  5333     1D11  02F9               	subwf	___lwdiv@dividend+1,f
  5334     1D12                     l2704:
  5335     1D12  147B               	bsf	___lwdiv@quotient,0
  5336     1D13                     l2706:
  5337     1D13  3001               	movlw	1
  5338     1D14                     u3725:
  5339     1D14  1003               	clrc
  5340     1D15  0CF7               	rrf	___lwdiv@divisor+1,f
  5341     1D16  0CF6               	rrf	___lwdiv@divisor,f
  5342     1D17  3EFF               	addlw	-1
  5343     1D18  1D03               	skipz
  5344     1D19  2D14               	goto	u3725
  5345     1D1A                     l2708:
  5346     1D1A  3001               	movlw	1
  5347     1D1B  02FD               	subwf	___lwdiv@counter,f
  5348     1D1C  1D03               	btfss	3,2
  5349     1D1D  2D1F               	goto	u3731
  5350     1D1E  2D20               	goto	u3730
  5351     1D1F                     u3731:
  5352     1D1F  2CFB               	goto	l2700
  5353     1D20                     u3730:
  5354     1D20                     l2710:
  5355     1D20  087C               	movf	___lwdiv@quotient+1,w
  5356     1D21  00F7               	movwf	?___lwdiv+1
  5357     1D22  087B               	movf	___lwdiv@quotient,w
  5358     1D23  00F6               	movwf	?___lwdiv
  5359     1D24                     l725:
  5360     1D24  0008               	return
  5361     1D25                     __end_of___lwdiv:
  5362                           
  5363                           	psect	text9
  5364     095C                     __ptext9:	
  5365 ;; *************** function ___flmul *****************
  5366 ;; Defined at:
  5367 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;  b               4    4[BANK0 ] unsigned int 
  5370 ;;  a               4    8[BANK0 ] unsigned int 
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  prod            4   24[BANK0 ] struct .
  5373 ;;  grs             4   18[BANK0 ] unsigned long 
  5374 ;;  temp            2   28[BANK0 ] struct .
  5375 ;;  bexp            1   23[BANK0 ] unsigned char 
  5376 ;;  aexp            1   22[BANK0 ] unsigned char 
  5377 ;;  sign            1   17[BANK0 ] unsigned char 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  4    4[BANK0 ] unsigned char 
  5380 ;; Registers used:
  5381 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5387 ;;      Params:         0       8       0       0       0
  5388 ;;      Locals:         0      13       0       0       0
  5389 ;;      Temps:          0       5       0       0       0
  5390 ;;      Totals:         0      26       0       0       0
  5391 ;;Total ram usage:       26 bytes
  5392 ;; Hardware stack levels used: 1
  5393 ;; Hardware stack levels required when called: 1
  5394 ;; This function calls:
  5395 ;;		__Umul8_16
  5396 ;; This function is called by:
  5397 ;;		_main
  5398 ;;		_fround
  5399 ;;		_scale
  5400 ;;		_sprintf
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404     095C                     ___flmul:	
  5405                           ;psect for function ___flmul
  5406                           
  5407     095C                     l2930:	
  5408                           ;incstack = 0
  5409                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5410                           
  5411     095C  1283               	bcf	3,5	;RP0=0, select bank0
  5412     095D  1303               	bcf	3,6	;RP1=0, select bank0
  5413     095E  0827               	movf	___flmul@b+3,w
  5414     095F  3980               	andlw	128
  5415     0960  00B1               	movwf	___flmul@sign
  5416     0961                     l2932:
  5417     0961  0827               	movf	___flmul@b+3,w
  5418     0962  00AC               	movwf	??___flmul
  5419     0963  072C               	addwf	??___flmul,w
  5420     0964  00B7               	movwf	___flmul@bexp
  5421     0965                     l2934:
  5422     0965  1FA6               	btfss	___flmul@b+2,7
  5423     0966  2968               	goto	u4261
  5424     0967  2969               	goto	u4260
  5425     0968                     u4261:
  5426     0968  296A               	goto	l2938
  5427     0969                     u4260:
  5428     0969                     l2936:
  5429     0969  1437               	bsf	___flmul@bexp,0
  5430     096A                     l2938:
  5431     096A  0837               	movf	___flmul@bexp,w
  5432     096B  1903               	btfsc	3,2
  5433     096C  296E               	goto	u4271
  5434     096D  296F               	goto	u4270
  5435     096E                     u4271:
  5436     096E  297E               	goto	l2946
  5437     096F                     u4270:
  5438     096F                     l2940:
  5439     096F  0A37               	incf	___flmul@bexp,w
  5440     0970  1D03               	btfss	3,2
  5441     0971  2973               	goto	u4281
  5442     0972  2974               	goto	u4280
  5443     0973                     u4281:
  5444     0973  297C               	goto	l2944
  5445     0974                     u4280:
  5446     0974                     l2942:
  5447     0974  3000               	movlw	0
  5448     0975  00A7               	movwf	___flmul@b+3
  5449     0976  3000               	movlw	0
  5450     0977  00A6               	movwf	___flmul@b+2
  5451     0978  3000               	movlw	0
  5452     0979  00A5               	movwf	___flmul@b+1
  5453     097A  3000               	movlw	0
  5454     097B  00A4               	movwf	___flmul@b
  5455     097C                     l2944:
  5456     097C  17A6               	bsf	___flmul@b+2,7
  5457     097D  2986               	goto	l2948
  5458     097E                     l2946:
  5459     097E  3000               	movlw	0
  5460     097F  00A7               	movwf	___flmul@b+3
  5461     0980  3000               	movlw	0
  5462     0981  00A6               	movwf	___flmul@b+2
  5463     0982  3000               	movlw	0
  5464     0983  00A5               	movwf	___flmul@b+1
  5465     0984  3000               	movlw	0
  5466     0985  00A4               	movwf	___flmul@b
  5467     0986                     l2948:
  5468     0986  082B               	movf	___flmul@a+3,w
  5469     0987  3980               	andlw	128
  5470     0988  00AC               	movwf	??___flmul
  5471     0989  082C               	movf	??___flmul,w
  5472     098A  06B1               	xorwf	___flmul@sign,f
  5473     098B                     l2950:
  5474     098B  082B               	movf	___flmul@a+3,w
  5475     098C  00AC               	movwf	??___flmul
  5476     098D  072C               	addwf	??___flmul,w
  5477     098E  00B6               	movwf	___flmul@aexp
  5478     098F                     l2952:
  5479     098F  1FAA               	btfss	___flmul@a+2,7
  5480     0990  2992               	goto	u4291
  5481     0991  2993               	goto	u4290
  5482     0992                     u4291:
  5483     0992  2994               	goto	l2956
  5484     0993                     u4290:
  5485     0993                     l2954:
  5486     0993  1436               	bsf	___flmul@aexp,0
  5487     0994                     l2956:
  5488     0994  0836               	movf	___flmul@aexp,w
  5489     0995  1903               	btfsc	3,2
  5490     0996  2998               	goto	u4301
  5491     0997  2999               	goto	u4300
  5492     0998                     u4301:
  5493     0998  29A8               	goto	l2964
  5494     0999                     u4300:
  5495     0999                     l2958:
  5496     0999  0A36               	incf	___flmul@aexp,w
  5497     099A  1D03               	btfss	3,2
  5498     099B  299D               	goto	u4311
  5499     099C  299E               	goto	u4310
  5500     099D                     u4311:
  5501     099D  29A6               	goto	l2962
  5502     099E                     u4310:
  5503     099E                     l2960:
  5504     099E  3000               	movlw	0
  5505     099F  00AB               	movwf	___flmul@a+3
  5506     09A0  3000               	movlw	0
  5507     09A1  00AA               	movwf	___flmul@a+2
  5508     09A2  3000               	movlw	0
  5509     09A3  00A9               	movwf	___flmul@a+1
  5510     09A4  3000               	movlw	0
  5511     09A5  00A8               	movwf	___flmul@a
  5512     09A6                     l2962:
  5513     09A6  17AA               	bsf	___flmul@a+2,7
  5514     09A7  29B0               	goto	l2966
  5515     09A8                     l2964:
  5516     09A8  3000               	movlw	0
  5517     09A9  00AB               	movwf	___flmul@a+3
  5518     09AA  3000               	movlw	0
  5519     09AB  00AA               	movwf	___flmul@a+2
  5520     09AC  3000               	movlw	0
  5521     09AD  00A9               	movwf	___flmul@a+1
  5522     09AE  3000               	movlw	0
  5523     09AF  00A8               	movwf	___flmul@a
  5524     09B0                     l2966:
  5525     09B0  0836               	movf	___flmul@aexp,w
  5526     09B1  1903               	btfsc	3,2
  5527     09B2  29B4               	goto	u4321
  5528     09B3  29B5               	goto	u4320
  5529     09B4                     u4321:
  5530     09B4  29BA               	goto	l2970
  5531     09B5                     u4320:
  5532     09B5                     l2968:
  5533     09B5  0837               	movf	___flmul@bexp,w
  5534     09B6  1D03               	btfss	3,2
  5535     09B7  29B9               	goto	u4331
  5536     09B8  29BA               	goto	u4330
  5537     09B9                     u4331:
  5538     09B9  29C3               	goto	l2974
  5539     09BA                     u4330:
  5540     09BA                     l2970:
  5541     09BA  3000               	movlw	0
  5542     09BB  00A7               	movwf	?___flmul+3
  5543     09BC  3000               	movlw	0
  5544     09BD  00A6               	movwf	?___flmul+2
  5545     09BE  3000               	movlw	0
  5546     09BF  00A5               	movwf	?___flmul+1
  5547     09C0  3000               	movlw	0
  5548     09C1  00A4               	movwf	?___flmul
  5549     09C2  2CA0               	goto	l842
  5550     09C3                     l2974:
  5551     09C3  0824               	movf	___flmul@b,w
  5552     09C4  00F0               	movwf	__Umul8_16@multiplicand
  5553     09C5  082A               	movf	___flmul@a+2,w
  5554     09C6  160A  158A  23A5  120A  158A  	fcall	__Umul8_16
  5555     09CB  0871               	movf	?__Umul8_16+1,w
  5556     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  5557     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  5558     09CE  00BD               	movwf	___flmul@temp+1
  5559     09CF  0870               	movf	?__Umul8_16,w
  5560     09D0  00BC               	movwf	___flmul@temp
  5561     09D1                     l2976:
  5562     09D1  083C               	movf	___flmul@temp,w
  5563     09D2  00AC               	movwf	??___flmul
  5564     09D3  01AD               	clrf	??___flmul+1
  5565     09D4  01AE               	clrf	??___flmul+2
  5566     09D5  01AF               	clrf	??___flmul+3
  5567     09D6  082F               	movf	??___flmul+3,w
  5568     09D7  00B5               	movwf	___flmul@grs+3
  5569     09D8  082E               	movf	??___flmul+2,w
  5570     09D9  00B4               	movwf	___flmul@grs+2
  5571     09DA  082D               	movf	??___flmul+1,w
  5572     09DB  00B3               	movwf	___flmul@grs+1
  5573     09DC  082C               	movf	??___flmul,w
  5574     09DD  00B2               	movwf	___flmul@grs
  5575     09DE                     l2978:
  5576     09DE  083D               	movf	___flmul@temp+1,w
  5577     09DF  00AC               	movwf	??___flmul
  5578     09E0  01AD               	clrf	??___flmul+1
  5579     09E1  01AE               	clrf	??___flmul+2
  5580     09E2  01AF               	clrf	??___flmul+3
  5581     09E3  082F               	movf	??___flmul+3,w
  5582     09E4  00BB               	movwf	___flmul@prod+3
  5583     09E5  082E               	movf	??___flmul+2,w
  5584     09E6  00BA               	movwf	___flmul@prod+2
  5585     09E7  082D               	movf	??___flmul+1,w
  5586     09E8  00B9               	movwf	___flmul@prod+1
  5587     09E9  082C               	movf	??___flmul,w
  5588     09EA  00B8               	movwf	___flmul@prod
  5589     09EB  0825               	movf	___flmul@b+1,w
  5590     09EC  00F0               	movwf	__Umul8_16@multiplicand
  5591     09ED  0829               	movf	___flmul@a+1,w
  5592     09EE  160A  158A  23A5  120A  158A  	fcall	__Umul8_16
  5593     09F3  0871               	movf	?__Umul8_16+1,w
  5594     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  5595     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  5596     09F6  00BD               	movwf	___flmul@temp+1
  5597     09F7  0870               	movf	?__Umul8_16,w
  5598     09F8  00BC               	movwf	___flmul@temp
  5599     09F9                     l2980:
  5600     09F9  083C               	movf	___flmul@temp,w
  5601     09FA  00AC               	movwf	??___flmul
  5602     09FB  01AD               	clrf	??___flmul+1
  5603     09FC  01AE               	clrf	??___flmul+2
  5604     09FD  01AF               	clrf	??___flmul+3
  5605     09FE  082C               	movf	??___flmul,w
  5606     09FF  07B2               	addwf	___flmul@grs,f
  5607     0A00  082D               	movf	??___flmul+1,w
  5608     0A01  1103               	clrz
  5609     0A02  1803               	skipnc
  5610     0A03  3E01               	addlw	1
  5611     0A04  1903               	skipnz
  5612     0A05  2A07               	goto	u4341
  5613     0A06  07B3               	addwf	___flmul@grs+1,f
  5614     0A07                     u4341:
  5615     0A07  082E               	movf	??___flmul+2,w
  5616     0A08  1103               	clrz
  5617     0A09  1803               	skipnc
  5618     0A0A  3E01               	addlw	1
  5619     0A0B  1903               	skipnz
  5620     0A0C  2A0E               	goto	u4342
  5621     0A0D  07B4               	addwf	___flmul@grs+2,f
  5622     0A0E                     u4342:
  5623     0A0E  082F               	movf	??___flmul+3,w
  5624     0A0F  1103               	clrz
  5625     0A10  1803               	skipnc
  5626     0A11  3E01               	addlw	1
  5627     0A12  1903               	skipnz
  5628     0A13  2A15               	goto	u4343
  5629     0A14  07B5               	addwf	___flmul@grs+3,f
  5630     0A15                     u4343:
  5631     0A15                     l2982:
  5632     0A15  083D               	movf	___flmul@temp+1,w
  5633     0A16  00AC               	movwf	??___flmul
  5634     0A17  01AD               	clrf	??___flmul+1
  5635     0A18  01AE               	clrf	??___flmul+2
  5636     0A19  01AF               	clrf	??___flmul+3
  5637     0A1A  082C               	movf	??___flmul,w
  5638     0A1B  07B8               	addwf	___flmul@prod,f
  5639     0A1C  082D               	movf	??___flmul+1,w
  5640     0A1D  1103               	clrz
  5641     0A1E  1803               	skipnc
  5642     0A1F  3E01               	addlw	1
  5643     0A20  1903               	skipnz
  5644     0A21  2A23               	goto	u4351
  5645     0A22  07B9               	addwf	___flmul@prod+1,f
  5646     0A23                     u4351:
  5647     0A23  082E               	movf	??___flmul+2,w
  5648     0A24  1103               	clrz
  5649     0A25  1803               	skipnc
  5650     0A26  3E01               	addlw	1
  5651     0A27  1903               	skipnz
  5652     0A28  2A2A               	goto	u4352
  5653     0A29  07BA               	addwf	___flmul@prod+2,f
  5654     0A2A                     u4352:
  5655     0A2A  082F               	movf	??___flmul+3,w
  5656     0A2B  1103               	clrz
  5657     0A2C  1803               	skipnc
  5658     0A2D  3E01               	addlw	1
  5659     0A2E  1903               	skipnz
  5660     0A2F  2A31               	goto	u4353
  5661     0A30  07BB               	addwf	___flmul@prod+3,f
  5662     0A31                     u4353:
  5663     0A31  0826               	movf	___flmul@b+2,w
  5664     0A32  00F0               	movwf	__Umul8_16@multiplicand
  5665     0A33  0828               	movf	___flmul@a,w
  5666     0A34  160A  158A  23A5  120A  158A  	fcall	__Umul8_16
  5667     0A39  0871               	movf	?__Umul8_16+1,w
  5668     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  5669     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  5670     0A3C  00BD               	movwf	___flmul@temp+1
  5671     0A3D  0870               	movf	?__Umul8_16,w
  5672     0A3E  00BC               	movwf	___flmul@temp
  5673     0A3F                     l2984:
  5674     0A3F  083C               	movf	___flmul@temp,w
  5675     0A40  00AC               	movwf	??___flmul
  5676     0A41  01AD               	clrf	??___flmul+1
  5677     0A42  01AE               	clrf	??___flmul+2
  5678     0A43  01AF               	clrf	??___flmul+3
  5679     0A44  082C               	movf	??___flmul,w
  5680     0A45  07B2               	addwf	___flmul@grs,f
  5681     0A46  082D               	movf	??___flmul+1,w
  5682     0A47  1103               	clrz
  5683     0A48  1803               	skipnc
  5684     0A49  3E01               	addlw	1
  5685     0A4A  1903               	skipnz
  5686     0A4B  2A4D               	goto	u4361
  5687     0A4C  07B3               	addwf	___flmul@grs+1,f
  5688     0A4D                     u4361:
  5689     0A4D  082E               	movf	??___flmul+2,w
  5690     0A4E  1103               	clrz
  5691     0A4F  1803               	skipnc
  5692     0A50  3E01               	addlw	1
  5693     0A51  1903               	skipnz
  5694     0A52  2A54               	goto	u4362
  5695     0A53  07B4               	addwf	___flmul@grs+2,f
  5696     0A54                     u4362:
  5697     0A54  082F               	movf	??___flmul+3,w
  5698     0A55  1103               	clrz
  5699     0A56  1803               	skipnc
  5700     0A57  3E01               	addlw	1
  5701     0A58  1903               	skipnz
  5702     0A59  2A5B               	goto	u4363
  5703     0A5A  07B5               	addwf	___flmul@grs+3,f
  5704     0A5B                     u4363:
  5705     0A5B                     l2986:
  5706     0A5B  083D               	movf	___flmul@temp+1,w
  5707     0A5C  00AC               	movwf	??___flmul
  5708     0A5D  01AD               	clrf	??___flmul+1
  5709     0A5E  01AE               	clrf	??___flmul+2
  5710     0A5F  01AF               	clrf	??___flmul+3
  5711     0A60  082C               	movf	??___flmul,w
  5712     0A61  07B8               	addwf	___flmul@prod,f
  5713     0A62  082D               	movf	??___flmul+1,w
  5714     0A63  1103               	clrz
  5715     0A64  1803               	skipnc
  5716     0A65  3E01               	addlw	1
  5717     0A66  1903               	skipnz
  5718     0A67  2A69               	goto	u4371
  5719     0A68  07B9               	addwf	___flmul@prod+1,f
  5720     0A69                     u4371:
  5721     0A69  082E               	movf	??___flmul+2,w
  5722     0A6A  1103               	clrz
  5723     0A6B  1803               	skipnc
  5724     0A6C  3E01               	addlw	1
  5725     0A6D  1903               	skipnz
  5726     0A6E  2A70               	goto	u4372
  5727     0A6F  07BA               	addwf	___flmul@prod+2,f
  5728     0A70                     u4372:
  5729     0A70  082F               	movf	??___flmul+3,w
  5730     0A71  1103               	clrz
  5731     0A72  1803               	skipnc
  5732     0A73  3E01               	addlw	1
  5733     0A74  1903               	skipnz
  5734     0A75  2A77               	goto	u4373
  5735     0A76  07BB               	addwf	___flmul@prod+3,f
  5736     0A77                     u4373:
  5737     0A77                     l2988:
  5738     0A77  3008               	movlw	8
  5739     0A78  00AC               	movwf	??___flmul
  5740     0A79                     u4385:
  5741     0A79  1003               	clrc
  5742     0A7A  0DB2               	rlf	___flmul@grs,f
  5743     0A7B  0DB3               	rlf	___flmul@grs+1,f
  5744     0A7C  0DB4               	rlf	___flmul@grs+2,f
  5745     0A7D  0DB5               	rlf	___flmul@grs+3,f
  5746     0A7E  0BAC               	decfsz	??___flmul,f
  5747     0A7F  2A79               	goto	u4385
  5748     0A80                     l2990:
  5749     0A80  0825               	movf	___flmul@b+1,w
  5750     0A81  00F0               	movwf	__Umul8_16@multiplicand
  5751     0A82  0828               	movf	___flmul@a,w
  5752     0A83  160A  158A  23A5  120A  158A  	fcall	__Umul8_16
  5753     0A88  0871               	movf	?__Umul8_16+1,w
  5754     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  5755     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  5756     0A8B  00BD               	movwf	___flmul@temp+1
  5757     0A8C  0870               	movf	?__Umul8_16,w
  5758     0A8D  00BC               	movwf	___flmul@temp
  5759     0A8E                     l2992:
  5760     0A8E  083C               	movf	___flmul@temp,w
  5761     0A8F  00AC               	movwf	??___flmul
  5762     0A90  083D               	movf	___flmul@temp+1,w
  5763     0A91  00AD               	movwf	??___flmul+1
  5764     0A92  01AE               	clrf	??___flmul+2
  5765     0A93  01AF               	clrf	??___flmul+3
  5766     0A94  082C               	movf	??___flmul,w
  5767     0A95  07B2               	addwf	___flmul@grs,f
  5768     0A96  082D               	movf	??___flmul+1,w
  5769     0A97  1103               	clrz
  5770     0A98  1803               	skipnc
  5771     0A99  3E01               	addlw	1
  5772     0A9A  1903               	skipnz
  5773     0A9B  2A9D               	goto	u4391
  5774     0A9C  07B3               	addwf	___flmul@grs+1,f
  5775     0A9D                     u4391:
  5776     0A9D  082E               	movf	??___flmul+2,w
  5777     0A9E  1103               	clrz
  5778     0A9F  1803               	skipnc
  5779     0AA0  3E01               	addlw	1
  5780     0AA1  1903               	skipnz
  5781     0AA2  2AA4               	goto	u4392
  5782     0AA3  07B4               	addwf	___flmul@grs+2,f
  5783     0AA4                     u4392:
  5784     0AA4  082F               	movf	??___flmul+3,w
  5785     0AA5  1103               	clrz
  5786     0AA6  1803               	skipnc
  5787     0AA7  3E01               	addlw	1
  5788     0AA8  1903               	skipnz
  5789     0AA9  2AAB               	goto	u4393
  5790     0AAA  07B5               	addwf	___flmul@grs+3,f
  5791     0AAB                     u4393:
  5792     0AAB                     l2994:
  5793     0AAB  0824               	movf	___flmul@b,w
  5794     0AAC  00F0               	movwf	__Umul8_16@multiplicand
  5795     0AAD  0829               	movf	___flmul@a+1,w
  5796     0AAE  160A  158A  23A5  120A  158A  	fcall	__Umul8_16
  5797     0AB3  0871               	movf	?__Umul8_16+1,w
  5798     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  5799     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  5800     0AB6  00BD               	movwf	___flmul@temp+1
  5801     0AB7  0870               	movf	?__Umul8_16,w
  5802     0AB8  00BC               	movwf	___flmul@temp
  5803     0AB9                     l2996:
  5804     0AB9  083C               	movf	___flmul@temp,w
  5805     0ABA  00AC               	movwf	??___flmul
  5806     0ABB  083D               	movf	___flmul@temp+1,w
  5807     0ABC  00AD               	movwf	??___flmul+1
  5808     0ABD  01AE               	clrf	??___flmul+2
  5809     0ABE  01AF               	clrf	??___flmul+3
  5810     0ABF  082C               	movf	??___flmul,w
  5811     0AC0  07B2               	addwf	___flmul@grs,f
  5812     0AC1  082D               	movf	??___flmul+1,w
  5813     0AC2  1103               	clrz
  5814     0AC3  1803               	skipnc
  5815     0AC4  3E01               	addlw	1
  5816     0AC5  1903               	skipnz
  5817     0AC6  2AC8               	goto	u4401
  5818     0AC7  07B3               	addwf	___flmul@grs+1,f
  5819     0AC8                     u4401:
  5820     0AC8  082E               	movf	??___flmul+2,w
  5821     0AC9  1103               	clrz
  5822     0ACA  1803               	skipnc
  5823     0ACB  3E01               	addlw	1
  5824     0ACC  1903               	skipnz
  5825     0ACD  2ACF               	goto	u4402
  5826     0ACE  07B4               	addwf	___flmul@grs+2,f
  5827     0ACF                     u4402:
  5828     0ACF  082F               	movf	??___flmul+3,w
  5829     0AD0  1103               	clrz
  5830     0AD1  1803               	skipnc
  5831     0AD2  3E01               	addlw	1
  5832     0AD3  1903               	skipnz
  5833     0AD4  2AD6               	goto	u4403
  5834     0AD5  07B5               	addwf	___flmul@grs+3,f
  5835     0AD6                     u4403:
  5836     0AD6                     l2998:
  5837     0AD6  3008               	movlw	8
  5838     0AD7  00AC               	movwf	??___flmul
  5839     0AD8                     u4415:
  5840     0AD8  1003               	clrc
  5841     0AD9  0DB2               	rlf	___flmul@grs,f
  5842     0ADA  0DB3               	rlf	___flmul@grs+1,f
  5843     0ADB  0DB4               	rlf	___flmul@grs+2,f
  5844     0ADC  0DB5               	rlf	___flmul@grs+3,f
  5845     0ADD  0BAC               	decfsz	??___flmul,f
  5846     0ADE  2AD8               	goto	u4415
  5847     0ADF  0824               	movf	___flmul@b,w
  5848     0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5849     0AE1  0828               	movf	___flmul@a,w
  5850     0AE2  160A  158A  23A5  120A  158A  	fcall	__Umul8_16
  5851     0AE7  0871               	movf	?__Umul8_16+1,w
  5852     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5853     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5854     0AEA  00BD               	movwf	___flmul@temp+1
  5855     0AEB  0870               	movf	?__Umul8_16,w
  5856     0AEC  00BC               	movwf	___flmul@temp
  5857     0AED                     l3000:
  5858     0AED  083C               	movf	___flmul@temp,w
  5859     0AEE  00AC               	movwf	??___flmul
  5860     0AEF  083D               	movf	___flmul@temp+1,w
  5861     0AF0  00AD               	movwf	??___flmul+1
  5862     0AF1  01AE               	clrf	??___flmul+2
  5863     0AF2  01AF               	clrf	??___flmul+3
  5864     0AF3  082C               	movf	??___flmul,w
  5865     0AF4  07B2               	addwf	___flmul@grs,f
  5866     0AF5  082D               	movf	??___flmul+1,w
  5867     0AF6  1103               	clrz
  5868     0AF7  1803               	skipnc
  5869     0AF8  3E01               	addlw	1
  5870     0AF9  1903               	skipnz
  5871     0AFA  2AFC               	goto	u4421
  5872     0AFB  07B3               	addwf	___flmul@grs+1,f
  5873     0AFC                     u4421:
  5874     0AFC  082E               	movf	??___flmul+2,w
  5875     0AFD  1103               	clrz
  5876     0AFE  1803               	skipnc
  5877     0AFF  3E01               	addlw	1
  5878     0B00  1903               	skipnz
  5879     0B01  2B03               	goto	u4422
  5880     0B02  07B4               	addwf	___flmul@grs+2,f
  5881     0B03                     u4422:
  5882     0B03  082F               	movf	??___flmul+3,w
  5883     0B04  1103               	clrz
  5884     0B05  1803               	skipnc
  5885     0B06  3E01               	addlw	1
  5886     0B07  1903               	skipnz
  5887     0B08  2B0A               	goto	u4423
  5888     0B09  07B5               	addwf	___flmul@grs+3,f
  5889     0B0A                     u4423:
  5890     0B0A                     l3002:
  5891     0B0A  0825               	movf	___flmul@b+1,w
  5892     0B0B  00F0               	movwf	__Umul8_16@multiplicand
  5893     0B0C  082A               	movf	___flmul@a+2,w
  5894     0B0D  160A  158A  23A5  120A  158A  	fcall	__Umul8_16
  5895     0B12  0871               	movf	?__Umul8_16+1,w
  5896     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  5897     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  5898     0B15  00BD               	movwf	___flmul@temp+1
  5899     0B16  0870               	movf	?__Umul8_16,w
  5900     0B17  00BC               	movwf	___flmul@temp
  5901     0B18  083C               	movf	___flmul@temp,w
  5902     0B19  00AC               	movwf	??___flmul
  5903     0B1A  083D               	movf	___flmul@temp+1,w
  5904     0B1B  00AD               	movwf	??___flmul+1
  5905     0B1C  01AE               	clrf	??___flmul+2
  5906     0B1D  01AF               	clrf	??___flmul+3
  5907     0B1E  082C               	movf	??___flmul,w
  5908     0B1F  07B8               	addwf	___flmul@prod,f
  5909     0B20  082D               	movf	??___flmul+1,w
  5910     0B21  1103               	clrz
  5911     0B22  1803               	skipnc
  5912     0B23  3E01               	addlw	1
  5913     0B24  1903               	skipnz
  5914     0B25  2B27               	goto	u4431
  5915     0B26  07B9               	addwf	___flmul@prod+1,f
  5916     0B27                     u4431:
  5917     0B27  082E               	movf	??___flmul+2,w
  5918     0B28  1103               	clrz
  5919     0B29  1803               	skipnc
  5920     0B2A  3E01               	addlw	1
  5921     0B2B  1903               	skipnz
  5922     0B2C  2B2E               	goto	u4432
  5923     0B2D  07BA               	addwf	___flmul@prod+2,f
  5924     0B2E                     u4432:
  5925     0B2E  082F               	movf	??___flmul+3,w
  5926     0B2F  1103               	clrz
  5927     0B30  1803               	skipnc
  5928     0B31  3E01               	addlw	1
  5929     0B32  1903               	skipnz
  5930     0B33  2B35               	goto	u4433
  5931     0B34  07BB               	addwf	___flmul@prod+3,f
  5932     0B35                     u4433:
  5933     0B35                     l3004:
  5934     0B35  0826               	movf	___flmul@b+2,w
  5935     0B36  00F0               	movwf	__Umul8_16@multiplicand
  5936     0B37  0829               	movf	___flmul@a+1,w
  5937     0B38  160A  158A  23A5  120A  158A  	fcall	__Umul8_16
  5938     0B3D  0871               	movf	?__Umul8_16+1,w
  5939     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  5940     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  5941     0B40  00BD               	movwf	___flmul@temp+1
  5942     0B41  0870               	movf	?__Umul8_16,w
  5943     0B42  00BC               	movwf	___flmul@temp
  5944     0B43                     l3006:
  5945     0B43  083C               	movf	___flmul@temp,w
  5946     0B44  00AC               	movwf	??___flmul
  5947     0B45  083D               	movf	___flmul@temp+1,w
  5948     0B46  00AD               	movwf	??___flmul+1
  5949     0B47  01AE               	clrf	??___flmul+2
  5950     0B48  01AF               	clrf	??___flmul+3
  5951     0B49  082C               	movf	??___flmul,w
  5952     0B4A  07B8               	addwf	___flmul@prod,f
  5953     0B4B  082D               	movf	??___flmul+1,w
  5954     0B4C  1103               	clrz
  5955     0B4D  1803               	skipnc
  5956     0B4E  3E01               	addlw	1
  5957     0B4F  1903               	skipnz
  5958     0B50  2B52               	goto	u4441
  5959     0B51  07B9               	addwf	___flmul@prod+1,f
  5960     0B52                     u4441:
  5961     0B52  082E               	movf	??___flmul+2,w
  5962     0B53  1103               	clrz
  5963     0B54  1803               	skipnc
  5964     0B55  3E01               	addlw	1
  5965     0B56  1903               	skipnz
  5966     0B57  2B59               	goto	u4442
  5967     0B58  07BA               	addwf	___flmul@prod+2,f
  5968     0B59                     u4442:
  5969     0B59  082F               	movf	??___flmul+3,w
  5970     0B5A  1103               	clrz
  5971     0B5B  1803               	skipnc
  5972     0B5C  3E01               	addlw	1
  5973     0B5D  1903               	skipnz
  5974     0B5E  2B60               	goto	u4443
  5975     0B5F  07BB               	addwf	___flmul@prod+3,f
  5976     0B60                     u4443:
  5977     0B60  0826               	movf	___flmul@b+2,w
  5978     0B61  00F0               	movwf	__Umul8_16@multiplicand
  5979     0B62  082A               	movf	___flmul@a+2,w
  5980     0B63  160A  158A  23A5  120A  158A  	fcall	__Umul8_16
  5981     0B68  0871               	movf	?__Umul8_16+1,w
  5982     0B69  1283               	bcf	3,5	;RP0=0, select bank0
  5983     0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  5984     0B6B  00BD               	movwf	___flmul@temp+1
  5985     0B6C  0870               	movf	?__Umul8_16,w
  5986     0B6D  00BC               	movwf	___flmul@temp
  5987     0B6E                     l3008:
  5988     0B6E  083C               	movf	___flmul@temp,w
  5989     0B6F  00AC               	movwf	??___flmul
  5990     0B70  083D               	movf	___flmul@temp+1,w
  5991     0B71  00AD               	movwf	??___flmul+1
  5992     0B72  01AE               	clrf	??___flmul+2
  5993     0B73  01AF               	clrf	??___flmul+3
  5994     0B74  3008               	movlw	8
  5995     0B75                     u4455:
  5996     0B75  1003               	clrc
  5997     0B76  0DAC               	rlf	??___flmul,f
  5998     0B77  0DAD               	rlf	??___flmul+1,f
  5999     0B78  0DAE               	rlf	??___flmul+2,f
  6000     0B79  0DAF               	rlf	??___flmul+3,f
  6001     0B7A                     u4450:
  6002     0B7A  3EFF               	addlw	-1
  6003     0B7B  1D03               	skipz
  6004     0B7C  2B75               	goto	u4455
  6005     0B7D  082C               	movf	??___flmul,w
  6006     0B7E  07B8               	addwf	___flmul@prod,f
  6007     0B7F  082D               	movf	??___flmul+1,w
  6008     0B80  1103               	clrz
  6009     0B81  1803               	skipnc
  6010     0B82  3E01               	addlw	1
  6011     0B83  1903               	skipnz
  6012     0B84  2B86               	goto	u4461
  6013     0B85  07B9               	addwf	___flmul@prod+1,f
  6014     0B86                     u4461:
  6015     0B86  082E               	movf	??___flmul+2,w
  6016     0B87  1103               	clrz
  6017     0B88  1803               	skipnc
  6018     0B89  3E01               	addlw	1
  6019     0B8A  1903               	skipnz
  6020     0B8B  2B8D               	goto	u4462
  6021     0B8C  07BA               	addwf	___flmul@prod+2,f
  6022     0B8D                     u4462:
  6023     0B8D  082F               	movf	??___flmul+3,w
  6024     0B8E  1103               	clrz
  6025     0B8F  1803               	skipnc
  6026     0B90  3E01               	addlw	1
  6027     0B91  1903               	skipnz
  6028     0B92  2B94               	goto	u4463
  6029     0B93  07BB               	addwf	___flmul@prod+3,f
  6030     0B94                     u4463:
  6031     0B94                     l3010:
  6032     0B94  0832               	movf	___flmul@grs,w
  6033     0B95  00AC               	movwf	??___flmul
  6034     0B96  0833               	movf	___flmul@grs+1,w
  6035     0B97  00AD               	movwf	??___flmul+1
  6036     0B98  0834               	movf	___flmul@grs+2,w
  6037     0B99  00AE               	movwf	??___flmul+2
  6038     0B9A  0835               	movf	___flmul@grs+3,w
  6039     0B9B  00AF               	movwf	??___flmul+3
  6040     0B9C  3018               	movlw	24
  6041     0B9D                     u4475:
  6042     0B9D  1003               	clrc
  6043     0B9E  0CAF               	rrf	??___flmul+3,f
  6044     0B9F  0CAE               	rrf	??___flmul+2,f
  6045     0BA0  0CAD               	rrf	??___flmul+1,f
  6046     0BA1  0CAC               	rrf	??___flmul,f
  6047     0BA2                     u4470:
  6048     0BA2  3EFF               	addlw	-1
  6049     0BA3  1D03               	skipz
  6050     0BA4  2B9D               	goto	u4475
  6051     0BA5  082C               	movf	??___flmul,w
  6052     0BA6  07B8               	addwf	___flmul@prod,f
  6053     0BA7  082D               	movf	??___flmul+1,w
  6054     0BA8  1103               	clrz
  6055     0BA9  1803               	skipnc
  6056     0BAA  3E01               	addlw	1
  6057     0BAB  1903               	skipnz
  6058     0BAC  2BAE               	goto	u4481
  6059     0BAD  07B9               	addwf	___flmul@prod+1,f
  6060     0BAE                     u4481:
  6061     0BAE  082E               	movf	??___flmul+2,w
  6062     0BAF  1103               	clrz
  6063     0BB0  1803               	skipnc
  6064     0BB1  3E01               	addlw	1
  6065     0BB2  1903               	skipnz
  6066     0BB3  2BB5               	goto	u4482
  6067     0BB4  07BA               	addwf	___flmul@prod+2,f
  6068     0BB5                     u4482:
  6069     0BB5  082F               	movf	??___flmul+3,w
  6070     0BB6  1103               	clrz
  6071     0BB7  1803               	skipnc
  6072     0BB8  3E01               	addlw	1
  6073     0BB9  1903               	skipnz
  6074     0BBA  2BBC               	goto	u4483
  6075     0BBB  07BB               	addwf	___flmul@prod+3,f
  6076     0BBC                     u4483:
  6077     0BBC                     l3012:
  6078     0BBC  3008               	movlw	8
  6079     0BBD  00AC               	movwf	??___flmul
  6080     0BBE                     u4495:
  6081     0BBE  1003               	clrc
  6082     0BBF  0DB2               	rlf	___flmul@grs,f
  6083     0BC0  0DB3               	rlf	___flmul@grs+1,f
  6084     0BC1  0DB4               	rlf	___flmul@grs+2,f
  6085     0BC2  0DB5               	rlf	___flmul@grs+3,f
  6086     0BC3  0BAC               	decfsz	??___flmul,f
  6087     0BC4  2BBE               	goto	u4495
  6088     0BC5                     l3014:
  6089     0BC5  0837               	movf	___flmul@bexp,w
  6090     0BC6  0736               	addwf	___flmul@aexp,w
  6091     0BC7  00AC               	movwf	??___flmul
  6092     0BC8  01AD               	clrf	??___flmul+1
  6093     0BC9  0DAD               	rlf	??___flmul+1,f
  6094     0BCA  082C               	movf	??___flmul,w
  6095     0BCB  3E82               	addlw	130
  6096     0BCC  00BC               	movwf	___flmul@temp
  6097     0BCD  082D               	movf	??___flmul+1,w
  6098     0BCE  1803               	skipnc
  6099     0BCF  3E01               	addlw	1
  6100     0BD0  3EFF               	addlw	255
  6101     0BD1  00BD               	movwf	___flmul@temp+1
  6102     0BD2  2BF0               	goto	l3026
  6103     0BD3                     l3016:
  6104     0BD3  3001               	movlw	1
  6105     0BD4  00AC               	movwf	??___flmul
  6106     0BD5                     u4505:
  6107     0BD5  1003               	clrc
  6108     0BD6  0DB8               	rlf	___flmul@prod,f
  6109     0BD7  0DB9               	rlf	___flmul@prod+1,f
  6110     0BD8  0DBA               	rlf	___flmul@prod+2,f
  6111     0BD9  0DBB               	rlf	___flmul@prod+3,f
  6112     0BDA  0BAC               	decfsz	??___flmul,f
  6113     0BDB  2BD5               	goto	u4505
  6114     0BDC                     l3018:
  6115     0BDC  1FB5               	btfss	___flmul@grs+3,7
  6116     0BDD  2BDF               	goto	u4511
  6117     0BDE  2BE0               	goto	u4510
  6118     0BDF                     u4511:
  6119     0BDF  2BE1               	goto	l3022
  6120     0BE0                     u4510:
  6121     0BE0                     l3020:
  6122     0BE0  1438               	bsf	___flmul@prod,0
  6123     0BE1                     l3022:
  6124     0BE1  3001               	movlw	1
  6125     0BE2  00AC               	movwf	??___flmul
  6126     0BE3                     u4525:
  6127     0BE3  1003               	clrc
  6128     0BE4  0DB2               	rlf	___flmul@grs,f
  6129     0BE5  0DB3               	rlf	___flmul@grs+1,f
  6130     0BE6  0DB4               	rlf	___flmul@grs+2,f
  6131     0BE7  0DB5               	rlf	___flmul@grs+3,f
  6132     0BE8  0BAC               	decfsz	??___flmul,f
  6133     0BE9  2BE3               	goto	u4525
  6134     0BEA                     l3024:
  6135     0BEA  30FF               	movlw	255
  6136     0BEB  07BC               	addwf	___flmul@temp,f
  6137     0BEC  1803               	skipnc
  6138     0BED  0ABD               	incf	___flmul@temp+1,f
  6139     0BEE  30FF               	movlw	255
  6140     0BEF  07BD               	addwf	___flmul@temp+1,f
  6141     0BF0                     l3026:
  6142     0BF0  1FBA               	btfss	___flmul@prod+2,7
  6143     0BF1  2BF3               	goto	u4531
  6144     0BF2  2BF4               	goto	u4530
  6145     0BF3                     u4531:
  6146     0BF3  2BD3               	goto	l3016
  6147     0BF4                     u4530:
  6148     0BF4                     l3028:
  6149     0BF4  01B6               	clrf	___flmul@aexp
  6150     0BF5                     l3030:
  6151     0BF5  1FB5               	btfss	___flmul@grs+3,7
  6152     0BF6  2BF8               	goto	u4541
  6153     0BF7  2BF9               	goto	u4540
  6154     0BF8                     u4541:
  6155     0BF8  2C15               	goto	l3038
  6156     0BF9                     u4540:
  6157     0BF9                     l3032:
  6158     0BF9  30FF               	movlw	255
  6159     0BFA  0532               	andwf	___flmul@grs,w
  6160     0BFB  00AC               	movwf	??___flmul
  6161     0BFC  30FF               	movlw	255
  6162     0BFD  0533               	andwf	___flmul@grs+1,w
  6163     0BFE  00AD               	movwf	??___flmul+1
  6164     0BFF  30FF               	movlw	255
  6165     0C00  0534               	andwf	___flmul@grs+2,w
  6166     0C01  00AE               	movwf	??___flmul+2
  6167     0C02  307F               	movlw	127
  6168     0C03  0535               	andwf	___flmul@grs+3,w
  6169     0C04  00AF               	movwf	??___flmul+3
  6170     0C05  082F               	movf	??___flmul+3,w
  6171     0C06  042E               	iorwf	??___flmul+2,w
  6172     0C07  042D               	iorwf	??___flmul+1,w
  6173     0C08  042C               	iorwf	??___flmul,w
  6174     0C09  1903               	skipnz
  6175     0C0A  2C0C               	goto	u4551
  6176     0C0B  2C0D               	goto	u4550
  6177     0C0C                     u4551:
  6178     0C0C  2C10               	goto	l848
  6179     0C0D                     u4550:
  6180     0C0D                     l3034:
  6181     0C0D  01B6               	clrf	___flmul@aexp
  6182     0C0E  0AB6               	incf	___flmul@aexp,f
  6183     0C0F  2C15               	goto	l3038
  6184     0C10                     l848:
  6185     0C10  1C38               	btfss	___flmul@prod,0
  6186     0C11  2C13               	goto	u4561
  6187     0C12  2C14               	goto	u4560
  6188     0C13                     u4561:
  6189     0C13  2C15               	goto	l3038
  6190     0C14                     u4560:
  6191     0C14  2C0D               	goto	l3034
  6192     0C15                     l3038:
  6193     0C15  0836               	movf	___flmul@aexp,w
  6194     0C16  1903               	btfsc	3,2
  6195     0C17  2C19               	goto	u4571
  6196     0C18  2C1A               	goto	u4570
  6197     0C19                     u4571:
  6198     0C19  2C4B               	goto	l3048
  6199     0C1A                     u4570:
  6200     0C1A                     l3040:
  6201     0C1A  3001               	movlw	1
  6202     0C1B  07B8               	addwf	___flmul@prod,f
  6203     0C1C  3000               	movlw	0
  6204     0C1D  1803               	skipnc
  6205     0C1E  3001               	movlw	1
  6206     0C1F  07B9               	addwf	___flmul@prod+1,f
  6207     0C20  3000               	movlw	0
  6208     0C21  1803               	skipnc
  6209     0C22  3001               	movlw	1
  6210     0C23  07BA               	addwf	___flmul@prod+2,f
  6211     0C24  3000               	movlw	0
  6212     0C25  1803               	skipnc
  6213     0C26  3001               	movlw	1
  6214     0C27  07BB               	addwf	___flmul@prod+3,f
  6215     0C28                     l3042:
  6216     0C28  1C3B               	btfss	___flmul@prod+3,0
  6217     0C29  2C2B               	goto	u4581
  6218     0C2A  2C2C               	goto	u4580
  6219     0C2B                     u4581:
  6220     0C2B  2C4B               	goto	l3048
  6221     0C2C                     u4580:
  6222     0C2C                     l3044:
  6223     0C2C  0838               	movf	___flmul@prod,w
  6224     0C2D  00AC               	movwf	??___flmul
  6225     0C2E  0839               	movf	___flmul@prod+1,w
  6226     0C2F  00AD               	movwf	??___flmul+1
  6227     0C30  083A               	movf	___flmul@prod+2,w
  6228     0C31  00AE               	movwf	??___flmul+2
  6229     0C32  083B               	movf	___flmul@prod+3,w
  6230     0C33  00AF               	movwf	??___flmul+3
  6231     0C34  3001               	movlw	1
  6232     0C35  00B0               	movwf	??___flmul+4
  6233     0C36                     u4595:
  6234     0C36  0D2F               	rlf	??___flmul+3,w
  6235     0C37  0CAF               	rrf	??___flmul+3,f
  6236     0C38  0CAE               	rrf	??___flmul+2,f
  6237     0C39  0CAD               	rrf	??___flmul+1,f
  6238     0C3A  0CAC               	rrf	??___flmul,f
  6239     0C3B                     u4590:
  6240     0C3B  0BB0               	decfsz	??___flmul+4,f
  6241     0C3C  2C36               	goto	u4595
  6242     0C3D  082F               	movf	??___flmul+3,w
  6243     0C3E  00BB               	movwf	___flmul@prod+3
  6244     0C3F  082E               	movf	??___flmul+2,w
  6245     0C40  00BA               	movwf	___flmul@prod+2
  6246     0C41  082D               	movf	??___flmul+1,w
  6247     0C42  00B9               	movwf	___flmul@prod+1
  6248     0C43  082C               	movf	??___flmul,w
  6249     0C44  00B8               	movwf	___flmul@prod
  6250     0C45                     l3046:
  6251     0C45  3001               	movlw	1
  6252     0C46  07BC               	addwf	___flmul@temp,f
  6253     0C47  1803               	skipnc
  6254     0C48  0ABD               	incf	___flmul@temp+1,f
  6255     0C49  3000               	movlw	0
  6256     0C4A  07BD               	addwf	___flmul@temp+1,f
  6257     0C4B                     l3048:
  6258     0C4B  083D               	movf	___flmul@temp+1,w
  6259     0C4C  3A80               	xorlw	128
  6260     0C4D  00FF               	movwf	btemp+1
  6261     0C4E  3080               	movlw	128
  6262     0C4F  027F               	subwf	btemp+1,w
  6263     0C50  1D03               	skipz
  6264     0C51  2C54               	goto	u4605
  6265     0C52  30FF               	movlw	255
  6266     0C53  023C               	subwf	___flmul@temp,w
  6267     0C54                     u4605:
  6268     0C54  1C03               	skipc
  6269     0C55  2C57               	goto	u4601
  6270     0C56  2C58               	goto	u4600
  6271     0C57                     u4601:
  6272     0C57  2C63               	goto	l3052
  6273     0C58                     u4600:
  6274     0C58                     l3050:
  6275     0C58  307F               	movlw	127
  6276     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  6277     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  6278     0C5B  00BB               	movwf	___flmul@prod+3
  6279     0C5C  3080               	movlw	128
  6280     0C5D  00BA               	movwf	___flmul@prod+2
  6281     0C5E  3000               	movlw	0
  6282     0C5F  00B9               	movwf	___flmul@prod+1
  6283     0C60  3000               	movlw	0
  6284     0C61  00B8               	movwf	___flmul@prod
  6285     0C62  2C94               	goto	l854
  6286     0C63                     l3052:
  6287     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6288     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  6289     0C65  083D               	movf	___flmul@temp+1,w
  6290     0C66  3A80               	xorlw	128
  6291     0C67  00FF               	movwf	btemp+1
  6292     0C68  3080               	movlw	128
  6293     0C69  027F               	subwf	btemp+1,w
  6294     0C6A  1D03               	skipz
  6295     0C6B  2C6E               	goto	u4615
  6296     0C6C  3001               	movlw	1
  6297     0C6D  023C               	subwf	___flmul@temp,w
  6298     0C6E                     u4615:
  6299     0C6E  1803               	skipnc
  6300     0C6F  2C71               	goto	u4611
  6301     0C70  2C72               	goto	u4610
  6302     0C71                     u4611:
  6303     0C71  2C7E               	goto	l3058
  6304     0C72                     u4610:
  6305     0C72                     l3054:
  6306     0C72  3000               	movlw	0
  6307     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  6308     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  6309     0C75  00BB               	movwf	___flmul@prod+3
  6310     0C76  3000               	movlw	0
  6311     0C77  00BA               	movwf	___flmul@prod+2
  6312     0C78  3000               	movlw	0
  6313     0C79  00B9               	movwf	___flmul@prod+1
  6314     0C7A  3000               	movlw	0
  6315     0C7B  00B8               	movwf	___flmul@prod
  6316     0C7C                     l3056:
  6317     0C7C  01B1               	clrf	___flmul@sign
  6318     0C7D  2C94               	goto	l854
  6319     0C7E                     l3058:
  6320     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  6321     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  6322     0C80  083C               	movf	___flmul@temp,w
  6323     0C81  00B7               	movwf	___flmul@bexp
  6324     0C82  30FF               	movlw	255
  6325     0C83  05B8               	andwf	___flmul@prod,f
  6326     0C84  30FF               	movlw	255
  6327     0C85  05B9               	andwf	___flmul@prod+1,f
  6328     0C86  307F               	movlw	127
  6329     0C87  05BA               	andwf	___flmul@prod+2,f
  6330     0C88  3000               	movlw	0
  6331     0C89  05BB               	andwf	___flmul@prod+3,f
  6332     0C8A                     l3060:
  6333     0C8A  1C37               	btfss	___flmul@bexp,0
  6334     0C8B  2C8D               	goto	u4621
  6335     0C8C  2C8E               	goto	u4620
  6336     0C8D                     u4621:
  6337     0C8D  2C8F               	goto	l3064
  6338     0C8E                     u4620:
  6339     0C8E                     l3062:
  6340     0C8E  17BA               	bsf	___flmul@prod+2,7
  6341     0C8F                     l3064:
  6342     0C8F  0837               	movf	___flmul@bexp,w
  6343     0C90  00AC               	movwf	??___flmul
  6344     0C91  1003               	clrc
  6345     0C92  0C2C               	rrf	??___flmul,w
  6346     0C93  00BB               	movwf	___flmul@prod+3
  6347     0C94                     l854:
  6348     0C94  0831               	movf	___flmul@sign,w
  6349     0C95  00AC               	movwf	??___flmul
  6350     0C96  082C               	movf	??___flmul,w
  6351     0C97  04BB               	iorwf	___flmul@prod+3,f
  6352     0C98                     l3066:
  6353     0C98  083B               	movf	___flmul@prod+3,w
  6354     0C99  00A7               	movwf	?___flmul+3
  6355     0C9A  083A               	movf	___flmul@prod+2,w
  6356     0C9B  00A6               	movwf	?___flmul+2
  6357     0C9C  0839               	movf	___flmul@prod+1,w
  6358     0C9D  00A5               	movwf	?___flmul+1
  6359     0C9E  0838               	movf	___flmul@prod,w
  6360     0C9F  00A4               	movwf	?___flmul
  6361     0CA0                     l842:
  6362     0CA0  0008               	return
  6363     0CA1                     __end_of___flmul:
  6364                           
  6365                           	psect	text10
  6366     1BA5                     __ptext10:	
  6367 ;; *************** function __Umul8_16 *****************
  6368 ;; Defined at:
  6369 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  multiplier      1    wreg     unsigned char 
  6372 ;;  multiplicand    1    0[COMMON] unsigned char 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;  multiplier      1    8[COMMON] unsigned char 
  6375 ;;  word_mpld       2    6[COMMON] unsigned int 
  6376 ;;  product         2    4[COMMON] unsigned int 
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  2    0[COMMON] unsigned int 
  6379 ;; Registers used:
  6380 ;;		wreg, status,2, status,0
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6386 ;;      Params:         2       0       0       0       0
  6387 ;;      Locals:         5       0       0       0       0
  6388 ;;      Temps:          2       0       0       0       0
  6389 ;;      Totals:         9       0       0       0       0
  6390 ;;Total ram usage:        9 bytes
  6391 ;; Hardware stack levels used: 1
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		___flmul
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399     1BA5                     __Umul8_16:	
  6400                           ;psect for function __Umul8_16
  6401                           
  6402                           
  6403                           ;incstack = 0
  6404                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6405                           ;__Umul8_16@multiplier stored from wreg
  6406     1BA5  00F8               	movwf	__Umul8_16@multiplier
  6407     1BA6                     l2558:
  6408     1BA6  01F4               	clrf	__Umul8_16@product
  6409     1BA7  01F5               	clrf	__Umul8_16@product+1
  6410     1BA8                     l2560:
  6411     1BA8  0870               	movf	__Umul8_16@multiplicand,w
  6412     1BA9  00F2               	movwf	??__Umul8_16
  6413     1BAA  01F3               	clrf	??__Umul8_16+1
  6414     1BAB  0872               	movf	??__Umul8_16,w
  6415     1BAC  00F6               	movwf	__Umul8_16@word_mpld
  6416     1BAD  0873               	movf	??__Umul8_16+1,w
  6417     1BAE  00F7               	movwf	__Umul8_16@word_mpld+1
  6418     1BAF                     l2562:
  6419     1BAF  1C78               	btfss	__Umul8_16@multiplier,0
  6420     1BB0  2BB2               	goto	u3341
  6421     1BB1  2BB3               	goto	u3340
  6422     1BB2                     u3341:
  6423     1BB2  2BB9               	goto	l861
  6424     1BB3                     u3340:
  6425     1BB3                     l2564:
  6426     1BB3  0876               	movf	__Umul8_16@word_mpld,w
  6427     1BB4  07F4               	addwf	__Umul8_16@product,f
  6428     1BB5  1803               	skipnc
  6429     1BB6  0AF5               	incf	__Umul8_16@product+1,f
  6430     1BB7  0877               	movf	__Umul8_16@word_mpld+1,w
  6431     1BB8  07F5               	addwf	__Umul8_16@product+1,f
  6432     1BB9                     l861:
  6433     1BB9  3001               	movlw	1
  6434     1BBA                     u3355:
  6435     1BBA  1003               	clrc
  6436     1BBB  0DF6               	rlf	__Umul8_16@word_mpld,f
  6437     1BBC  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6438     1BBD  3EFF               	addlw	-1
  6439     1BBE  1D03               	skipz
  6440     1BBF  2BBA               	goto	u3355
  6441     1BC0  1003               	clrc
  6442     1BC1  0CF8               	rrf	__Umul8_16@multiplier,f
  6443     1BC2                     l2566:
  6444     1BC2  0878               	movf	__Umul8_16@multiplier,w
  6445     1BC3  1D03               	btfss	3,2
  6446     1BC4  2BC6               	goto	u3361
  6447     1BC5  2BC7               	goto	u3360
  6448     1BC6                     u3361:
  6449     1BC6  2BAF               	goto	l2562
  6450     1BC7                     u3360:
  6451     1BC7                     l2568:
  6452     1BC7  0875               	movf	__Umul8_16@product+1,w
  6453     1BC8  00F1               	movwf	?__Umul8_16+1
  6454     1BC9  0874               	movf	__Umul8_16@product,w
  6455     1BCA  00F0               	movwf	?__Umul8_16
  6456     1BCB                     l863:
  6457     1BCB  0008               	return
  6458     1BCC                     __end_of__Umul8_16:
  6459                           
  6460                           	psect	text11
  6461     1113                     __ptext11:	
  6462 ;; *************** function __tdiv_to_l_ *****************
  6463 ;; Defined at:
  6464 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;  f1              4    0[COMMON] float 
  6467 ;;  f2              4    4[COMMON] float 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;  quot            4    0[BANK0 ] unsigned long 
  6470 ;;  exp1            1    5[BANK0 ] unsigned char 
  6471 ;;  cntr            1    4[BANK0 ] unsigned char 
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  4    0[COMMON] unsigned long 
  6474 ;; Registers used:
  6475 ;;		wreg, status,2, status,0
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6481 ;;      Params:         8       0       0       0       0
  6482 ;;      Locals:         0       6       0       0       0
  6483 ;;      Temps:          3       0       0       0       0
  6484 ;;      Totals:        11       6       0       0       0
  6485 ;;Total ram usage:       17 bytes
  6486 ;; Hardware stack levels used: 1
  6487 ;; This function calls:
  6488 ;;		Nothing
  6489 ;; This function is called by:
  6490 ;;		_sprintf
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494     1113                     __tdiv_to_l_:	
  6495                           ;psect for function __tdiv_to_l_
  6496                           
  6497     1113                     l3186:	
  6498                           ;incstack = 0
  6499                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6500                           
  6501     1113  0870               	movf	__tdiv_to_l_@f1,w
  6502     1114  00F8               	movwf	??__tdiv_to_l_
  6503     1115  0871               	movf	__tdiv_to_l_@f1+1,w
  6504     1116  00F9               	movwf	??__tdiv_to_l_+1
  6505     1117  0872               	movf	__tdiv_to_l_@f1+2,w
  6506     1118  00FA               	movwf	??__tdiv_to_l_+2
  6507     1119  1003               	clrc
  6508     111A  0D79               	rlf	??__tdiv_to_l_+1,w
  6509     111B  0D7A               	rlf	??__tdiv_to_l_+2,w
  6510     111C  1283               	bcf	3,5	;RP0=0, select bank0
  6511     111D  1303               	bcf	3,6	;RP1=0, select bank0
  6512     111E  00A5               	movwf	__tdiv_to_l_@exp1
  6513     111F  0825               	movf	__tdiv_to_l_@exp1,w
  6514     1120  1D03               	btfss	3,2
  6515     1121  2923               	goto	u4941
  6516     1122  2924               	goto	u4940
  6517     1123                     u4941:
  6518     1123  292D               	goto	l3192
  6519     1124                     u4940:
  6520     1124                     l3188:
  6521     1124  3000               	movlw	0
  6522     1125  00F3               	movwf	?__tdiv_to_l_+3
  6523     1126  3000               	movlw	0
  6524     1127  00F2               	movwf	?__tdiv_to_l_+2
  6525     1128  3000               	movlw	0
  6526     1129  00F1               	movwf	?__tdiv_to_l_+1
  6527     112A  3000               	movlw	0
  6528     112B  00F0               	movwf	?__tdiv_to_l_
  6529     112C  29C9               	goto	l636
  6530     112D                     l3192:
  6531     112D  0874               	movf	__tdiv_to_l_@f2,w
  6532     112E  00F8               	movwf	??__tdiv_to_l_
  6533     112F  0875               	movf	__tdiv_to_l_@f2+1,w
  6534     1130  00F9               	movwf	??__tdiv_to_l_+1
  6535     1131  0876               	movf	__tdiv_to_l_@f2+2,w
  6536     1132  00FA               	movwf	??__tdiv_to_l_+2
  6537     1133  1003               	clrc
  6538     1134  0D79               	rlf	??__tdiv_to_l_+1,w
  6539     1135  0D7A               	rlf	??__tdiv_to_l_+2,w
  6540     1136  00A4               	movwf	__tdiv_to_l_@cntr
  6541     1137  0824               	movf	__tdiv_to_l_@cntr,w
  6542     1138  1D03               	btfss	3,2
  6543     1139  293B               	goto	u4951
  6544     113A  293C               	goto	u4950
  6545     113B                     u4951:
  6546     113B  293D               	goto	l637
  6547     113C                     u4950:
  6548     113C  2924               	goto	l3188
  6549     113D                     l637:
  6550     113D  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6551     113E                     l3198:
  6552     113E  30FF               	movlw	255
  6553     113F  05F0               	andwf	__tdiv_to_l_@f1,f
  6554     1140  30FF               	movlw	255
  6555     1141  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6556     1142  3000               	movlw	0
  6557     1143  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6558     1144                     l3200:
  6559     1144  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6560     1145  30FF               	movlw	255
  6561     1146  05F4               	andwf	__tdiv_to_l_@f2,f
  6562     1147  30FF               	movlw	255
  6563     1148  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6564     1149  3000               	movlw	0
  6565     114A  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6566     114B  3000               	movlw	0
  6567     114C  00A3               	movwf	__tdiv_to_l_@quot+3
  6568     114D  3000               	movlw	0
  6569     114E  00A2               	movwf	__tdiv_to_l_@quot+2
  6570     114F  3000               	movlw	0
  6571     1150  00A1               	movwf	__tdiv_to_l_@quot+1
  6572     1151  3000               	movlw	0
  6573     1152  00A0               	movwf	__tdiv_to_l_@quot
  6574     1153                     l3202:
  6575     1153  307F               	movlw	127
  6576     1154  02A5               	subwf	__tdiv_to_l_@exp1,f
  6577     1155                     l3204:
  6578     1155  3098               	movlw	152
  6579     1156  0724               	addwf	__tdiv_to_l_@cntr,w
  6580     1157  00F8               	movwf	??__tdiv_to_l_
  6581     1158  0878               	movf	??__tdiv_to_l_,w
  6582     1159  02A5               	subwf	__tdiv_to_l_@exp1,f
  6583     115A  3018               	movlw	24
  6584     115B  00A4               	movwf	__tdiv_to_l_@cntr
  6585     115C                     l3206:
  6586     115C  3001               	movlw	1
  6587     115D  00F8               	movwf	??__tdiv_to_l_
  6588     115E                     u4965:
  6589     115E  1003               	clrc
  6590     115F  0DA0               	rlf	__tdiv_to_l_@quot,f
  6591     1160  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6592     1161  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6593     1162  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6594     1163  0BF8               	decfsz	??__tdiv_to_l_,f
  6595     1164  295E               	goto	u4965
  6596     1165                     l3208:
  6597     1165  0876               	movf	__tdiv_to_l_@f2+2,w
  6598     1166  0272               	subwf	__tdiv_to_l_@f1+2,w
  6599     1167  1D03               	skipz
  6600     1168  296F               	goto	u4975
  6601     1169  0875               	movf	__tdiv_to_l_@f2+1,w
  6602     116A  0271               	subwf	__tdiv_to_l_@f1+1,w
  6603     116B  1D03               	skipz
  6604     116C  296F               	goto	u4975
  6605     116D  0874               	movf	__tdiv_to_l_@f2,w
  6606     116E  0270               	subwf	__tdiv_to_l_@f1,w
  6607     116F                     u4975:
  6608     116F  1C03               	skipc
  6609     1170  2972               	goto	u4971
  6610     1171  2973               	goto	u4970
  6611     1172                     u4971:
  6612     1172  297E               	goto	l3214
  6613     1173                     u4970:
  6614     1173                     l3210:
  6615     1173  0874               	movf	__tdiv_to_l_@f2,w
  6616     1174  02F0               	subwf	__tdiv_to_l_@f1,f
  6617     1175  0875               	movf	__tdiv_to_l_@f2+1,w
  6618     1176  1C03               	skipc
  6619     1177  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6620     1178  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6621     1179  0876               	movf	__tdiv_to_l_@f2+2,w
  6622     117A  1C03               	skipc
  6623     117B  0A76               	incf	__tdiv_to_l_@f2+2,w
  6624     117C  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6625     117D                     l3212:
  6626     117D  1420               	bsf	__tdiv_to_l_@quot,0
  6627     117E                     l3214:
  6628     117E  3001               	movlw	1
  6629     117F                     u4985:
  6630     117F  1003               	clrc
  6631     1180  0DF0               	rlf	__tdiv_to_l_@f1,f
  6632     1181  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6633     1182  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6634     1183  3EFF               	addlw	-1
  6635     1184  1D03               	skipz
  6636     1185  297F               	goto	u4985
  6637     1186                     l3216:
  6638     1186  3001               	movlw	1
  6639     1187  02A4               	subwf	__tdiv_to_l_@cntr,f
  6640     1188  1D03               	btfss	3,2
  6641     1189  298B               	goto	u4991
  6642     118A  298C               	goto	u4990
  6643     118B                     u4991:
  6644     118B  295C               	goto	l3206
  6645     118C                     u4990:
  6646     118C                     l640:
  6647     118C  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6648     118D  298F               	goto	u5001
  6649     118E  2990               	goto	u5000
  6650     118F                     u5001:
  6651     118F  29AA               	goto	l3226
  6652     1190                     u5000:
  6653     1190                     l3218:
  6654     1190  0825               	movf	__tdiv_to_l_@exp1,w
  6655     1191  3A80               	xorlw	128
  6656     1192  3E97               	addlw	151
  6657     1193  1803               	skipnc
  6658     1194  2996               	goto	u5011
  6659     1195  2997               	goto	u5010
  6660     1196                     u5011:
  6661     1196  2998               	goto	l3224
  6662     1197                     u5010:
  6663     1197  2924               	goto	l3188
  6664     1198                     l3224:
  6665     1198  3001               	movlw	1
  6666     1199                     u5025:
  6667     1199  1003               	clrc
  6668     119A  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6669     119B  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6670     119C  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6671     119D  0CA0               	rrf	__tdiv_to_l_@quot,f
  6672     119E  3EFF               	addlw	-1
  6673     119F  1D03               	skipz
  6674     11A0  2999               	goto	u5025
  6675     11A1  3001               	movlw	1
  6676     11A2  00F8               	movwf	??__tdiv_to_l_
  6677     11A3  0878               	movf	??__tdiv_to_l_,w
  6678     11A4  07A5               	addwf	__tdiv_to_l_@exp1,f
  6679     11A5  1D03               	btfss	3,2
  6680     11A6  29A8               	goto	u5031
  6681     11A7  29A9               	goto	u5030
  6682     11A8                     u5031:
  6683     11A8  2998               	goto	l3224
  6684     11A9                     u5030:
  6685     11A9  29C1               	goto	l3234
  6686     11AA                     l3226:
  6687     11AA  3018               	movlw	24
  6688     11AB  0225               	subwf	__tdiv_to_l_@exp1,w
  6689     11AC  1C03               	skipc
  6690     11AD  29AF               	goto	u5041
  6691     11AE  29B0               	goto	u5040
  6692     11AF                     u5041:
  6693     11AF  29BC               	goto	l647
  6694     11B0                     u5040:
  6695     11B0  2924               	goto	l3188
  6696     11B1                     l3232:
  6697     11B1  3001               	movlw	1
  6698     11B2  00F8               	movwf	??__tdiv_to_l_
  6699     11B3                     u5055:
  6700     11B3  1003               	clrc
  6701     11B4  0DA0               	rlf	__tdiv_to_l_@quot,f
  6702     11B5  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6703     11B6  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6704     11B7  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6705     11B8  0BF8               	decfsz	??__tdiv_to_l_,f
  6706     11B9  29B3               	goto	u5055
  6707     11BA  3001               	movlw	1
  6708     11BB  02A5               	subwf	__tdiv_to_l_@exp1,f
  6709     11BC                     l647:
  6710     11BC  0825               	movf	__tdiv_to_l_@exp1,w
  6711     11BD  1D03               	btfss	3,2
  6712     11BE  29C0               	goto	u5061
  6713     11BF  29C1               	goto	u5060
  6714     11C0                     u5061:
  6715     11C0  29B1               	goto	l3232
  6716     11C1                     u5060:
  6717     11C1                     l3234:
  6718     11C1  0823               	movf	__tdiv_to_l_@quot+3,w
  6719     11C2  00F3               	movwf	?__tdiv_to_l_+3
  6720     11C3  0822               	movf	__tdiv_to_l_@quot+2,w
  6721     11C4  00F2               	movwf	?__tdiv_to_l_+2
  6722     11C5  0821               	movf	__tdiv_to_l_@quot+1,w
  6723     11C6  00F1               	movwf	?__tdiv_to_l_+1
  6724     11C7  0820               	movf	__tdiv_to_l_@quot,w
  6725     11C8  00F0               	movwf	?__tdiv_to_l_
  6726     11C9                     l636:
  6727     11C9  0008               	return
  6728     11CA                     __end_of__tdiv_to_l_:
  6729                           
  6730                           	psect	text12
  6731     0024                     __ptext12:	
  6732 ;; *************** function __div_to_l_ *****************
  6733 ;; Defined at:
  6734 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  f1              4    0[COMMON] unsigned long 
  6737 ;;  f2              4    4[COMMON] unsigned long 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  quot            4    0[BANK0 ] unsigned long 
  6740 ;;  exp1            1    5[BANK0 ] unsigned char 
  6741 ;;  cntr            1    4[BANK0 ] unsigned char 
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  4    0[COMMON] unsigned long 
  6744 ;; Registers used:
  6745 ;;		wreg, status,2, status,0
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6751 ;;      Params:         8       0       0       0       0
  6752 ;;      Locals:         0       6       0       0       0
  6753 ;;      Temps:          1       0       0       0       0
  6754 ;;      Totals:         9       6       0       0       0
  6755 ;;Total ram usage:       15 bytes
  6756 ;; Hardware stack levels used: 1
  6757 ;; This function calls:
  6758 ;;		Nothing
  6759 ;; This function is called by:
  6760 ;;		_sprintf
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764     0024                     __div_to_l_:	
  6765                           ;psect for function __div_to_l_
  6766                           
  6767     0024                     l3238:	
  6768                           ;incstack = 0
  6769                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6770                           
  6771     0024  1003               	clrc
  6772     0025  0D72               	rlf	__div_to_l_@f1+2,w
  6773     0026  0D73               	rlf	__div_to_l_@f1+3,w
  6774     0027  1283               	bcf	3,5	;RP0=0, select bank0
  6775     0028  1303               	bcf	3,6	;RP1=0, select bank0
  6776     0029  00A5               	movwf	__div_to_l_@exp1
  6777     002A  0825               	movf	__div_to_l_@exp1,w
  6778     002B  1D03               	btfss	3,2
  6779     002C  282E               	goto	u5071
  6780     002D  282F               	goto	u5070
  6781     002E                     u5071:
  6782     002E  2838               	goto	l3244
  6783     002F                     u5070:
  6784     002F                     l3240:
  6785     002F  3000               	movlw	0
  6786     0030  00F3               	movwf	?__div_to_l_+3
  6787     0031  3000               	movlw	0
  6788     0032  00F2               	movwf	?__div_to_l_+2
  6789     0033  3000               	movlw	0
  6790     0034  00F1               	movwf	?__div_to_l_+1
  6791     0035  3000               	movlw	0
  6792     0036  00F0               	movwf	?__div_to_l_
  6793     0037  28DB               	goto	l589
  6794     0038                     l3244:
  6795     0038  1003               	clrc
  6796     0039  0D76               	rlf	__div_to_l_@f2+2,w
  6797     003A  0D77               	rlf	__div_to_l_@f2+3,w
  6798     003B  00A4               	movwf	__div_to_l_@cntr
  6799     003C  0824               	movf	__div_to_l_@cntr,w
  6800     003D  1D03               	btfss	3,2
  6801     003E  2840               	goto	u5081
  6802     003F  2841               	goto	u5080
  6803     0040                     u5081:
  6804     0040  2842               	goto	l590
  6805     0041                     u5080:
  6806     0041  282F               	goto	l3240
  6807     0042                     l590:
  6808     0042  17F2               	bsf	__div_to_l_@f1+2,7
  6809     0043                     l3250:
  6810     0043  30FF               	movlw	255
  6811     0044  05F0               	andwf	__div_to_l_@f1,f
  6812     0045  30FF               	movlw	255
  6813     0046  05F1               	andwf	__div_to_l_@f1+1,f
  6814     0047  30FF               	movlw	255
  6815     0048  05F2               	andwf	__div_to_l_@f1+2,f
  6816     0049  3000               	movlw	0
  6817     004A  05F3               	andwf	__div_to_l_@f1+3,f
  6818     004B                     l3252:
  6819     004B  17F6               	bsf	__div_to_l_@f2+2,7
  6820     004C  30FF               	movlw	255
  6821     004D  05F4               	andwf	__div_to_l_@f2,f
  6822     004E  30FF               	movlw	255
  6823     004F  05F5               	andwf	__div_to_l_@f2+1,f
  6824     0050  30FF               	movlw	255
  6825     0051  05F6               	andwf	__div_to_l_@f2+2,f
  6826     0052  3000               	movlw	0
  6827     0053  05F7               	andwf	__div_to_l_@f2+3,f
  6828     0054  3000               	movlw	0
  6829     0055  00A3               	movwf	__div_to_l_@quot+3
  6830     0056  3000               	movlw	0
  6831     0057  00A2               	movwf	__div_to_l_@quot+2
  6832     0058  3000               	movlw	0
  6833     0059  00A1               	movwf	__div_to_l_@quot+1
  6834     005A  3000               	movlw	0
  6835     005B  00A0               	movwf	__div_to_l_@quot
  6836     005C                     l3254:
  6837     005C  307F               	movlw	127
  6838     005D  02A5               	subwf	__div_to_l_@exp1,f
  6839     005E                     l3256:
  6840     005E  30A0               	movlw	160
  6841     005F  0724               	addwf	__div_to_l_@cntr,w
  6842     0060  00F8               	movwf	??__div_to_l_
  6843     0061  0878               	movf	??__div_to_l_,w
  6844     0062  02A5               	subwf	__div_to_l_@exp1,f
  6845     0063  3020               	movlw	32
  6846     0064  00A4               	movwf	__div_to_l_@cntr
  6847     0065                     l3258:
  6848     0065  3001               	movlw	1
  6849     0066  00F8               	movwf	??__div_to_l_
  6850     0067                     u5095:
  6851     0067  1003               	clrc
  6852     0068  0DA0               	rlf	__div_to_l_@quot,f
  6853     0069  0DA1               	rlf	__div_to_l_@quot+1,f
  6854     006A  0DA2               	rlf	__div_to_l_@quot+2,f
  6855     006B  0DA3               	rlf	__div_to_l_@quot+3,f
  6856     006C  0BF8               	decfsz	??__div_to_l_,f
  6857     006D  2867               	goto	u5095
  6858     006E                     l3260:
  6859     006E  0877               	movf	__div_to_l_@f2+3,w
  6860     006F  0273               	subwf	__div_to_l_@f1+3,w
  6861     0070  1D03               	skipz
  6862     0071  287C               	goto	u5105
  6863     0072  0876               	movf	__div_to_l_@f2+2,w
  6864     0073  0272               	subwf	__div_to_l_@f1+2,w
  6865     0074  1D03               	skipz
  6866     0075  287C               	goto	u5105
  6867     0076  0875               	movf	__div_to_l_@f2+1,w
  6868     0077  0271               	subwf	__div_to_l_@f1+1,w
  6869     0078  1D03               	skipz
  6870     0079  287C               	goto	u5105
  6871     007A  0874               	movf	__div_to_l_@f2,w
  6872     007B  0270               	subwf	__div_to_l_@f1,w
  6873     007C                     u5105:
  6874     007C  1C03               	skipc
  6875     007D  287F               	goto	u5101
  6876     007E  2880               	goto	u5100
  6877     007F                     u5101:
  6878     007F  288F               	goto	l3266
  6879     0080                     u5100:
  6880     0080                     l3262:
  6881     0080  0874               	movf	__div_to_l_@f2,w
  6882     0081  02F0               	subwf	__div_to_l_@f1,f
  6883     0082  0875               	movf	__div_to_l_@f2+1,w
  6884     0083  1C03               	skipc
  6885     0084  0F75               	incfsz	__div_to_l_@f2+1,w
  6886     0085  02F1               	subwf	__div_to_l_@f1+1,f
  6887     0086  0876               	movf	__div_to_l_@f2+2,w
  6888     0087  1C03               	skipc
  6889     0088  0F76               	incfsz	__div_to_l_@f2+2,w
  6890     0089  02F2               	subwf	__div_to_l_@f1+2,f
  6891     008A  0877               	movf	__div_to_l_@f2+3,w
  6892     008B  1C03               	skipc
  6893     008C  0F77               	incfsz	__div_to_l_@f2+3,w
  6894     008D  02F3               	subwf	__div_to_l_@f1+3,f
  6895     008E                     l3264:
  6896     008E  1420               	bsf	__div_to_l_@quot,0
  6897     008F                     l3266:
  6898     008F  3001               	movlw	1
  6899     0090  00F8               	movwf	??__div_to_l_
  6900     0091                     u5115:
  6901     0091  1003               	clrc
  6902     0092  0DF0               	rlf	__div_to_l_@f1,f
  6903     0093  0DF1               	rlf	__div_to_l_@f1+1,f
  6904     0094  0DF2               	rlf	__div_to_l_@f1+2,f
  6905     0095  0DF3               	rlf	__div_to_l_@f1+3,f
  6906     0096  0BF8               	decfsz	??__div_to_l_,f
  6907     0097  2891               	goto	u5115
  6908     0098                     l3268:
  6909     0098  3001               	movlw	1
  6910     0099  02A4               	subwf	__div_to_l_@cntr,f
  6911     009A  1D03               	btfss	3,2
  6912     009B  289D               	goto	u5121
  6913     009C  289E               	goto	u5120
  6914     009D                     u5121:
  6915     009D  2865               	goto	l3258
  6916     009E                     u5120:
  6917     009E                     l593:
  6918     009E  1FA5               	btfss	__div_to_l_@exp1,7
  6919     009F  28A1               	goto	u5131
  6920     00A0  28A2               	goto	u5130
  6921     00A1                     u5131:
  6922     00A1  28BC               	goto	l3278
  6923     00A2                     u5130:
  6924     00A2                     l3270:
  6925     00A2  0825               	movf	__div_to_l_@exp1,w
  6926     00A3  3A80               	xorlw	128
  6927     00A4  3E9F               	addlw	159
  6928     00A5  1803               	skipnc
  6929     00A6  28A8               	goto	u5141
  6930     00A7  28A9               	goto	u5140
  6931     00A8                     u5141:
  6932     00A8  28AA               	goto	l3276
  6933     00A9                     u5140:
  6934     00A9  282F               	goto	l3240
  6935     00AA                     l3276:
  6936     00AA  3001               	movlw	1
  6937     00AB                     u5155:
  6938     00AB  1003               	clrc
  6939     00AC  0CA3               	rrf	__div_to_l_@quot+3,f
  6940     00AD  0CA2               	rrf	__div_to_l_@quot+2,f
  6941     00AE  0CA1               	rrf	__div_to_l_@quot+1,f
  6942     00AF  0CA0               	rrf	__div_to_l_@quot,f
  6943     00B0  3EFF               	addlw	-1
  6944     00B1  1D03               	skipz
  6945     00B2  28AB               	goto	u5155
  6946     00B3  3001               	movlw	1
  6947     00B4  00F8               	movwf	??__div_to_l_
  6948     00B5  0878               	movf	??__div_to_l_,w
  6949     00B6  07A5               	addwf	__div_to_l_@exp1,f
  6950     00B7  1D03               	btfss	3,2
  6951     00B8  28BA               	goto	u5161
  6952     00B9  28BB               	goto	u5160
  6953     00BA                     u5161:
  6954     00BA  28AA               	goto	l3276
  6955     00BB                     u5160:
  6956     00BB  28D3               	goto	l3286
  6957     00BC                     l3278:
  6958     00BC  3020               	movlw	32
  6959     00BD  0225               	subwf	__div_to_l_@exp1,w
  6960     00BE  1C03               	skipc
  6961     00BF  28C1               	goto	u5171
  6962     00C0  28C2               	goto	u5170
  6963     00C1                     u5171:
  6964     00C1  28CE               	goto	l600
  6965     00C2                     u5170:
  6966     00C2  282F               	goto	l3240
  6967     00C3                     l3284:
  6968     00C3  3001               	movlw	1
  6969     00C4  00F8               	movwf	??__div_to_l_
  6970     00C5                     u5185:
  6971     00C5  1003               	clrc
  6972     00C6  0DA0               	rlf	__div_to_l_@quot,f
  6973     00C7  0DA1               	rlf	__div_to_l_@quot+1,f
  6974     00C8  0DA2               	rlf	__div_to_l_@quot+2,f
  6975     00C9  0DA3               	rlf	__div_to_l_@quot+3,f
  6976     00CA  0BF8               	decfsz	??__div_to_l_,f
  6977     00CB  28C5               	goto	u5185
  6978     00CC  3001               	movlw	1
  6979     00CD  02A5               	subwf	__div_to_l_@exp1,f
  6980     00CE                     l600:
  6981     00CE  0825               	movf	__div_to_l_@exp1,w
  6982     00CF  1D03               	btfss	3,2
  6983     00D0  28D2               	goto	u5191
  6984     00D1  28D3               	goto	u5190
  6985     00D2                     u5191:
  6986     00D2  28C3               	goto	l3284
  6987     00D3                     u5190:
  6988     00D3                     l3286:
  6989     00D3  0823               	movf	__div_to_l_@quot+3,w
  6990     00D4  00F3               	movwf	?__div_to_l_+3
  6991     00D5  0822               	movf	__div_to_l_@quot+2,w
  6992     00D6  00F2               	movwf	?__div_to_l_+2
  6993     00D7  0821               	movf	__div_to_l_@quot+1,w
  6994     00D8  00F1               	movwf	?__div_to_l_+1
  6995     00D9  0820               	movf	__div_to_l_@quot,w
  6996     00DA  00F0               	movwf	?__div_to_l_
  6997     00DB                     l589:
  6998     00DB  0008               	return
  6999     00DC                     __end_of__div_to_l_:
  7000                           
  7001                           	psect	text13
  7002     08A4                     __ptext13:	
  7003 ;; *************** function ___xxtofl *****************
  7004 ;; Defined at:
  7005 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;  sign            1    wreg     unsigned char 
  7008 ;;  val             4    0[COMMON] long 
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;  sign            1    8[COMMON] unsigned char 
  7011 ;;  arg             4   10[COMMON] unsigned long 
  7012 ;;  exp             1    9[COMMON] unsigned char 
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  4    0[COMMON] unsigned char 
  7015 ;; Registers used:
  7016 ;;		wreg, status,2, status,0
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7022 ;;      Params:         4       0       0       0       0
  7023 ;;      Locals:         6       0       0       0       0
  7024 ;;      Temps:          4       0       0       0       0
  7025 ;;      Totals:        14       0       0       0       0
  7026 ;;Total ram usage:       14 bytes
  7027 ;; Hardware stack levels used: 1
  7028 ;; This function calls:
  7029 ;;		Nothing
  7030 ;; This function is called by:
  7031 ;;		_main
  7032 ;;		_sprintf
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036     08A4                     ___xxtofl:	
  7037                           ;psect for function ___xxtofl
  7038                           
  7039                           
  7040                           ;incstack = 0
  7041                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7042                           ;___xxtofl@sign stored from wreg
  7043     08A4  00F8               	movwf	___xxtofl@sign
  7044     08A5                     l3406:
  7045     08A5  0878               	movf	___xxtofl@sign,w
  7046     08A6  1903               	btfsc	3,2
  7047     08A7  28A9               	goto	u5511
  7048     08A8  28AA               	goto	u5510
  7049     08A9                     u5511:
  7050     08A9  28BE               	goto	l3412
  7051     08AA                     u5510:
  7052     08AA                     l3408:
  7053     08AA  1FF3               	btfss	___xxtofl@val+3,7
  7054     08AB  28AD               	goto	u5521
  7055     08AC  28AE               	goto	u5520
  7056     08AD                     u5521:
  7057     08AD  28BE               	goto	l3412
  7058     08AE                     u5520:
  7059     08AE                     l3410:
  7060     08AE  0970               	comf	___xxtofl@val,w
  7061     08AF  00FA               	movwf	___xxtofl@arg
  7062     08B0  0971               	comf	___xxtofl@val+1,w
  7063     08B1  00FB               	movwf	___xxtofl@arg+1
  7064     08B2  0972               	comf	___xxtofl@val+2,w
  7065     08B3  00FC               	movwf	___xxtofl@arg+2
  7066     08B4  0973               	comf	___xxtofl@val+3,w
  7067     08B5  00FD               	movwf	___xxtofl@arg+3
  7068     08B6  0AFA               	incf	___xxtofl@arg,f
  7069     08B7  1903               	skipnz
  7070     08B8  0AFB               	incf	___xxtofl@arg+1,f
  7071     08B9  1903               	skipnz
  7072     08BA  0AFC               	incf	___xxtofl@arg+2,f
  7073     08BB  1903               	skipnz
  7074     08BC  0AFD               	incf	___xxtofl@arg+3,f
  7075     08BD  28C6               	goto	l886
  7076     08BE                     l3412:
  7077     08BE  0873               	movf	___xxtofl@val+3,w
  7078     08BF  00FD               	movwf	___xxtofl@arg+3
  7079     08C0  0872               	movf	___xxtofl@val+2,w
  7080     08C1  00FC               	movwf	___xxtofl@arg+2
  7081     08C2  0871               	movf	___xxtofl@val+1,w
  7082     08C3  00FB               	movwf	___xxtofl@arg+1
  7083     08C4  0870               	movf	___xxtofl@val,w
  7084     08C5  00FA               	movwf	___xxtofl@arg
  7085     08C6                     l886:
  7086     08C6  0873               	movf	___xxtofl@val+3,w
  7087     08C7  0472               	iorwf	___xxtofl@val+2,w
  7088     08C8  0471               	iorwf	___xxtofl@val+1,w
  7089     08C9  0470               	iorwf	___xxtofl@val,w
  7090     08CA  1D03               	skipz
  7091     08CB  28CD               	goto	u5531
  7092     08CC  28CE               	goto	u5530
  7093     08CD                     u5531:
  7094     08CD  28D7               	goto	l3418
  7095     08CE                     u5530:
  7096     08CE                     l3414:
  7097     08CE  3000               	movlw	0
  7098     08CF  00F3               	movwf	?___xxtofl+3
  7099     08D0  3000               	movlw	0
  7100     08D1  00F2               	movwf	?___xxtofl+2
  7101     08D2  3000               	movlw	0
  7102     08D3  00F1               	movwf	?___xxtofl+1
  7103     08D4  3000               	movlw	0
  7104     08D5  00F0               	movwf	?___xxtofl
  7105     08D6  295B               	goto	l888
  7106     08D7                     l3418:
  7107     08D7  3096               	movlw	150
  7108     08D8  00F9               	movwf	___xxtofl@exp
  7109     08D9  28E7               	goto	l3422
  7110     08DA                     l3420:
  7111     08DA  3001               	movlw	1
  7112     08DB  00F4               	movwf	??___xxtofl
  7113     08DC  0874               	movf	??___xxtofl,w
  7114     08DD  07F9               	addwf	___xxtofl@exp,f
  7115     08DE  3001               	movlw	1
  7116     08DF                     u5545:
  7117     08DF  1003               	clrc
  7118     08E0  0CFD               	rrf	___xxtofl@arg+3,f
  7119     08E1  0CFC               	rrf	___xxtofl@arg+2,f
  7120     08E2  0CFB               	rrf	___xxtofl@arg+1,f
  7121     08E3  0CFA               	rrf	___xxtofl@arg,f
  7122     08E4  3EFF               	addlw	-1
  7123     08E5  1D03               	skipz
  7124     08E6  28DF               	goto	u5545
  7125     08E7                     l3422:
  7126     08E7  30FE               	movlw	254
  7127     08E8  057D               	andwf	___xxtofl@arg+3,w
  7128     08E9  1D03               	btfss	3,2
  7129     08EA  28EC               	goto	u5551
  7130     08EB  28ED               	goto	u5550
  7131     08EC                     u5551:
  7132     08EC  28DA               	goto	l3420
  7133     08ED                     u5550:
  7134     08ED  2909               	goto	l892
  7135     08EE                     l3424:
  7136     08EE  3001               	movlw	1
  7137     08EF  00F4               	movwf	??___xxtofl
  7138     08F0  0874               	movf	??___xxtofl,w
  7139     08F1  07F9               	addwf	___xxtofl@exp,f
  7140     08F2                     l3426:
  7141     08F2  3001               	movlw	1
  7142     08F3  07FA               	addwf	___xxtofl@arg,f
  7143     08F4  3000               	movlw	0
  7144     08F5  1803               	skipnc
  7145     08F6  3001               	movlw	1
  7146     08F7  07FB               	addwf	___xxtofl@arg+1,f
  7147     08F8  3000               	movlw	0
  7148     08F9  1803               	skipnc
  7149     08FA  3001               	movlw	1
  7150     08FB  07FC               	addwf	___xxtofl@arg+2,f
  7151     08FC  3000               	movlw	0
  7152     08FD  1803               	skipnc
  7153     08FE  3001               	movlw	1
  7154     08FF  07FD               	addwf	___xxtofl@arg+3,f
  7155     0900                     l3428:
  7156     0900  3001               	movlw	1
  7157     0901                     u5565:
  7158     0901  1003               	clrc
  7159     0902  0CFD               	rrf	___xxtofl@arg+3,f
  7160     0903  0CFC               	rrf	___xxtofl@arg+2,f
  7161     0904  0CFB               	rrf	___xxtofl@arg+1,f
  7162     0905  0CFA               	rrf	___xxtofl@arg,f
  7163     0906  3EFF               	addlw	-1
  7164     0907  1D03               	skipz
  7165     0908  2901               	goto	u5565
  7166     0909                     l892:
  7167     0909  30FF               	movlw	255
  7168     090A  057D               	andwf	___xxtofl@arg+3,w
  7169     090B  1D03               	btfss	3,2
  7170     090C  290E               	goto	u5571
  7171     090D  290F               	goto	u5570
  7172     090E                     u5571:
  7173     090E  28EE               	goto	l3424
  7174     090F                     u5570:
  7175     090F  291B               	goto	l3432
  7176     0910                     l3430:
  7177     0910  3001               	movlw	1
  7178     0911  02F9               	subwf	___xxtofl@exp,f
  7179     0912  3001               	movlw	1
  7180     0913  00F4               	movwf	??___xxtofl
  7181     0914                     u5585:
  7182     0914  1003               	clrc
  7183     0915  0DFA               	rlf	___xxtofl@arg,f
  7184     0916  0DFB               	rlf	___xxtofl@arg+1,f
  7185     0917  0DFC               	rlf	___xxtofl@arg+2,f
  7186     0918  0DFD               	rlf	___xxtofl@arg+3,f
  7187     0919  0BF4               	decfsz	??___xxtofl,f
  7188     091A  2914               	goto	u5585
  7189     091B                     l3432:
  7190     091B  1BFC               	btfsc	___xxtofl@arg+2,7
  7191     091C  291E               	goto	u5591
  7192     091D  291F               	goto	u5590
  7193     091E                     u5591:
  7194     091E  2925               	goto	l899
  7195     091F                     u5590:
  7196     091F                     l3434:
  7197     091F  3002               	movlw	2
  7198     0920  0279               	subwf	___xxtofl@exp,w
  7199     0921  1803               	skipnc
  7200     0922  2924               	goto	u5601
  7201     0923  2925               	goto	u5600
  7202     0924                     u5601:
  7203     0924  2910               	goto	l3430
  7204     0925                     u5600:
  7205     0925                     l899:
  7206     0925  1879               	btfsc	___xxtofl@exp,0
  7207     0926  2928               	goto	u5611
  7208     0927  2929               	goto	u5610
  7209     0928                     u5611:
  7210     0928  2931               	goto	l900
  7211     0929                     u5610:
  7212     0929                     l3436:
  7213     0929  30FF               	movlw	255
  7214     092A  05FA               	andwf	___xxtofl@arg,f
  7215     092B  30FF               	movlw	255
  7216     092C  05FB               	andwf	___xxtofl@arg+1,f
  7217     092D  307F               	movlw	127
  7218     092E  05FC               	andwf	___xxtofl@arg+2,f
  7219     092F  30FF               	movlw	255
  7220     0930  05FD               	andwf	___xxtofl@arg+3,f
  7221     0931                     l900:
  7222     0931  1003               	clrc
  7223     0932  0CF9               	rrf	___xxtofl@exp,f
  7224     0933                     l3438:
  7225     0933  0879               	movf	___xxtofl@exp,w
  7226     0934  00F4               	movwf	??___xxtofl
  7227     0935  01F5               	clrf	??___xxtofl+1
  7228     0936  01F6               	clrf	??___xxtofl+2
  7229     0937  01F7               	clrf	??___xxtofl+3
  7230     0938  3018               	movlw	24
  7231     0939                     u5625:
  7232     0939  1003               	clrc
  7233     093A  0DF4               	rlf	??___xxtofl,f
  7234     093B  0DF5               	rlf	??___xxtofl+1,f
  7235     093C  0DF6               	rlf	??___xxtofl+2,f
  7236     093D  0DF7               	rlf	??___xxtofl+3,f
  7237     093E                     u5620:
  7238     093E  3EFF               	addlw	-1
  7239     093F  1D03               	skipz
  7240     0940  2939               	goto	u5625
  7241     0941  0874               	movf	??___xxtofl,w
  7242     0942  04FA               	iorwf	___xxtofl@arg,f
  7243     0943  0875               	movf	??___xxtofl+1,w
  7244     0944  04FB               	iorwf	___xxtofl@arg+1,f
  7245     0945  0876               	movf	??___xxtofl+2,w
  7246     0946  04FC               	iorwf	___xxtofl@arg+2,f
  7247     0947  0877               	movf	??___xxtofl+3,w
  7248     0948  04FD               	iorwf	___xxtofl@arg+3,f
  7249     0949                     l3440:
  7250     0949  0878               	movf	___xxtofl@sign,w
  7251     094A  1903               	btfsc	3,2
  7252     094B  294D               	goto	u5631
  7253     094C  294E               	goto	u5630
  7254     094D                     u5631:
  7255     094D  2953               	goto	l3446
  7256     094E                     u5630:
  7257     094E                     l3442:
  7258     094E  1FF3               	btfss	___xxtofl@val+3,7
  7259     094F  2951               	goto	u5641
  7260     0950  2952               	goto	u5640
  7261     0951                     u5641:
  7262     0951  2953               	goto	l3446
  7263     0952                     u5640:
  7264     0952                     l3444:
  7265     0952  17FD               	bsf	___xxtofl@arg+3,7
  7266     0953                     l3446:
  7267     0953  087D               	movf	___xxtofl@arg+3,w
  7268     0954  00F3               	movwf	?___xxtofl+3
  7269     0955  087C               	movf	___xxtofl@arg+2,w
  7270     0956  00F2               	movwf	?___xxtofl+2
  7271     0957  087B               	movf	___xxtofl@arg+1,w
  7272     0958  00F1               	movwf	?___xxtofl+1
  7273     0959  087A               	movf	___xxtofl@arg,w
  7274     095A  00F0               	movwf	?___xxtofl
  7275     095B                     l888:
  7276     095B  0008               	return
  7277     095C                     __end_of___xxtofl:
  7278                           
  7279                           	psect	text14
  7280     1B80                     __ptext14:	
  7281 ;; *************** function ___wmul *****************
  7282 ;; Defined at:
  7283 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;  multiplier      2    0[COMMON] unsigned int 
  7286 ;;  multiplicand    2    2[COMMON] unsigned int 
  7287 ;; Auto vars:     Size  Location     Type
  7288 ;;  product         2    4[COMMON] unsigned int 
  7289 ;; Return value:  Size  Location     Type
  7290 ;;                  2    0[COMMON] unsigned int 
  7291 ;; Registers used:
  7292 ;;		wreg, status,2, status,0
  7293 ;; Tracked objects:
  7294 ;;		On entry : 0/0
  7295 ;;		On exit  : 0/0
  7296 ;;		Unchanged: 0/0
  7297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7298 ;;      Params:         4       0       0       0       0
  7299 ;;      Locals:         2       0       0       0       0
  7300 ;;      Temps:          0       0       0       0       0
  7301 ;;      Totals:         6       0       0       0       0
  7302 ;;Total ram usage:        6 bytes
  7303 ;; Hardware stack levels used: 1
  7304 ;; This function calls:
  7305 ;;		Nothing
  7306 ;; This function is called by:
  7307 ;;		_sprintf
  7308 ;;		_convint
  7309 ;; This function uses a non-reentrant model
  7310 ;;
  7311                           
  7312     1B80                     ___wmul:	
  7313                           ;psect for function ___wmul
  7314                           
  7315     1B80                     l3290:	
  7316                           ;incstack = 0
  7317                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7318                           
  7319     1B80  01F4               	clrf	___wmul@product
  7320     1B81  01F5               	clrf	___wmul@product+1
  7321     1B82                     l3292:
  7322     1B82  1C70               	btfss	___wmul@multiplier,0
  7323     1B83  2B85               	goto	u5201
  7324     1B84  2B86               	goto	u5200
  7325     1B85                     u5201:
  7326     1B85  2B8C               	goto	l419
  7327     1B86                     u5200:
  7328     1B86                     l3294:
  7329     1B86  0872               	movf	___wmul@multiplicand,w
  7330     1B87  07F4               	addwf	___wmul@product,f
  7331     1B88  1803               	skipnc
  7332     1B89  0AF5               	incf	___wmul@product+1,f
  7333     1B8A  0873               	movf	___wmul@multiplicand+1,w
  7334     1B8B  07F5               	addwf	___wmul@product+1,f
  7335     1B8C                     l419:
  7336     1B8C  3001               	movlw	1
  7337     1B8D                     u5215:
  7338     1B8D  1003               	clrc
  7339     1B8E  0DF2               	rlf	___wmul@multiplicand,f
  7340     1B8F  0DF3               	rlf	___wmul@multiplicand+1,f
  7341     1B90  3EFF               	addlw	-1
  7342     1B91  1D03               	skipz
  7343     1B92  2B8D               	goto	u5215
  7344     1B93                     l3296:
  7345     1B93  3001               	movlw	1
  7346     1B94                     u5225:
  7347     1B94  1003               	clrc
  7348     1B95  0CF1               	rrf	___wmul@multiplier+1,f
  7349     1B96  0CF0               	rrf	___wmul@multiplier,f
  7350     1B97  3EFF               	addlw	-1
  7351     1B98  1D03               	skipz
  7352     1B99  2B94               	goto	u5225
  7353     1B9A                     l3298:
  7354     1B9A  0870               	movf	___wmul@multiplier,w
  7355     1B9B  0471               	iorwf	___wmul@multiplier+1,w
  7356     1B9C  1D03               	btfss	3,2
  7357     1B9D  2B9F               	goto	u5231
  7358     1B9E  2BA0               	goto	u5230
  7359     1B9F                     u5231:
  7360     1B9F  2B82               	goto	l3292
  7361     1BA0                     u5230:
  7362     1BA0                     l3300:
  7363     1BA0  0875               	movf	___wmul@product+1,w
  7364     1BA1  00F1               	movwf	?___wmul+1
  7365     1BA2  0874               	movf	___wmul@product,w
  7366     1BA3  00F0               	movwf	?___wmul
  7367     1BA4                     l421:
  7368     1BA4  0008               	return
  7369     1BA5                     __end_of___wmul:
  7370                           
  7371                           	psect	text15
  7372     1DB9                     __ptext15:	
  7373 ;; *************** function ___llmod *****************
  7374 ;; Defined at:
  7375 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  divisor         4    0[COMMON] unsigned long 
  7378 ;;  dividend        4    4[COMMON] unsigned long 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;  counter         1    9[COMMON] unsigned char 
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  4    0[COMMON] unsigned long 
  7383 ;; Registers used:
  7384 ;;		wreg, status,2, status,0
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7390 ;;      Params:         8       0       0       0       0
  7391 ;;      Locals:         1       0       0       0       0
  7392 ;;      Temps:          1       0       0       0       0
  7393 ;;      Totals:        10       0       0       0       0
  7394 ;;Total ram usage:       10 bytes
  7395 ;; Hardware stack levels used: 1
  7396 ;; This function calls:
  7397 ;;		Nothing
  7398 ;; This function is called by:
  7399 ;;		_sprintf
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403     1DB9                     ___llmod:	
  7404                           ;psect for function ___llmod
  7405                           
  7406     1DB9                     l3380:	
  7407                           ;incstack = 0
  7408                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7409                           
  7410     1DB9  0873               	movf	___llmod@divisor+3,w
  7411     1DBA  0472               	iorwf	___llmod@divisor+2,w
  7412     1DBB  0471               	iorwf	___llmod@divisor+1,w
  7413     1DBC  0470               	iorwf	___llmod@divisor,w
  7414     1DBD  1903               	skipnz
  7415     1DBE  2DC0               	goto	u5451
  7416     1DBF  2DC1               	goto	u5450
  7417     1DC0                     u5451:
  7418     1DC0  2E04               	goto	l3396
  7419     1DC1                     u5450:
  7420     1DC1                     l3382:
  7421     1DC1  01F9               	clrf	___llmod@counter
  7422     1DC2  0AF9               	incf	___llmod@counter,f
  7423     1DC3  2DD1               	goto	l3386
  7424     1DC4                     l3384:
  7425     1DC4  3001               	movlw	1
  7426     1DC5  00F8               	movwf	??___llmod
  7427     1DC6                     u5465:
  7428     1DC6  1003               	clrc
  7429     1DC7  0DF0               	rlf	___llmod@divisor,f
  7430     1DC8  0DF1               	rlf	___llmod@divisor+1,f
  7431     1DC9  0DF2               	rlf	___llmod@divisor+2,f
  7432     1DCA  0DF3               	rlf	___llmod@divisor+3,f
  7433     1DCB  0BF8               	decfsz	??___llmod,f
  7434     1DCC  2DC6               	goto	u5465
  7435     1DCD  3001               	movlw	1
  7436     1DCE  00F8               	movwf	??___llmod
  7437     1DCF  0878               	movf	??___llmod,w
  7438     1DD0  07F9               	addwf	___llmod@counter,f
  7439     1DD1                     l3386:
  7440     1DD1  1FF3               	btfss	___llmod@divisor+3,7
  7441     1DD2  2DD4               	goto	u5471
  7442     1DD3  2DD5               	goto	u5470
  7443     1DD4                     u5471:
  7444     1DD4  2DC4               	goto	l3384
  7445     1DD5                     u5470:
  7446     1DD5                     l3388:
  7447     1DD5  0873               	movf	___llmod@divisor+3,w
  7448     1DD6  0277               	subwf	___llmod@dividend+3,w
  7449     1DD7  1D03               	skipz
  7450     1DD8  2DE3               	goto	u5485
  7451     1DD9  0872               	movf	___llmod@divisor+2,w
  7452     1DDA  0276               	subwf	___llmod@dividend+2,w
  7453     1DDB  1D03               	skipz
  7454     1DDC  2DE3               	goto	u5485
  7455     1DDD  0871               	movf	___llmod@divisor+1,w
  7456     1DDE  0275               	subwf	___llmod@dividend+1,w
  7457     1DDF  1D03               	skipz
  7458     1DE0  2DE3               	goto	u5485
  7459     1DE1  0870               	movf	___llmod@divisor,w
  7460     1DE2  0274               	subwf	___llmod@dividend,w
  7461     1DE3                     u5485:
  7462     1DE3  1C03               	skipc
  7463     1DE4  2DE6               	goto	u5481
  7464     1DE5  2DE7               	goto	u5480
  7465     1DE6                     u5481:
  7466     1DE6  2DF5               	goto	l3392
  7467     1DE7                     u5480:
  7468     1DE7                     l3390:
  7469     1DE7  0870               	movf	___llmod@divisor,w
  7470     1DE8  02F4               	subwf	___llmod@dividend,f
  7471     1DE9  0871               	movf	___llmod@divisor+1,w
  7472     1DEA  1C03               	skipc
  7473     1DEB  0F71               	incfsz	___llmod@divisor+1,w
  7474     1DEC  02F5               	subwf	___llmod@dividend+1,f
  7475     1DED  0872               	movf	___llmod@divisor+2,w
  7476     1DEE  1C03               	skipc
  7477     1DEF  0F72               	incfsz	___llmod@divisor+2,w
  7478     1DF0  02F6               	subwf	___llmod@dividend+2,f
  7479     1DF1  0873               	movf	___llmod@divisor+3,w
  7480     1DF2  1C03               	skipc
  7481     1DF3  0F73               	incfsz	___llmod@divisor+3,w
  7482     1DF4  02F7               	subwf	___llmod@dividend+3,f
  7483     1DF5                     l3392:
  7484     1DF5  3001               	movlw	1
  7485     1DF6                     u5495:
  7486     1DF6  1003               	clrc
  7487     1DF7  0CF3               	rrf	___llmod@divisor+3,f
  7488     1DF8  0CF2               	rrf	___llmod@divisor+2,f
  7489     1DF9  0CF1               	rrf	___llmod@divisor+1,f
  7490     1DFA  0CF0               	rrf	___llmod@divisor,f
  7491     1DFB  3EFF               	addlw	-1
  7492     1DFC  1D03               	skipz
  7493     1DFD  2DF6               	goto	u5495
  7494     1DFE                     l3394:
  7495     1DFE  3001               	movlw	1
  7496     1DFF  02F9               	subwf	___llmod@counter,f
  7497     1E00  1D03               	btfss	3,2
  7498     1E01  2E03               	goto	u5501
  7499     1E02  2E04               	goto	u5500
  7500     1E03                     u5501:
  7501     1E03  2DD5               	goto	l3388
  7502     1E04                     u5500:
  7503     1E04                     l3396:
  7504     1E04  0877               	movf	___llmod@dividend+3,w
  7505     1E05  00F3               	movwf	?___llmod+3
  7506     1E06  0876               	movf	___llmod@dividend+2,w
  7507     1E07  00F2               	movwf	?___llmod+2
  7508     1E08  0875               	movf	___llmod@dividend+1,w
  7509     1E09  00F1               	movwf	?___llmod+1
  7510     1E0A  0874               	movf	___llmod@dividend,w
  7511     1E0B  00F0               	movwf	?___llmod
  7512     1E0C                     l675:
  7513     1E0C  0008               	return
  7514     1E0D                     __end_of___llmod:
  7515                           
  7516                           	psect	text16
  7517     1F88                     __ptext16:	
  7518 ;; *************** function ___fltol *****************
  7519 ;; Defined at:
  7520 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  7521 ;; Parameters:    Size  Location     Type
  7522 ;;  f1              4   49[BANK0 ] unsigned long 
  7523 ;; Auto vars:     Size  Location     Type
  7524 ;;  exp1            1   58[BANK0 ] unsigned char 
  7525 ;;  sign1           1   57[BANK0 ] unsigned char 
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  4   49[BANK0 ] long 
  7528 ;; Registers used:
  7529 ;;		wreg, status,2, status,0
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/0
  7532 ;;		On exit  : 0/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7535 ;;      Params:         0       4       0       0       0
  7536 ;;      Locals:         0       2       0       0       0
  7537 ;;      Temps:          0       4       0       0       0
  7538 ;;      Totals:         0      10       0       0       0
  7539 ;;Total ram usage:       10 bytes
  7540 ;; Hardware stack levels used: 1
  7541 ;; This function calls:
  7542 ;;		Nothing
  7543 ;; This function is called by:
  7544 ;;		_sprintf
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548     1F88                     ___fltol:	
  7549                           ;psect for function ___fltol
  7550                           
  7551     1F88                     l3344:	
  7552                           ;incstack = 0
  7553                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7554                           
  7555     1F88  1003               	clrc
  7556     1F89  1283               	bcf	3,5	;RP0=0, select bank0
  7557     1F8A  1303               	bcf	3,6	;RP1=0, select bank0
  7558     1F8B  0D53               	rlf	___fltol@f1+2,w
  7559     1F8C  0D54               	rlf	___fltol@f1+3,w
  7560     1F8D  00DA               	movwf	___fltol@exp1
  7561     1F8E  085A               	movf	___fltol@exp1,w
  7562     1F8F  1D03               	btfss	3,2
  7563     1F90  2F92               	goto	u5351
  7564     1F91  2F93               	goto	u5350
  7565     1F92                     u5351:
  7566     1F92  2F9C               	goto	l3350
  7567     1F93                     u5350:
  7568     1F93                     l3346:
  7569     1F93  3000               	movlw	0
  7570     1F94  00D4               	movwf	?___fltol+3
  7571     1F95  3000               	movlw	0
  7572     1F96  00D3               	movwf	?___fltol+2
  7573     1F97  3000               	movlw	0
  7574     1F98  00D2               	movwf	?___fltol+1
  7575     1F99  3000               	movlw	0
  7576     1F9A  00D1               	movwf	?___fltol
  7577     1F9B  2FFF               	goto	l622
  7578     1F9C                     l3350:
  7579     1F9C  0851               	movf	___fltol@f1,w
  7580     1F9D  00D5               	movwf	??___fltol
  7581     1F9E  0852               	movf	___fltol@f1+1,w
  7582     1F9F  00D6               	movwf	??___fltol+1
  7583     1FA0  0853               	movf	___fltol@f1+2,w
  7584     1FA1  00D7               	movwf	??___fltol+2
  7585     1FA2  0854               	movf	___fltol@f1+3,w
  7586     1FA3  00D8               	movwf	??___fltol+3
  7587     1FA4  301F               	movlw	31
  7588     1FA5                     u5365:
  7589     1FA5  1003               	clrc
  7590     1FA6  0CD8               	rrf	??___fltol+3,f
  7591     1FA7  0CD7               	rrf	??___fltol+2,f
  7592     1FA8  0CD6               	rrf	??___fltol+1,f
  7593     1FA9  0CD5               	rrf	??___fltol,f
  7594     1FAA                     u5360:
  7595     1FAA  3EFF               	addlw	-1
  7596     1FAB  1D03               	skipz
  7597     1FAC  2FA5               	goto	u5365
  7598     1FAD  0855               	movf	??___fltol,w
  7599     1FAE  00D9               	movwf	___fltol@sign1
  7600     1FAF                     l3352:
  7601     1FAF  17D3               	bsf	___fltol@f1+2,7
  7602     1FB0                     l3354:
  7603     1FB0  30FF               	movlw	255
  7604     1FB1  05D1               	andwf	___fltol@f1,f
  7605     1FB2  30FF               	movlw	255
  7606     1FB3  05D2               	andwf	___fltol@f1+1,f
  7607     1FB4  30FF               	movlw	255
  7608     1FB5  05D3               	andwf	___fltol@f1+2,f
  7609     1FB6  3000               	movlw	0
  7610     1FB7  05D4               	andwf	___fltol@f1+3,f
  7611     1FB8                     l3356:
  7612     1FB8  3096               	movlw	150
  7613     1FB9  02DA               	subwf	___fltol@exp1,f
  7614     1FBA                     l3358:
  7615     1FBA  1FDA               	btfss	___fltol@exp1,7
  7616     1FBB  2FBD               	goto	u5371
  7617     1FBC  2FBE               	goto	u5370
  7618     1FBD                     u5371:
  7619     1FBD  2FD8               	goto	l3368
  7620     1FBE                     u5370:
  7621     1FBE                     l3360:
  7622     1FBE  085A               	movf	___fltol@exp1,w
  7623     1FBF  3A80               	xorlw	128
  7624     1FC0  3E97               	addlw	151
  7625     1FC1  1803               	skipnc
  7626     1FC2  2FC4               	goto	u5381
  7627     1FC3  2FC5               	goto	u5380
  7628     1FC4                     u5381:
  7629     1FC4  2FC6               	goto	l3366
  7630     1FC5                     u5380:
  7631     1FC5  2F93               	goto	l3346
  7632     1FC6                     l3366:
  7633     1FC6  3001               	movlw	1
  7634     1FC7                     u5395:
  7635     1FC7  1003               	clrc
  7636     1FC8  0CD4               	rrf	___fltol@f1+3,f
  7637     1FC9  0CD3               	rrf	___fltol@f1+2,f
  7638     1FCA  0CD2               	rrf	___fltol@f1+1,f
  7639     1FCB  0CD1               	rrf	___fltol@f1,f
  7640     1FCC  3EFF               	addlw	-1
  7641     1FCD  1D03               	skipz
  7642     1FCE  2FC7               	goto	u5395
  7643     1FCF  3001               	movlw	1
  7644     1FD0  00D5               	movwf	??___fltol
  7645     1FD1  0855               	movf	??___fltol,w
  7646     1FD2  07DA               	addwf	___fltol@exp1,f
  7647     1FD3  1D03               	btfss	3,2
  7648     1FD4  2FD6               	goto	u5401
  7649     1FD5  2FD7               	goto	u5400
  7650     1FD6                     u5401:
  7651     1FD6  2FC6               	goto	l3366
  7652     1FD7                     u5400:
  7653     1FD7  2FEF               	goto	l3376
  7654     1FD8                     l3368:
  7655     1FD8  3020               	movlw	32
  7656     1FD9  025A               	subwf	___fltol@exp1,w
  7657     1FDA  1C03               	skipc
  7658     1FDB  2FDD               	goto	u5411
  7659     1FDC  2FDE               	goto	u5410
  7660     1FDD                     u5411:
  7661     1FDD  2FEA               	goto	l629
  7662     1FDE                     u5410:
  7663     1FDE  2F93               	goto	l3346
  7664     1FDF                     l3374:
  7665     1FDF  3001               	movlw	1
  7666     1FE0  00D5               	movwf	??___fltol
  7667     1FE1                     u5425:
  7668     1FE1  1003               	clrc
  7669     1FE2  0DD1               	rlf	___fltol@f1,f
  7670     1FE3  0DD2               	rlf	___fltol@f1+1,f
  7671     1FE4  0DD3               	rlf	___fltol@f1+2,f
  7672     1FE5  0DD4               	rlf	___fltol@f1+3,f
  7673     1FE6  0BD5               	decfsz	??___fltol,f
  7674     1FE7  2FE1               	goto	u5425
  7675     1FE8  3001               	movlw	1
  7676     1FE9  02DA               	subwf	___fltol@exp1,f
  7677     1FEA                     l629:
  7678     1FEA  085A               	movf	___fltol@exp1,w
  7679     1FEB  1D03               	btfss	3,2
  7680     1FEC  2FEE               	goto	u5431
  7681     1FED  2FEF               	goto	u5430
  7682     1FEE                     u5431:
  7683     1FEE  2FDF               	goto	l3374
  7684     1FEF                     u5430:
  7685     1FEF                     l3376:
  7686     1FEF  0859               	movf	___fltol@sign1,w
  7687     1FF0  1903               	btfsc	3,2
  7688     1FF1  2FF3               	goto	u5441
  7689     1FF2  2FF4               	goto	u5440
  7690     1FF3                     u5441:
  7691     1FF3  2FFF               	goto	l632
  7692     1FF4                     u5440:
  7693     1FF4                     l3378:
  7694     1FF4  09D1               	comf	___fltol@f1,f
  7695     1FF5  09D2               	comf	___fltol@f1+1,f
  7696     1FF6  09D3               	comf	___fltol@f1+2,f
  7697     1FF7  09D4               	comf	___fltol@f1+3,f
  7698     1FF8  0AD1               	incf	___fltol@f1,f
  7699     1FF9  1903               	skipnz
  7700     1FFA  0AD2               	incf	___fltol@f1+1,f
  7701     1FFB  1903               	skipnz
  7702     1FFC  0AD3               	incf	___fltol@f1+2,f
  7703     1FFD  1903               	skipnz
  7704     1FFE  0AD4               	incf	___fltol@f1+3,f
  7705     1FFF                     l632:
  7706     1FFF                     l622:
  7707     1FFF  0008               	return
  7708     2000                     __end_of___fltol:
  7709                           
  7710                           	psect	text17
  7711     1B5C                     __ptext17:	
  7712 ;; *************** function ___flsub *****************
  7713 ;; Defined at:
  7714 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;  a               4   70[BANK0 ] long 
  7717 ;;  b               4   74[BANK0 ] long 
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;		None
  7720 ;; Return value:  Size  Location     Type
  7721 ;;                  4   70[BANK0 ] long 
  7722 ;; Registers used:
  7723 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7724 ;; Tracked objects:
  7725 ;;		On entry : 0/0
  7726 ;;		On exit  : 0/0
  7727 ;;		Unchanged: 0/0
  7728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7729 ;;      Params:         0       8       0       0       0
  7730 ;;      Locals:         0       0       0       0       0
  7731 ;;      Temps:          0       0       0       0       0
  7732 ;;      Totals:         0       8       0       0       0
  7733 ;;Total ram usage:        8 bytes
  7734 ;; Hardware stack levels used: 1
  7735 ;; Hardware stack levels required when called: 1
  7736 ;; This function calls:
  7737 ;;		___fladd
  7738 ;; This function is called by:
  7739 ;;		_sprintf
  7740 ;; This function uses a non-reentrant model
  7741 ;;
  7742                           
  7743     1B5C                     ___flsub:	
  7744                           ;psect for function ___flsub
  7745                           
  7746     1B5C                     l3400:	
  7747                           ;incstack = 0
  7748                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7749                           
  7750     1B5C  3080               	movlw	128
  7751     1B5D  1283               	bcf	3,5	;RP0=0, select bank0
  7752     1B5E  1303               	bcf	3,6	;RP1=0, select bank0
  7753     1B5F  06E9               	xorwf	___flsub@a+3,f
  7754     1B60                     l3402:
  7755     1B60  086D               	movf	___flsub@b+3,w
  7756     1B61  00D5               	movwf	___fladd@b+3
  7757     1B62  086C               	movf	___flsub@b+2,w
  7758     1B63  00D4               	movwf	___fladd@b+2
  7759     1B64  086B               	movf	___flsub@b+1,w
  7760     1B65  00D3               	movwf	___fladd@b+1
  7761     1B66  086A               	movf	___flsub@b,w
  7762     1B67  00D2               	movwf	___fladd@b
  7763     1B68  0869               	movf	___flsub@a+3,w
  7764     1B69  00D9               	movwf	___fladd@a+3
  7765     1B6A  0868               	movf	___flsub@a+2,w
  7766     1B6B  00D8               	movwf	___fladd@a+2
  7767     1B6C  0867               	movf	___flsub@a+1,w
  7768     1B6D  00D7               	movwf	___fladd@a+1
  7769     1B6E  0866               	movf	___flsub@a,w
  7770     1B6F  00D6               	movwf	___fladd@a
  7771     1B70  160A  118A  25A8  160A  158A  	fcall	___fladd
  7772     1B75  1283               	bcf	3,5	;RP0=0, select bank0
  7773     1B76  1303               	bcf	3,6	;RP1=0, select bank0
  7774     1B77  0855               	movf	?___fladd+3,w
  7775     1B78  00E9               	movwf	?___flsub+3
  7776     1B79  0854               	movf	?___fladd+2,w
  7777     1B7A  00E8               	movwf	?___flsub+2
  7778     1B7B  0853               	movf	?___fladd+1,w
  7779     1B7C  00E7               	movwf	?___flsub+1
  7780     1B7D  0852               	movf	?___fladd,w
  7781     1B7E  00E6               	movwf	?___flsub
  7782     1B7F                     l792:
  7783     1B7F  0008               	return
  7784     1B80                     __end_of___flsub:
  7785                           
  7786                           	psect	text18
  7787     15A8                     __ptext18:	
  7788 ;; *************** function ___fladd *****************
  7789 ;; Defined at:
  7790 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  b               4   50[BANK0 ] long 
  7793 ;;  a               4   54[BANK0 ] long 
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;  grs             1   69[BANK0 ] unsigned char 
  7796 ;;  bexp            1   68[BANK0 ] unsigned char 
  7797 ;;  aexp            1   67[BANK0 ] unsigned char 
  7798 ;;  signs           1   66[BANK0 ] unsigned char 
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  4   50[BANK0 ] unsigned char 
  7801 ;; Registers used:
  7802 ;;		wreg, status,2, status,0, btemp+1
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7808 ;;      Params:         0       8       0       0       0
  7809 ;;      Locals:         0       4       0       0       0
  7810 ;;      Temps:          0       8       0       0       0
  7811 ;;      Totals:         0      20       0       0       0
  7812 ;;Total ram usage:       20 bytes
  7813 ;; Hardware stack levels used: 1
  7814 ;; This function calls:
  7815 ;;		Nothing
  7816 ;; This function is called by:
  7817 ;;		_sprintf
  7818 ;;		___flsub
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822     15A8                     ___fladd:	
  7823                           ;psect for function ___fladd
  7824                           
  7825     15A8                     l2736:	
  7826                           ;incstack = 0
  7827                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7828                           
  7829     15A8  1283               	bcf	3,5	;RP0=0, select bank0
  7830     15A9  1303               	bcf	3,6	;RP1=0, select bank0
  7831     15AA  0855               	movf	___fladd@b+3,w
  7832     15AB  3980               	andlw	128
  7833     15AC  00E2               	movwf	___fladd@signs
  7834     15AD                     l2738:
  7835     15AD  0855               	movf	___fladd@b+3,w
  7836     15AE  00DA               	movwf	??___fladd
  7837     15AF  075A               	addwf	??___fladd,w
  7838     15B0  00E4               	movwf	___fladd@bexp
  7839     15B1                     l2740:
  7840     15B1  1FD4               	btfss	___fladd@b+2,7
  7841     15B2  2DB4               	goto	u3801
  7842     15B3  2DB5               	goto	u3800
  7843     15B4                     u3801:
  7844     15B4  2DB6               	goto	l2744
  7845     15B5                     u3800:
  7846     15B5                     l2742:
  7847     15B5  1464               	bsf	___fladd@bexp,0
  7848     15B6                     l2744:
  7849     15B6  0864               	movf	___fladd@bexp,w
  7850     15B7  1903               	btfsc	3,2
  7851     15B8  2DBA               	goto	u3811
  7852     15B9  2DBB               	goto	u3810
  7853     15BA                     u3811:
  7854     15BA  2DCB               	goto	l2754
  7855     15BB                     u3810:
  7856     15BB                     l2746:
  7857     15BB  0A64               	incf	___fladd@bexp,w
  7858     15BC  1D03               	btfss	3,2
  7859     15BD  2DBF               	goto	u3821
  7860     15BE  2DC0               	goto	u3820
  7861     15BF                     u3821:
  7862     15BF  2DC8               	goto	l2750
  7863     15C0                     u3820:
  7864     15C0                     l2748:
  7865     15C0  3000               	movlw	0
  7866     15C1  00D5               	movwf	___fladd@b+3
  7867     15C2  3000               	movlw	0
  7868     15C3  00D4               	movwf	___fladd@b+2
  7869     15C4  3000               	movlw	0
  7870     15C5  00D3               	movwf	___fladd@b+1
  7871     15C6  3000               	movlw	0
  7872     15C7  00D2               	movwf	___fladd@b
  7873     15C8                     l2750:
  7874     15C8  17D4               	bsf	___fladd@b+2,7
  7875     15C9                     l2752:
  7876     15C9  01D5               	clrf	___fladd@b+3
  7877     15CA  2DD3               	goto	l2756
  7878     15CB                     l2754:
  7879     15CB  3000               	movlw	0
  7880     15CC  00D5               	movwf	___fladd@b+3
  7881     15CD  3000               	movlw	0
  7882     15CE  00D4               	movwf	___fladd@b+2
  7883     15CF  3000               	movlw	0
  7884     15D0  00D3               	movwf	___fladd@b+1
  7885     15D1  3000               	movlw	0
  7886     15D2  00D2               	movwf	___fladd@b
  7887     15D3                     l2756:
  7888     15D3  0859               	movf	___fladd@a+3,w
  7889     15D4  3980               	andlw	128
  7890     15D5  00E3               	movwf	___fladd@aexp
  7891     15D6                     l2758:
  7892     15D6  0863               	movf	___fladd@aexp,w
  7893     15D7  0662               	xorwf	___fladd@signs,w
  7894     15D8  1903               	skipnz
  7895     15D9  2DDB               	goto	u3831
  7896     15DA  2DDC               	goto	u3830
  7897     15DB                     u3831:
  7898     15DB  2DDD               	goto	l2762
  7899     15DC                     u3830:
  7900     15DC                     l2760:
  7901     15DC  1762               	bsf	___fladd@signs,6
  7902     15DD                     l2762:
  7903     15DD  0859               	movf	___fladd@a+3,w
  7904     15DE  00DA               	movwf	??___fladd
  7905     15DF  075A               	addwf	??___fladd,w
  7906     15E0  00E3               	movwf	___fladd@aexp
  7907     15E1                     l2764:
  7908     15E1  1FD8               	btfss	___fladd@a+2,7
  7909     15E2  2DE4               	goto	u3841
  7910     15E3  2DE5               	goto	u3840
  7911     15E4                     u3841:
  7912     15E4  2DE6               	goto	l2768
  7913     15E5                     u3840:
  7914     15E5                     l2766:
  7915     15E5  1463               	bsf	___fladd@aexp,0
  7916     15E6                     l2768:
  7917     15E6  0863               	movf	___fladd@aexp,w
  7918     15E7  1903               	btfsc	3,2
  7919     15E8  2DEA               	goto	u3851
  7920     15E9  2DEB               	goto	u3850
  7921     15EA                     u3851:
  7922     15EA  2DFB               	goto	l2778
  7923     15EB                     u3850:
  7924     15EB                     l2770:
  7925     15EB  0A63               	incf	___fladd@aexp,w
  7926     15EC  1D03               	btfss	3,2
  7927     15ED  2DEF               	goto	u3861
  7928     15EE  2DF0               	goto	u3860
  7929     15EF                     u3861:
  7930     15EF  2DF8               	goto	l2774
  7931     15F0                     u3860:
  7932     15F0                     l2772:
  7933     15F0  3000               	movlw	0
  7934     15F1  00D9               	movwf	___fladd@a+3
  7935     15F2  3000               	movlw	0
  7936     15F3  00D8               	movwf	___fladd@a+2
  7937     15F4  3000               	movlw	0
  7938     15F5  00D7               	movwf	___fladd@a+1
  7939     15F6  3000               	movlw	0
  7940     15F7  00D6               	movwf	___fladd@a
  7941     15F8                     l2774:
  7942     15F8  17D8               	bsf	___fladd@a+2,7
  7943     15F9                     l2776:
  7944     15F9  01D9               	clrf	___fladd@a+3
  7945     15FA  2E03               	goto	l746
  7946     15FB                     l2778:
  7947     15FB  3000               	movlw	0
  7948     15FC  00D9               	movwf	___fladd@a+3
  7949     15FD  3000               	movlw	0
  7950     15FE  00D8               	movwf	___fladd@a+2
  7951     15FF  3000               	movlw	0
  7952     1600  00D7               	movwf	___fladd@a+1
  7953     1601  3000               	movlw	0
  7954     1602  00D6               	movwf	___fladd@a
  7955     1603                     l746:
  7956     1603  0864               	movf	___fladd@bexp,w
  7957     1604  0263               	subwf	___fladd@aexp,w
  7958     1605  1803               	skipnc
  7959     1606  2E08               	goto	u3871
  7960     1607  2E09               	goto	u3870
  7961     1608                     u3871:
  7962     1608  2E2F               	goto	l2814
  7963     1609                     u3870:
  7964     1609                     l2780:
  7965     1609  1F62               	btfss	___fladd@signs,6
  7966     160A  2E0C               	goto	u3881
  7967     160B  2E0D               	goto	u3880
  7968     160C                     u3881:
  7969     160C  2E11               	goto	l2784
  7970     160D                     u3880:
  7971     160D                     l2782:
  7972     160D  3080               	movlw	128
  7973     160E  00DA               	movwf	??___fladd
  7974     160F  085A               	movf	??___fladd,w
  7975     1610  06E2               	xorwf	___fladd@signs,f
  7976     1611                     l2784:
  7977     1611  0864               	movf	___fladd@bexp,w
  7978     1612  00E5               	movwf	___fladd@grs
  7979     1613                     l2786:
  7980     1613  0863               	movf	___fladd@aexp,w
  7981     1614  00E4               	movwf	___fladd@bexp
  7982     1615                     l2788:
  7983     1615  0865               	movf	___fladd@grs,w
  7984     1616  00E3               	movwf	___fladd@aexp
  7985     1617                     l2790:
  7986     1617  0852               	movf	___fladd@b,w
  7987     1618  00E5               	movwf	___fladd@grs
  7988     1619                     l2792:
  7989     1619  0856               	movf	___fladd@a,w
  7990     161A  00D2               	movwf	___fladd@b
  7991     161B                     l2794:
  7992     161B  0865               	movf	___fladd@grs,w
  7993     161C  00D6               	movwf	___fladd@a
  7994     161D                     l2796:
  7995     161D  0853               	movf	___fladd@b+1,w
  7996     161E  00E5               	movwf	___fladd@grs
  7997     161F                     l2798:
  7998     161F  0857               	movf	___fladd@a+1,w
  7999     1620  00D3               	movwf	___fladd@b+1
  8000     1621                     l2800:
  8001     1621  0865               	movf	___fladd@grs,w
  8002     1622  00D7               	movwf	___fladd@a+1
  8003     1623                     l2802:
  8004     1623  0854               	movf	___fladd@b+2,w
  8005     1624  00E5               	movwf	___fladd@grs
  8006     1625                     l2804:
  8007     1625  0858               	movf	___fladd@a+2,w
  8008     1626  00D4               	movwf	___fladd@b+2
  8009     1627                     l2806:
  8010     1627  0865               	movf	___fladd@grs,w
  8011     1628  00D8               	movwf	___fladd@a+2
  8012     1629                     l2808:
  8013     1629  0855               	movf	___fladd@b+3,w
  8014     162A  00E5               	movwf	___fladd@grs
  8015     162B                     l2810:
  8016     162B  0859               	movf	___fladd@a+3,w
  8017     162C  00D5               	movwf	___fladd@b+3
  8018     162D                     l2812:
  8019     162D  0865               	movf	___fladd@grs,w
  8020     162E  00D9               	movwf	___fladd@a+3
  8021     162F                     l2814:
  8022     162F  01E5               	clrf	___fladd@grs
  8023     1630                     l2816:
  8024     1630  0863               	movf	___fladd@aexp,w
  8025     1631  00DA               	movwf	??___fladd
  8026     1632  01DB               	clrf	??___fladd+1
  8027     1633  085B               	movf	??___fladd+1,w
  8028     1634  00DD               	movwf	??___fladd+3
  8029     1635  0864               	movf	___fladd@bexp,w
  8030     1636  025A               	subwf	??___fladd,w
  8031     1637  00DC               	movwf	??___fladd+2
  8032     1638  1C03               	skipc
  8033     1639  03DD               	decf	??___fladd+3,f
  8034     163A  085D               	movf	??___fladd+3,w
  8035     163B  3A80               	xorlw	128
  8036     163C  00FF               	movwf	btemp+1
  8037     163D  3080               	movlw	128
  8038     163E  027F               	subwf	btemp+1,w
  8039     163F  1D03               	skipz
  8040     1640  2E43               	goto	u3895
  8041     1641  301A               	movlw	26
  8042     1642  025C               	subwf	??___fladd+2,w
  8043     1643                     u3895:
  8044     1643  1C03               	skipc
  8045     1644  2E46               	goto	u3891
  8046     1645  2E47               	goto	u3890
  8047     1646                     u3891:
  8048     1646  2E7E               	goto	l2832
  8049     1647                     u3890:
  8050     1647                     l2818:
  8051     1647  1283               	bcf	3,5	;RP0=0, select bank0
  8052     1648  1303               	bcf	3,6	;RP1=0, select bank0
  8053     1649  0855               	movf	___fladd@b+3,w
  8054     164A  0454               	iorwf	___fladd@b+2,w
  8055     164B  0453               	iorwf	___fladd@b+1,w
  8056     164C  0452               	iorwf	___fladd@b,w
  8057     164D  1D03               	skipz
  8058     164E  2E50               	goto	u3901
  8059     164F  2E52               	goto	u3900
  8060     1650                     u3901:
  8061     1650  3001               	movlw	1
  8062     1651  2E53               	goto	u3910
  8063     1652                     u3900:
  8064     1652  3000               	movlw	0
  8065     1653                     u3910:
  8066     1653  00E5               	movwf	___fladd@grs
  8067     1654  3000               	movlw	0
  8068     1655  00D5               	movwf	___fladd@b+3
  8069     1656  3000               	movlw	0
  8070     1657  00D4               	movwf	___fladd@b+2
  8071     1658  3000               	movlw	0
  8072     1659  00D3               	movwf	___fladd@b+1
  8073     165A  3000               	movlw	0
  8074     165B  00D2               	movwf	___fladd@b
  8075     165C  0863               	movf	___fladd@aexp,w
  8076     165D  00E4               	movwf	___fladd@bexp
  8077     165E  2E86               	goto	l750
  8078     165F                     l752:
  8079     165F  1C65               	btfss	___fladd@grs,0
  8080     1660  2E62               	goto	u3921
  8081     1661  2E63               	goto	u3920
  8082     1662                     u3921:
  8083     1662  2E6A               	goto	l2822
  8084     1663                     u3920:
  8085     1663                     l2820:
  8086     1663  0865               	movf	___fladd@grs,w
  8087     1664  00DA               	movwf	??___fladd
  8088     1665  1003               	clrc
  8089     1666  0C5A               	rrf	??___fladd,w
  8090     1667  3801               	iorlw	1
  8091     1668  00E5               	movwf	___fladd@grs
  8092     1669  2E6C               	goto	l2824
  8093     166A                     l2822:
  8094     166A  1003               	clrc
  8095     166B  0CE5               	rrf	___fladd@grs,f
  8096     166C                     l2824:
  8097     166C  1C52               	btfss	___fladd@b,0
  8098     166D  2E6F               	goto	u3931
  8099     166E  2E70               	goto	u3930
  8100     166F                     u3931:
  8101     166F  2E71               	goto	l2828
  8102     1670                     u3930:
  8103     1670                     l2826:
  8104     1670  17E5               	bsf	___fladd@grs,7
  8105     1671                     l2828:
  8106     1671  3001               	movlw	1
  8107     1672  00DA               	movwf	??___fladd
  8108     1673                     u3945:
  8109     1673  0D55               	rlf	___fladd@b+3,w
  8110     1674  0CD5               	rrf	___fladd@b+3,f
  8111     1675  0CD4               	rrf	___fladd@b+2,f
  8112     1676  0CD3               	rrf	___fladd@b+1,f
  8113     1677  0CD2               	rrf	___fladd@b,f
  8114     1678  0BDA               	decfsz	??___fladd& (0+127),f
  8115     1679  2E73               	goto	u3945
  8116     167A                     l2830:
  8117     167A  3001               	movlw	1
  8118     167B  00DA               	movwf	??___fladd
  8119     167C  085A               	movf	??___fladd,w
  8120     167D  07E4               	addwf	___fladd@bexp,f
  8121     167E                     l2832:
  8122     167E  1283               	bcf	3,5	;RP0=0, select bank0
  8123     167F  1303               	bcf	3,6	;RP1=0, select bank0
  8124     1680  0863               	movf	___fladd@aexp,w
  8125     1681  0264               	subwf	___fladd@bexp,w
  8126     1682  1C03               	skipc
  8127     1683  2E85               	goto	u3951
  8128     1684  2E86               	goto	u3950
  8129     1685                     u3951:
  8130     1685  2E5F               	goto	l752
  8131     1686                     u3950:
  8132     1686                     l750:
  8133     1686  1B62               	btfsc	___fladd@signs,6
  8134     1687  2E89               	goto	u3961
  8135     1688  2E8A               	goto	u3960
  8136     1689                     u3961:
  8137     1689  2ED3               	goto	l2858
  8138     168A                     u3960:
  8139     168A                     l2834:
  8140     168A  0864               	movf	___fladd@bexp,w
  8141     168B  1D03               	btfss	3,2
  8142     168C  2E8E               	goto	u3971
  8143     168D  2E8F               	goto	u3970
  8144     168E                     u3971:
  8145     168E  2E98               	goto	l2840
  8146     168F                     u3970:
  8147     168F                     l2836:
  8148     168F  3000               	movlw	0
  8149     1690  00D5               	movwf	?___fladd+3
  8150     1691  3000               	movlw	0
  8151     1692  00D4               	movwf	?___fladd+2
  8152     1693  3000               	movlw	0
  8153     1694  00D3               	movwf	?___fladd+1
  8154     1695  3000               	movlw	0
  8155     1696  00D2               	movwf	?___fladd
  8156     1697  2FFF               	goto	l759
  8157     1698                     l2840:
  8158     1698  0856               	movf	___fladd@a,w
  8159     1699  07D2               	addwf	___fladd@b,f
  8160     169A  0857               	movf	___fladd@a+1,w
  8161     169B  1103               	clrz
  8162     169C  1803               	skipnc
  8163     169D  3E01               	addlw	1
  8164     169E  1903               	skipnz
  8165     169F  2EA1               	goto	u3981
  8166     16A0  07D3               	addwf	___fladd@b+1,f
  8167     16A1                     u3981:
  8168     16A1  0858               	movf	___fladd@a+2,w
  8169     16A2  1103               	clrz
  8170     16A3  1803               	skipnc
  8171     16A4  3E01               	addlw	1
  8172     16A5  1903               	skipnz
  8173     16A6  2EA8               	goto	u3982
  8174     16A7  07D4               	addwf	___fladd@b+2,f
  8175     16A8                     u3982:
  8176     16A8  0859               	movf	___fladd@a+3,w
  8177     16A9  1103               	clrz
  8178     16AA  1803               	skipnc
  8179     16AB  3E01               	addlw	1
  8180     16AC  1903               	skipnz
  8181     16AD  2EAF               	goto	u3983
  8182     16AE  07D5               	addwf	___fladd@b+3,f
  8183     16AF                     u3983:
  8184     16AF                     l2842:
  8185     16AF  1C55               	btfss	___fladd@b+3,0
  8186     16B0  2EB2               	goto	u3991
  8187     16B1  2EB3               	goto	u3990
  8188     16B2                     u3991:
  8189     16B2  2F87               	goto	l2892
  8190     16B3                     u3990:
  8191     16B3                     l2844:
  8192     16B3  1C65               	btfss	___fladd@grs,0
  8193     16B4  2EB6               	goto	u4001
  8194     16B5  2EB7               	goto	u4000
  8195     16B6                     u4001:
  8196     16B6  2EBE               	goto	l2848
  8197     16B7                     u4000:
  8198     16B7                     l2846:
  8199     16B7  0865               	movf	___fladd@grs,w
  8200     16B8  00DA               	movwf	??___fladd
  8201     16B9  1003               	clrc
  8202     16BA  0C5A               	rrf	??___fladd,w
  8203     16BB  3801               	iorlw	1
  8204     16BC  00E5               	movwf	___fladd@grs
  8205     16BD  2EC0               	goto	l2850
  8206     16BE                     l2848:
  8207     16BE  1003               	clrc
  8208     16BF  0CE5               	rrf	___fladd@grs,f
  8209     16C0                     l2850:
  8210     16C0  1C52               	btfss	___fladd@b,0
  8211     16C1  2EC3               	goto	u4011
  8212     16C2  2EC4               	goto	u4010
  8213     16C3                     u4011:
  8214     16C3  2EC5               	goto	l2854
  8215     16C4                     u4010:
  8216     16C4                     l2852:
  8217     16C4  17E5               	bsf	___fladd@grs,7
  8218     16C5                     l2854:
  8219     16C5  3001               	movlw	1
  8220     16C6  00DA               	movwf	??___fladd
  8221     16C7                     u4025:
  8222     16C7  0D55               	rlf	___fladd@b+3,w
  8223     16C8  0CD5               	rrf	___fladd@b+3,f
  8224     16C9  0CD4               	rrf	___fladd@b+2,f
  8225     16CA  0CD3               	rrf	___fladd@b+1,f
  8226     16CB  0CD2               	rrf	___fladd@b,f
  8227     16CC  0BDA               	decfsz	??___fladd& (0+127),f
  8228     16CD  2EC7               	goto	u4025
  8229     16CE                     l2856:
  8230     16CE  3001               	movlw	1
  8231     16CF  00DA               	movwf	??___fladd
  8232     16D0  085A               	movf	??___fladd,w
  8233     16D1  07E4               	addwf	___fladd@bexp,f
  8234     16D2  2F87               	goto	l2892
  8235     16D3                     l2858:
  8236     16D3  0855               	movf	___fladd@b+3,w
  8237     16D4  3A80               	xorlw	128
  8238     16D5  00FF               	movwf	btemp+1
  8239     16D6  0859               	movf	___fladd@a+3,w
  8240     16D7  3A80               	xorlw	128
  8241     16D8  027F               	subwf	btemp+1,w
  8242     16D9  1D03               	skipz
  8243     16DA  2EE5               	goto	u4033
  8244     16DB  0858               	movf	___fladd@a+2,w
  8245     16DC  0254               	subwf	___fladd@b+2,w
  8246     16DD  1D03               	skipz
  8247     16DE  2EE5               	goto	u4033
  8248     16DF  0857               	movf	___fladd@a+1,w
  8249     16E0  0253               	subwf	___fladd@b+1,w
  8250     16E1  1D03               	skipz
  8251     16E2  2EE5               	goto	u4033
  8252     16E3  0856               	movf	___fladd@a,w
  8253     16E4  0252               	subwf	___fladd@b,w
  8254     16E5                     u4033:
  8255     16E5  1803               	skipnc
  8256     16E6  2EE8               	goto	u4031
  8257     16E7  2EE9               	goto	u4030
  8258     16E8                     u4031:
  8259     16E8  2F41               	goto	l2868
  8260     16E9                     u4030:
  8261     16E9                     l2860:
  8262     16E9  30FF               	movlw	255
  8263     16EA  00DA               	movwf	??___fladd
  8264     16EB  30FF               	movlw	255
  8265     16EC  00DB               	movwf	??___fladd+1
  8266     16ED  30FF               	movlw	255
  8267     16EE  00DC               	movwf	??___fladd+2
  8268     16EF  30FF               	movlw	255
  8269     16F0  00DD               	movwf	??___fladd+3
  8270     16F1  0856               	movf	___fladd@a,w
  8271     16F2  00DE               	movwf	??___fladd+4
  8272     16F3  0857               	movf	___fladd@a+1,w
  8273     16F4  00DF               	movwf	??___fladd+5
  8274     16F5  0858               	movf	___fladd@a+2,w
  8275     16F6  00E0               	movwf	??___fladd+6
  8276     16F7  0859               	movf	___fladd@a+3,w
  8277     16F8  00E1               	movwf	??___fladd+7
  8278     16F9  0852               	movf	___fladd@b,w
  8279     16FA  02DE               	subwf	??___fladd+4,f
  8280     16FB  0853               	movf	___fladd@b+1,w
  8281     16FC  1C03               	skipc
  8282     16FD  0F53               	incfsz	___fladd@b+1,w
  8283     16FE  2F00               	goto	u4041
  8284     16FF  2F01               	goto	u4042
  8285     1700                     u4041:
  8286     1700  02DF               	subwf	??___fladd+5,f
  8287     1701                     u4042:
  8288     1701  0854               	movf	___fladd@b+2,w
  8289     1702  1C03               	skipc
  8290     1703  0F54               	incfsz	___fladd@b+2,w
  8291     1704  2F06               	goto	u4043
  8292     1705  2F07               	goto	u4044
  8293     1706                     u4043:
  8294     1706  02E0               	subwf	??___fladd+6,f
  8295     1707                     u4044:
  8296     1707  0855               	movf	___fladd@b+3,w
  8297     1708  1C03               	skipc
  8298     1709  0F55               	incfsz	___fladd@b+3,w
  8299     170A  2F0C               	goto	u4045
  8300     170B  2F0D               	goto	u4046
  8301     170C                     u4045:
  8302     170C  02E1               	subwf	??___fladd+7,f
  8303     170D                     u4046:
  8304     170D  085E               	movf	??___fladd+4,w
  8305     170E  07DA               	addwf	??___fladd,f
  8306     170F  085F               	movf	??___fladd+5,w
  8307     1710  1803               	skipnc
  8308     1711  0F5F               	incfsz	??___fladd+5,w
  8309     1712  2F14               	goto	u4050
  8310     1713  2F15               	goto	u4051
  8311     1714                     u4050:
  8312     1714  07DB               	addwf	??___fladd+1,f
  8313     1715                     u4051:
  8314     1715  0860               	movf	??___fladd+6,w
  8315     1716  1803               	skipnc
  8316     1717  0F60               	incfsz	??___fladd+6,w
  8317     1718  2F1A               	goto	u4052
  8318     1719  2F1B               	goto	u4053
  8319     171A                     u4052:
  8320     171A  07DC               	addwf	??___fladd+2,f
  8321     171B                     u4053:
  8322     171B  0861               	movf	??___fladd+7,w
  8323     171C  1803               	skipnc
  8324     171D  0A61               	incf	??___fladd+7,w
  8325     171E  07DD               	addwf	??___fladd+3,f
  8326     171F  085D               	movf	??___fladd+3,w
  8327     1720  00D5               	movwf	___fladd@b+3
  8328     1721  085C               	movf	??___fladd+2,w
  8329     1722  00D4               	movwf	___fladd@b+2
  8330     1723  085B               	movf	??___fladd+1,w
  8331     1724  00D3               	movwf	___fladd@b+1
  8332     1725  085A               	movf	??___fladd,w
  8333     1726  00D2               	movwf	___fladd@b
  8334     1727                     l2862:
  8335     1727  3080               	movlw	128
  8336     1728  00DA               	movwf	??___fladd
  8337     1729  085A               	movf	??___fladd,w
  8338     172A  06E2               	xorwf	___fladd@signs,f
  8339     172B  09E5               	comf	___fladd@grs,f
  8340     172C  0AE5               	incf	___fladd@grs,f
  8341     172D                     l2864:
  8342     172D  0865               	movf	___fladd@grs,w
  8343     172E  1D03               	btfss	3,2
  8344     172F  2F31               	goto	u4061
  8345     1730  2F32               	goto	u4060
  8346     1731                     u4061:
  8347     1731  2F4F               	goto	l767
  8348     1732                     u4060:
  8349     1732                     l2866:
  8350     1732  3001               	movlw	1
  8351     1733  07D2               	addwf	___fladd@b,f
  8352     1734  3000               	movlw	0
  8353     1735  1803               	skipnc
  8354     1736  3001               	movlw	1
  8355     1737  07D3               	addwf	___fladd@b+1,f
  8356     1738  3000               	movlw	0
  8357     1739  1803               	skipnc
  8358     173A  3001               	movlw	1
  8359     173B  07D4               	addwf	___fladd@b+2,f
  8360     173C  3000               	movlw	0
  8361     173D  1803               	skipnc
  8362     173E  3001               	movlw	1
  8363     173F  07D5               	addwf	___fladd@b+3,f
  8364     1740  2F4F               	goto	l767
  8365     1741                     l2868:
  8366     1741  0856               	movf	___fladd@a,w
  8367     1742  02D2               	subwf	___fladd@b,f
  8368     1743  0857               	movf	___fladd@a+1,w
  8369     1744  1C03               	skipc
  8370     1745  0F57               	incfsz	___fladd@a+1,w
  8371     1746  02D3               	subwf	___fladd@b+1,f
  8372     1747  0858               	movf	___fladd@a+2,w
  8373     1748  1C03               	skipc
  8374     1749  0F58               	incfsz	___fladd@a+2,w
  8375     174A  02D4               	subwf	___fladd@b+2,f
  8376     174B  0859               	movf	___fladd@a+3,w
  8377     174C  1C03               	skipc
  8378     174D  0F59               	incfsz	___fladd@a+3,w
  8379     174E  02D5               	subwf	___fladd@b+3,f
  8380     174F                     l767:
  8381     174F  0855               	movf	___fladd@b+3,w
  8382     1750  0454               	iorwf	___fladd@b+2,w
  8383     1751  0453               	iorwf	___fladd@b+1,w
  8384     1752  0452               	iorwf	___fladd@b,w
  8385     1753  1D03               	skipz
  8386     1754  2F56               	goto	u4071
  8387     1755  2F57               	goto	u4070
  8388     1756                     u4071:
  8389     1756  2F83               	goto	l2890
  8390     1757                     u4070:
  8391     1757                     l2870:
  8392     1757  0865               	movf	___fladd@grs,w
  8393     1758  1D03               	btfss	3,2
  8394     1759  2F5B               	goto	u4081
  8395     175A  2F5C               	goto	u4080
  8396     175B                     u4081:
  8397     175B  2F83               	goto	l2890
  8398     175C                     u4080:
  8399     175C                     l2872:
  8400     175C  3000               	movlw	0
  8401     175D  00D5               	movwf	?___fladd+3
  8402     175E  3000               	movlw	0
  8403     175F  00D4               	movwf	?___fladd+2
  8404     1760  3000               	movlw	0
  8405     1761  00D3               	movwf	?___fladd+1
  8406     1762  3000               	movlw	0
  8407     1763  00D2               	movwf	?___fladd
  8408     1764  2FFF               	goto	l759
  8409     1765                     l2876:
  8410     1765  3001               	movlw	1
  8411     1766  00DA               	movwf	??___fladd
  8412     1767                     u4095:
  8413     1767  1003               	clrc
  8414     1768  0DD2               	rlf	___fladd@b,f
  8415     1769  0DD3               	rlf	___fladd@b+1,f
  8416     176A  0DD4               	rlf	___fladd@b+2,f
  8417     176B  0DD5               	rlf	___fladd@b+3,f
  8418     176C  0BDA               	decfsz	??___fladd,f
  8419     176D  2F67               	goto	u4095
  8420     176E                     l2878:
  8421     176E  1FE5               	btfss	___fladd@grs,7
  8422     176F  2F71               	goto	u4101
  8423     1770  2F72               	goto	u4100
  8424     1771                     u4101:
  8425     1771  2F73               	goto	l771
  8426     1772                     u4100:
  8427     1772                     l2880:
  8428     1772  1452               	bsf	___fladd@b,0
  8429     1773                     l771:
  8430     1773  1C65               	btfss	___fladd@grs,0
  8431     1774  2F76               	goto	u4111
  8432     1775  2F77               	goto	u4110
  8433     1776                     u4111:
  8434     1776  2F7A               	goto	l2884
  8435     1777                     u4110:
  8436     1777                     l2882:
  8437     1777  1403               	setc
  8438     1778  0DE5               	rlf	___fladd@grs,f
  8439     1779  2F7C               	goto	l2886
  8440     177A                     l2884:
  8441     177A  1003               	clrc
  8442     177B  0DE5               	rlf	___fladd@grs,f
  8443     177C                     l2886:
  8444     177C  0864               	movf	___fladd@bexp,w
  8445     177D  1903               	btfsc	3,2
  8446     177E  2F80               	goto	u4121
  8447     177F  2F81               	goto	u4120
  8448     1780                     u4121:
  8449     1780  2F83               	goto	l2890
  8450     1781                     u4120:
  8451     1781                     l2888:
  8452     1781  3001               	movlw	1
  8453     1782  02E4               	subwf	___fladd@bexp,f
  8454     1783                     l2890:
  8455     1783  1FD4               	btfss	___fladd@b+2,7
  8456     1784  2F86               	goto	u4131
  8457     1785  2F87               	goto	u4130
  8458     1786                     u4131:
  8459     1786  2F65               	goto	l2876
  8460     1787                     u4130:
  8461     1787                     l2892:
  8462     1787  01E3               	clrf	___fladd@aexp
  8463     1788                     l2894:
  8464     1788  1FE5               	btfss	___fladd@grs,7
  8465     1789  2F8B               	goto	u4141
  8466     178A  2F8C               	goto	u4140
  8467     178B                     u4141:
  8468     178B  2F9A               	goto	l2902
  8469     178C                     u4140:
  8470     178C                     l2896:
  8471     178C  0865               	movf	___fladd@grs,w
  8472     178D  397F               	andlw	127
  8473     178E  1903               	btfsc	3,2
  8474     178F  2F91               	goto	u4151
  8475     1790  2F92               	goto	u4150
  8476     1791                     u4151:
  8477     1791  2F95               	goto	l777
  8478     1792                     u4150:
  8479     1792                     l2898:
  8480     1792  01E3               	clrf	___fladd@aexp
  8481     1793  0AE3               	incf	___fladd@aexp,f
  8482     1794  2F9A               	goto	l2902
  8483     1795                     l777:
  8484     1795  1C52               	btfss	___fladd@b,0
  8485     1796  2F98               	goto	u4161
  8486     1797  2F99               	goto	u4160
  8487     1798                     u4161:
  8488     1798  2F9A               	goto	l2902
  8489     1799                     u4160:
  8490     1799  2F92               	goto	l2898
  8491     179A                     l2902:
  8492     179A  0863               	movf	___fladd@aexp,w
  8493     179B  1903               	btfsc	3,2
  8494     179C  2F9E               	goto	u4171
  8495     179D  2F9F               	goto	u4170
  8496     179E                     u4171:
  8497     179E  2FD3               	goto	l780
  8498     179F                     u4170:
  8499     179F                     l2904:
  8500     179F  3001               	movlw	1
  8501     17A0  07D2               	addwf	___fladd@b,f
  8502     17A1  3000               	movlw	0
  8503     17A2  1803               	skipnc
  8504     17A3  3001               	movlw	1
  8505     17A4  07D3               	addwf	___fladd@b+1,f
  8506     17A5  3000               	movlw	0
  8507     17A6  1803               	skipnc
  8508     17A7  3001               	movlw	1
  8509     17A8  07D4               	addwf	___fladd@b+2,f
  8510     17A9  3000               	movlw	0
  8511     17AA  1803               	skipnc
  8512     17AB  3001               	movlw	1
  8513     17AC  07D5               	addwf	___fladd@b+3,f
  8514     17AD                     l2906:
  8515     17AD  1C55               	btfss	___fladd@b+3,0
  8516     17AE  2FB0               	goto	u4181
  8517     17AF  2FB1               	goto	u4180
  8518     17B0                     u4181:
  8519     17B0  2FD3               	goto	l780
  8520     17B1                     u4180:
  8521     17B1                     l2908:
  8522     17B1  0852               	movf	___fladd@b,w
  8523     17B2  00DA               	movwf	??___fladd
  8524     17B3  0853               	movf	___fladd@b+1,w
  8525     17B4  00DB               	movwf	??___fladd+1
  8526     17B5  0854               	movf	___fladd@b+2,w
  8527     17B6  00DC               	movwf	??___fladd+2
  8528     17B7  0855               	movf	___fladd@b+3,w
  8529     17B8  00DD               	movwf	??___fladd+3
  8530     17B9  3001               	movlw	1
  8531     17BA  00DE               	movwf	??___fladd+4
  8532     17BB                     u4195:
  8533     17BB  0D5D               	rlf	??___fladd+3,w
  8534     17BC  0CDD               	rrf	??___fladd+3,f
  8535     17BD  0CDC               	rrf	??___fladd+2,f
  8536     17BE  0CDB               	rrf	??___fladd+1,f
  8537     17BF  0CDA               	rrf	??___fladd,f
  8538     17C0                     u4190:
  8539     17C0  0BDE               	decfsz	??___fladd+4,f
  8540     17C1  2FBB               	goto	u4195
  8541     17C2  085D               	movf	??___fladd+3,w
  8542     17C3  00D5               	movwf	___fladd@b+3
  8543     17C4  085C               	movf	??___fladd+2,w
  8544     17C5  00D4               	movwf	___fladd@b+2
  8545     17C6  085B               	movf	??___fladd+1,w
  8546     17C7  00D3               	movwf	___fladd@b+1
  8547     17C8  085A               	movf	??___fladd,w
  8548     17C9  00D2               	movwf	___fladd@b
  8549     17CA  0A64               	incf	___fladd@bexp,w
  8550     17CB  1903               	btfsc	3,2
  8551     17CC  2FCE               	goto	u4201
  8552     17CD  2FCF               	goto	u4200
  8553     17CE                     u4201:
  8554     17CE  2FD3               	goto	l780
  8555     17CF                     u4200:
  8556     17CF                     l2910:
  8557     17CF  3001               	movlw	1
  8558     17D0  00DA               	movwf	??___fladd
  8559     17D1  085A               	movf	??___fladd,w
  8560     17D2  07E4               	addwf	___fladd@bexp,f
  8561     17D3                     l780:
  8562     17D3  0A64               	incf	___fladd@bexp,w
  8563     17D4  1903               	btfsc	3,2
  8564     17D5  2FD7               	goto	u4211
  8565     17D6  2FD8               	goto	u4210
  8566     17D7                     u4211:
  8567     17D7  2FDD               	goto	l2914
  8568     17D8                     u4210:
  8569     17D8                     l2912:
  8570     17D8  0864               	movf	___fladd@bexp,w
  8571     17D9  1D03               	btfss	3,2
  8572     17DA  2FDC               	goto	u4221
  8573     17DB  2FDD               	goto	u4220
  8574     17DC                     u4221:
  8575     17DC  2FEB               	goto	l2920
  8576     17DD                     u4220:
  8577     17DD                     l2914:
  8578     17DD  3000               	movlw	0
  8579     17DE  00D5               	movwf	___fladd@b+3
  8580     17DF  3000               	movlw	0
  8581     17E0  00D4               	movwf	___fladd@b+2
  8582     17E1  3000               	movlw	0
  8583     17E2  00D3               	movwf	___fladd@b+1
  8584     17E3  3000               	movlw	0
  8585     17E4  00D2               	movwf	___fladd@b
  8586     17E5                     l2916:
  8587     17E5  0864               	movf	___fladd@bexp,w
  8588     17E6  1D03               	btfss	3,2
  8589     17E7  2FE9               	goto	u4231
  8590     17E8  2FEA               	goto	u4230
  8591     17E9                     u4231:
  8592     17E9  2FEB               	goto	l2920
  8593     17EA                     u4230:
  8594     17EA                     l2918:
  8595     17EA  01E2               	clrf	___fladd@signs
  8596     17EB                     l2920:
  8597     17EB  1C64               	btfss	___fladd@bexp,0
  8598     17EC  2FEE               	goto	u4241
  8599     17ED  2FEF               	goto	u4240
  8600     17EE                     u4241:
  8601     17EE  2FF1               	goto	l2924
  8602     17EF                     u4240:
  8603     17EF                     l2922:
  8604     17EF  17D4               	bsf	___fladd@b+2,7
  8605     17F0  2FF5               	goto	l788
  8606     17F1                     l2924:
  8607     17F1  307F               	movlw	127
  8608     17F2  00DA               	movwf	??___fladd
  8609     17F3  085A               	movf	??___fladd,w
  8610     17F4  05D4               	andwf	___fladd@b+2,f
  8611     17F5                     l788:
  8612     17F5  0864               	movf	___fladd@bexp,w
  8613     17F6  00DA               	movwf	??___fladd
  8614     17F7  1003               	clrc
  8615     17F8  0C5A               	rrf	??___fladd,w
  8616     17F9  00D5               	movwf	___fladd@b+3
  8617     17FA                     l2926:
  8618     17FA  1FE2               	btfss	___fladd@signs,7
  8619     17FB  2FFD               	goto	u4251
  8620     17FC  2FFE               	goto	u4250
  8621     17FD                     u4251:
  8622     17FD  2FFF               	goto	l789
  8623     17FE                     u4250:
  8624     17FE                     l2928:
  8625     17FE  17D5               	bsf	___fladd@b+3,7
  8626     17FF                     l789:
  8627     17FF                     l759:
  8628     17FF  0008               	return
  8629     1800                     __end_of___fladd:
  8630                           
  8631                           	psect	text19
  8632     1ADF                     __ptext19:	
  8633 ;; *************** function ___flneg *****************
  8634 ;; Defined at:
  8635 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;  f1              4    0[COMMON] unsigned char 
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;		None
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  4    0[COMMON] unsigned char 
  8642 ;; Registers used:
  8643 ;;		wreg
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8649 ;;      Params:         4       0       0       0       0
  8650 ;;      Locals:         0       0       0       0       0
  8651 ;;      Temps:          0       0       0       0       0
  8652 ;;      Totals:         4       0       0       0       0
  8653 ;;Total ram usage:        4 bytes
  8654 ;; Hardware stack levels used: 1
  8655 ;; This function calls:
  8656 ;;		Nothing
  8657 ;; This function is called by:
  8658 ;;		_sprintf
  8659 ;; This function uses a non-reentrant model
  8660 ;;
  8661                           
  8662     1ADF                     ___flneg:	
  8663                           ;psect for function ___flneg
  8664                           
  8665     1ADF                     l3336:	
  8666                           ;incstack = 0
  8667                           ; Regs used in ___flneg: [wreg]
  8668                           
  8669     1ADF  0873               	movf	___flneg@f1+3,w
  8670     1AE0  0472               	iorwf	___flneg@f1+2,w
  8671     1AE1  0471               	iorwf	___flneg@f1+1,w
  8672     1AE2  0470               	iorwf	___flneg@f1,w
  8673     1AE3  1903               	skipnz
  8674     1AE4  2AE6               	goto	u5341
  8675     1AE5  2AE7               	goto	u5340
  8676     1AE6                     u5341:
  8677     1AE6  2AE9               	goto	l3340
  8678     1AE7                     u5340:
  8679     1AE7                     l3338:
  8680     1AE7  3080               	movlw	128
  8681     1AE8  06F3               	xorwf	___flneg@f1+3,f
  8682     1AE9                     l3340:
  8683     1AE9                     l618:
  8684     1AE9  0008               	return
  8685     1AEA                     __end_of___flneg:
  8686                           
  8687                           	psect	text20
  8688     0802                     __ptext20:	
  8689 ;; *************** function ___flge *****************
  8690 ;; Defined at:
  8691 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;  ff1             4    0[COMMON] unsigned char 
  8694 ;;  ff2             4    4[COMMON] unsigned char 
  8695 ;; Auto vars:     Size  Location     Type
  8696 ;;		None
  8697 ;; Return value:  Size  Location     Type
  8698 ;;		None               void
  8699 ;; Registers used:
  8700 ;;		wreg, status,2, status,0
  8701 ;; Tracked objects:
  8702 ;;		On entry : 0/0
  8703 ;;		On exit  : 0/0
  8704 ;;		Unchanged: 0/0
  8705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8706 ;;      Params:         8       0       0       0       0
  8707 ;;      Locals:         0       0       0       0       0
  8708 ;;      Temps:          4       0       0       0       0
  8709 ;;      Totals:        12       0       0       0       0
  8710 ;;Total ram usage:       12 bytes
  8711 ;; Hardware stack levels used: 1
  8712 ;; This function calls:
  8713 ;;		Nothing
  8714 ;; This function is called by:
  8715 ;;		_sprintf
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719     0802                     ___flge:	
  8720                           ;psect for function ___flge
  8721                           
  8722     0802                     l3316:	
  8723                           ;incstack = 0
  8724                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8725                           
  8726     0802  3000               	movlw	0
  8727     0803  0570               	andwf	___flge@ff1,w
  8728     0804  00F8               	movwf	??___flge
  8729     0805  3000               	movlw	0
  8730     0806  0571               	andwf	___flge@ff1+1,w
  8731     0807  00F9               	movwf	??___flge+1
  8732     0808  3080               	movlw	128
  8733     0809  0572               	andwf	___flge@ff1+2,w
  8734     080A  00FA               	movwf	??___flge+2
  8735     080B  307F               	movlw	127
  8736     080C  0573               	andwf	___flge@ff1+3,w
  8737     080D  00FB               	movwf	??___flge+3
  8738     080E  087B               	movf	??___flge+3,w
  8739     080F  047A               	iorwf	??___flge+2,w
  8740     0810  0479               	iorwf	??___flge+1,w
  8741     0811  0478               	iorwf	??___flge,w
  8742     0812  1D03               	skipz
  8743     0813  2815               	goto	u5271
  8744     0814  2816               	goto	u5270
  8745     0815                     u5271:
  8746     0815  281E               	goto	l610
  8747     0816                     u5270:
  8748     0816                     l3318:
  8749     0816  3000               	movlw	0
  8750     0817  00F3               	movwf	___flge@ff1+3
  8751     0818  3000               	movlw	0
  8752     0819  00F2               	movwf	___flge@ff1+2
  8753     081A  3000               	movlw	0
  8754     081B  00F1               	movwf	___flge@ff1+1
  8755     081C  3000               	movlw	0
  8756     081D  00F0               	movwf	___flge@ff1
  8757     081E                     l610:
  8758     081E  3000               	movlw	0
  8759     081F  0574               	andwf	___flge@ff2,w
  8760     0820  00F8               	movwf	??___flge
  8761     0821  3000               	movlw	0
  8762     0822  0575               	andwf	___flge@ff2+1,w
  8763     0823  00F9               	movwf	??___flge+1
  8764     0824  3080               	movlw	128
  8765     0825  0576               	andwf	___flge@ff2+2,w
  8766     0826  00FA               	movwf	??___flge+2
  8767     0827  307F               	movlw	127
  8768     0828  0577               	andwf	___flge@ff2+3,w
  8769     0829  00FB               	movwf	??___flge+3
  8770     082A  087B               	movf	??___flge+3,w
  8771     082B  047A               	iorwf	??___flge+2,w
  8772     082C  0479               	iorwf	??___flge+1,w
  8773     082D  0478               	iorwf	??___flge,w
  8774     082E  1D03               	skipz
  8775     082F  2831               	goto	u5281
  8776     0830  2832               	goto	u5280
  8777     0831                     u5281:
  8778     0831  283A               	goto	l3322
  8779     0832                     u5280:
  8780     0832                     l3320:
  8781     0832  3000               	movlw	0
  8782     0833  00F7               	movwf	___flge@ff2+3
  8783     0834  3000               	movlw	0
  8784     0835  00F6               	movwf	___flge@ff2+2
  8785     0836  3000               	movlw	0
  8786     0837  00F5               	movwf	___flge@ff2+1
  8787     0838  3000               	movlw	0
  8788     0839  00F4               	movwf	___flge@ff2
  8789     083A                     l3322:
  8790     083A  1FF3               	btfss	___flge@ff1+3,7
  8791     083B  283D               	goto	u5291
  8792     083C  283E               	goto	u5290
  8793     083D                     u5291:
  8794     083D  2862               	goto	l3326
  8795     083E                     u5290:
  8796     083E                     l3324:
  8797     083E  3000               	movlw	0
  8798     083F  00F8               	movwf	??___flge
  8799     0840  3000               	movlw	0
  8800     0841  00F9               	movwf	??___flge+1
  8801     0842  3000               	movlw	0
  8802     0843  00FA               	movwf	??___flge+2
  8803     0844  3080               	movlw	128
  8804     0845  00FB               	movwf	??___flge+3
  8805     0846  0870               	movf	___flge@ff1,w
  8806     0847  02F8               	subwf	??___flge,f
  8807     0848  0871               	movf	___flge@ff1+1,w
  8808     0849  1C03               	skipc
  8809     084A  0F71               	incfsz	___flge@ff1+1,w
  8810     084B  284D               	goto	u5301
  8811     084C  284E               	goto	u5302
  8812     084D                     u5301:
  8813     084D  02F9               	subwf	??___flge+1,f
  8814     084E                     u5302:
  8815     084E  0872               	movf	___flge@ff1+2,w
  8816     084F  1C03               	skipc
  8817     0850  0F72               	incfsz	___flge@ff1+2,w
  8818     0851  2853               	goto	u5303
  8819     0852  2854               	goto	u5304
  8820     0853                     u5303:
  8821     0853  02FA               	subwf	??___flge+2,f
  8822     0854                     u5304:
  8823     0854  0873               	movf	___flge@ff1+3,w
  8824     0855  1C03               	skipc
  8825     0856  0F73               	incfsz	___flge@ff1+3,w
  8826     0857  2859               	goto	u5305
  8827     0858  285A               	goto	u5306
  8828     0859                     u5305:
  8829     0859  02FB               	subwf	??___flge+3,f
  8830     085A                     u5306:
  8831     085A  087B               	movf	??___flge+3,w
  8832     085B  00F3               	movwf	___flge@ff1+3
  8833     085C  087A               	movf	??___flge+2,w
  8834     085D  00F2               	movwf	___flge@ff1+2
  8835     085E  0879               	movf	??___flge+1,w
  8836     085F  00F1               	movwf	___flge@ff1+1
  8837     0860  0878               	movf	??___flge,w
  8838     0861  00F0               	movwf	___flge@ff1
  8839     0862                     l3326:
  8840     0862  1FF7               	btfss	___flge@ff2+3,7
  8841     0863  2865               	goto	u5311
  8842     0864  2866               	goto	u5310
  8843     0865                     u5311:
  8844     0865  288A               	goto	l613
  8845     0866                     u5310:
  8846     0866                     l3328:
  8847     0866  3000               	movlw	0
  8848     0867  00F8               	movwf	??___flge
  8849     0868  3000               	movlw	0
  8850     0869  00F9               	movwf	??___flge+1
  8851     086A  3000               	movlw	0
  8852     086B  00FA               	movwf	??___flge+2
  8853     086C  3080               	movlw	128
  8854     086D  00FB               	movwf	??___flge+3
  8855     086E  0874               	movf	___flge@ff2,w
  8856     086F  02F8               	subwf	??___flge,f
  8857     0870  0875               	movf	___flge@ff2+1,w
  8858     0871  1C03               	skipc
  8859     0872  0F75               	incfsz	___flge@ff2+1,w
  8860     0873  2875               	goto	u5321
  8861     0874  2876               	goto	u5322
  8862     0875                     u5321:
  8863     0875  02F9               	subwf	??___flge+1,f
  8864     0876                     u5322:
  8865     0876  0876               	movf	___flge@ff2+2,w
  8866     0877  1C03               	skipc
  8867     0878  0F76               	incfsz	___flge@ff2+2,w
  8868     0879  287B               	goto	u5323
  8869     087A  287C               	goto	u5324
  8870     087B                     u5323:
  8871     087B  02FA               	subwf	??___flge+2,f
  8872     087C                     u5324:
  8873     087C  0877               	movf	___flge@ff2+3,w
  8874     087D  1C03               	skipc
  8875     087E  0F77               	incfsz	___flge@ff2+3,w
  8876     087F  2881               	goto	u5325
  8877     0880  2882               	goto	u5326
  8878     0881                     u5325:
  8879     0881  02FB               	subwf	??___flge+3,f
  8880     0882                     u5326:
  8881     0882  087B               	movf	??___flge+3,w
  8882     0883  00F7               	movwf	___flge@ff2+3
  8883     0884  087A               	movf	??___flge+2,w
  8884     0885  00F6               	movwf	___flge@ff2+2
  8885     0886  0879               	movf	??___flge+1,w
  8886     0887  00F5               	movwf	___flge@ff2+1
  8887     0888  0878               	movf	??___flge,w
  8888     0889  00F4               	movwf	___flge@ff2
  8889     088A                     l613:
  8890     088A  3080               	movlw	128
  8891     088B  06F3               	xorwf	___flge@ff1+3,f
  8892     088C  3080               	movlw	128
  8893     088D  06F7               	xorwf	___flge@ff2+3,f
  8894     088E  0877               	movf	___flge@ff2+3,w
  8895     088F  0273               	subwf	___flge@ff1+3,w
  8896     0890  1D03               	skipz
  8897     0891  289C               	goto	u5335
  8898     0892  0876               	movf	___flge@ff2+2,w
  8899     0893  0272               	subwf	___flge@ff1+2,w
  8900     0894  1D03               	skipz
  8901     0895  289C               	goto	u5335
  8902     0896  0875               	movf	___flge@ff2+1,w
  8903     0897  0271               	subwf	___flge@ff1+1,w
  8904     0898  1D03               	skipz
  8905     0899  289C               	goto	u5335
  8906     089A  0874               	movf	___flge@ff2,w
  8907     089B  0270               	subwf	___flge@ff1,w
  8908     089C                     u5335:
  8909     089C  1803               	skipnc
  8910     089D  289F               	goto	u5331
  8911     089E  28A0               	goto	u5330
  8912     089F                     u5331:
  8913     089F  28A2               	goto	l3332
  8914     08A0                     u5330:
  8915     08A0                     l3330:
  8916     08A0  1003               	clrc
  8917     08A1  28A3               	goto	l614
  8918     08A2                     l3332:
  8919     08A2  1403               	setc
  8920     08A3                     l614:
  8921     08A3  0008               	return
  8922     08A4                     __end_of___flge:
  8923                           
  8924                           	psect	text21
  8925     1D6B                     __ptext21:	
  8926 ;; *************** function ___fleq *****************
  8927 ;; Defined at:
  8928 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;  ff1             4    0[COMMON] unsigned char 
  8931 ;;  ff2             4    4[COMMON] unsigned char 
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;		None
  8934 ;; Return value:  Size  Location     Type
  8935 ;;		None               void
  8936 ;; Registers used:
  8937 ;;		wreg, status,2, status,0
  8938 ;; Tracked objects:
  8939 ;;		On entry : 0/0
  8940 ;;		On exit  : 0/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8943 ;;      Params:         8       0       0       0       0
  8944 ;;      Locals:         0       0       0       0       0
  8945 ;;      Temps:          4       0       0       0       0
  8946 ;;      Totals:        12       0       0       0       0
  8947 ;;Total ram usage:       12 bytes
  8948 ;; Hardware stack levels used: 1
  8949 ;; This function calls:
  8950 ;;		Nothing
  8951 ;; This function is called by:
  8952 ;;		_sprintf
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956     1D6B                     ___fleq:	
  8957                           ;psect for function ___fleq
  8958                           
  8959     1D6B                     l3304:	
  8960                           ;incstack = 0
  8961                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8962                           
  8963     1D6B  3000               	movlw	0
  8964     1D6C  0570               	andwf	___fleq@ff1,w
  8965     1D6D  00F8               	movwf	??___fleq
  8966     1D6E  3000               	movlw	0
  8967     1D6F  0571               	andwf	___fleq@ff1+1,w
  8968     1D70  00F9               	movwf	??___fleq+1
  8969     1D71  3080               	movlw	128
  8970     1D72  0572               	andwf	___fleq@ff1+2,w
  8971     1D73  00FA               	movwf	??___fleq+2
  8972     1D74  307F               	movlw	127
  8973     1D75  0573               	andwf	___fleq@ff1+3,w
  8974     1D76  00FB               	movwf	??___fleq+3
  8975     1D77  087B               	movf	??___fleq+3,w
  8976     1D78  047A               	iorwf	??___fleq+2,w
  8977     1D79  0479               	iorwf	??___fleq+1,w
  8978     1D7A  0478               	iorwf	??___fleq,w
  8979     1D7B  1D03               	skipz
  8980     1D7C  2D7E               	goto	u5241
  8981     1D7D  2D7F               	goto	u5240
  8982     1D7E                     u5241:
  8983     1D7E  2D87               	goto	l605
  8984     1D7F                     u5240:
  8985     1D7F                     l3306:
  8986     1D7F  3000               	movlw	0
  8987     1D80  00F3               	movwf	___fleq@ff1+3
  8988     1D81  3000               	movlw	0
  8989     1D82  00F2               	movwf	___fleq@ff1+2
  8990     1D83  3000               	movlw	0
  8991     1D84  00F1               	movwf	___fleq@ff1+1
  8992     1D85  3000               	movlw	0
  8993     1D86  00F0               	movwf	___fleq@ff1
  8994     1D87                     l605:
  8995     1D87  3000               	movlw	0
  8996     1D88  0574               	andwf	___fleq@ff2,w
  8997     1D89  00F8               	movwf	??___fleq
  8998     1D8A  3000               	movlw	0
  8999     1D8B  0575               	andwf	___fleq@ff2+1,w
  9000     1D8C  00F9               	movwf	??___fleq+1
  9001     1D8D  3080               	movlw	128
  9002     1D8E  0576               	andwf	___fleq@ff2+2,w
  9003     1D8F  00FA               	movwf	??___fleq+2
  9004     1D90  307F               	movlw	127
  9005     1D91  0577               	andwf	___fleq@ff2+3,w
  9006     1D92  00FB               	movwf	??___fleq+3
  9007     1D93  087B               	movf	??___fleq+3,w
  9008     1D94  047A               	iorwf	??___fleq+2,w
  9009     1D95  0479               	iorwf	??___fleq+1,w
  9010     1D96  0478               	iorwf	??___fleq,w
  9011     1D97  1D03               	skipz
  9012     1D98  2D9A               	goto	u5251
  9013     1D99  2D9B               	goto	u5250
  9014     1D9A                     u5251:
  9015     1D9A  2DA3               	goto	l606
  9016     1D9B                     u5250:
  9017     1D9B                     l3308:
  9018     1D9B  3000               	movlw	0
  9019     1D9C  00F7               	movwf	___fleq@ff2+3
  9020     1D9D  3000               	movlw	0
  9021     1D9E  00F6               	movwf	___fleq@ff2+2
  9022     1D9F  3000               	movlw	0
  9023     1DA0  00F5               	movwf	___fleq@ff2+1
  9024     1DA1  3000               	movlw	0
  9025     1DA2  00F4               	movwf	___fleq@ff2
  9026     1DA3                     l606:
  9027     1DA3  0877               	movf	___fleq@ff2+3,w
  9028     1DA4  0673               	xorwf	___fleq@ff1+3,w
  9029     1DA5  1D03               	skipz
  9030     1DA6  2DB1               	goto	u5265
  9031     1DA7  0876               	movf	___fleq@ff2+2,w
  9032     1DA8  0672               	xorwf	___fleq@ff1+2,w
  9033     1DA9  1D03               	skipz
  9034     1DAA  2DB1               	goto	u5265
  9035     1DAB  0875               	movf	___fleq@ff2+1,w
  9036     1DAC  0671               	xorwf	___fleq@ff1+1,w
  9037     1DAD  1D03               	skipz
  9038     1DAE  2DB1               	goto	u5265
  9039     1DAF  0874               	movf	___fleq@ff2,w
  9040     1DB0  0670               	xorwf	___fleq@ff1,w
  9041     1DB1                     u5265:
  9042     1DB1  1903               	skipnz
  9043     1DB2  2DB4               	goto	u5261
  9044     1DB3  2DB5               	goto	u5260
  9045     1DB4                     u5261:
  9046     1DB4  2DB7               	goto	l3312
  9047     1DB5                     u5260:
  9048     1DB5                     l3310:
  9049     1DB5  1003               	clrc
  9050     1DB6  2DB8               	goto	l607
  9051     1DB7                     l3312:
  9052     1DB7  1403               	setc
  9053     1DB8                     l607:
  9054     1DB8  0008               	return
  9055     1DB9                     __end_of___fleq:
  9056                           
  9057                           	psect	text22
  9058     1EC3                     __ptext22:	
  9059 ;; *************** function _setupINTOSC *****************
  9060 ;; Defined at:
  9061 ;;		line 10 in file "oscilador.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  IRCF            1    wreg     unsigned char 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;  IRCF            1    0[COMMON] unsigned char 
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  1    wreg      void 
  9068 ;; Registers used:
  9069 ;;		wreg, status,2, status,0
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9075 ;;      Params:         0       0       0       0       0
  9076 ;;      Locals:         1       0       0       0       0
  9077 ;;      Temps:          0       0       0       0       0
  9078 ;;      Totals:         1       0       0       0       0
  9079 ;;Total ram usage:        1 bytes
  9080 ;; Hardware stack levels used: 1
  9081 ;; This function calls:
  9082 ;;		Nothing
  9083 ;; This function is called by:
  9084 ;;		_main
  9085 ;; This function uses a non-reentrant model
  9086 ;;
  9087                           
  9088     1EC3                     _setupINTOSC:	
  9089                           ;psect for function _setupINTOSC
  9090                           
  9091                           
  9092                           ;incstack = 0
  9093                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  9094                           ;setupINTOSC@IRCF stored from wreg
  9095     1EC3  00F0               	movwf	setupINTOSC@IRCF
  9096     1EC4                     l3450:
  9097                           
  9098                           ;oscilador.c: 11:     if (IRCF == 7){
  9099     1EC4  3007               	movlw	7
  9100     1EC5  0670               	xorwf	setupINTOSC@IRCF,w
  9101     1EC6  1D03               	btfss	3,2
  9102     1EC7  2EC9               	goto	u5651
  9103     1EC8  2ECA               	goto	u5650
  9104     1EC9                     u5651:
  9105     1EC9  2ECE               	goto	l177
  9106     1ECA                     u5650:
  9107     1ECA                     l3452:
  9108                           
  9109                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  9110     1ECA  3070               	movlw	112
  9111     1ECB  1683               	bsf	3,5	;RP0=1, select bank1
  9112     1ECC  1303               	bcf	3,6	;RP1=0, select bank1
  9113     1ECD  048F               	iorwf	15,f	;volatile
  9114     1ECE                     l177:	
  9115                           ;oscilador.c: 13:     }
  9116                           
  9117                           
  9118                           ;oscilador.c: 14:     if (IRCF == 6){
  9119     1ECE  3006               	movlw	6
  9120     1ECF  0670               	xorwf	setupINTOSC@IRCF,w
  9121     1ED0  1D03               	btfss	3,2
  9122     1ED1  2ED3               	goto	u5661
  9123     1ED2  2ED4               	goto	u5660
  9124     1ED3                     u5661:
  9125     1ED3  2EDA               	goto	l178
  9126     1ED4                     u5660:
  9127     1ED4                     l3454:
  9128                           
  9129                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  9130     1ED4  1683               	bsf	3,5	;RP0=1, select bank1
  9131     1ED5  1303               	bcf	3,6	;RP1=0, select bank1
  9132     1ED6  080F               	movf	15,w	;volatile
  9133     1ED7  398F               	andlw	-113
  9134     1ED8  3860               	iorlw	96
  9135     1ED9  008F               	movwf	15	;volatile
  9136     1EDA                     l178:	
  9137                           ;oscilador.c: 16:     }
  9138                           
  9139                           
  9140                           ;oscilador.c: 17:     if (IRCF == 5){
  9141     1EDA  3005               	movlw	5
  9142     1EDB  0670               	xorwf	setupINTOSC@IRCF,w
  9143     1EDC  1D03               	btfss	3,2
  9144     1EDD  2EDF               	goto	u5671
  9145     1EDE  2EE0               	goto	u5670
  9146     1EDF                     u5671:
  9147     1EDF  2EE6               	goto	l179
  9148     1EE0                     u5670:
  9149     1EE0                     l3456:
  9150                           
  9151                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  9152     1EE0  1683               	bsf	3,5	;RP0=1, select bank1
  9153     1EE1  1303               	bcf	3,6	;RP1=0, select bank1
  9154     1EE2  080F               	movf	15,w	;volatile
  9155     1EE3  398F               	andlw	-113
  9156     1EE4  3850               	iorlw	80
  9157     1EE5  008F               	movwf	15	;volatile
  9158     1EE6                     l179:	
  9159                           ;oscilador.c: 19:     }
  9160                           
  9161                           
  9162                           ;oscilador.c: 20:     if (IRCF == 4){
  9163     1EE6  3004               	movlw	4
  9164     1EE7  0670               	xorwf	setupINTOSC@IRCF,w
  9165     1EE8  1D03               	btfss	3,2
  9166     1EE9  2EEB               	goto	u5681
  9167     1EEA  2EEC               	goto	u5680
  9168     1EEB                     u5681:
  9169     1EEB  2EF2               	goto	l180
  9170     1EEC                     u5680:
  9171     1EEC                     l3458:
  9172                           
  9173                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  9174     1EEC  1683               	bsf	3,5	;RP0=1, select bank1
  9175     1EED  1303               	bcf	3,6	;RP1=0, select bank1
  9176     1EEE  080F               	movf	15,w	;volatile
  9177     1EEF  398F               	andlw	-113
  9178     1EF0  3840               	iorlw	64
  9179     1EF1  008F               	movwf	15	;volatile
  9180     1EF2                     l180:	
  9181                           ;oscilador.c: 22:     }
  9182                           
  9183                           
  9184                           ;oscilador.c: 23:     if (IRCF == 3){
  9185     1EF2  3003               	movlw	3
  9186     1EF3  0670               	xorwf	setupINTOSC@IRCF,w
  9187     1EF4  1D03               	btfss	3,2
  9188     1EF5  2EF7               	goto	u5691
  9189     1EF6  2EF8               	goto	u5690
  9190     1EF7                     u5691:
  9191     1EF7  2EFE               	goto	l181
  9192     1EF8                     u5690:
  9193     1EF8                     l3460:
  9194                           
  9195                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  9196     1EF8  1683               	bsf	3,5	;RP0=1, select bank1
  9197     1EF9  1303               	bcf	3,6	;RP1=0, select bank1
  9198     1EFA  080F               	movf	15,w	;volatile
  9199     1EFB  398F               	andlw	-113
  9200     1EFC  3830               	iorlw	48
  9201     1EFD  008F               	movwf	15	;volatile
  9202     1EFE                     l181:	
  9203                           ;oscilador.c: 25:     }
  9204                           
  9205                           
  9206                           ;oscilador.c: 26:     if (IRCF == 2){
  9207     1EFE  3002               	movlw	2
  9208     1EFF  0670               	xorwf	setupINTOSC@IRCF,w
  9209     1F00  1D03               	btfss	3,2
  9210     1F01  2F03               	goto	u5701
  9211     1F02  2F04               	goto	u5700
  9212     1F03                     u5701:
  9213     1F03  2F0A               	goto	l182
  9214     1F04                     u5700:
  9215     1F04                     l3462:
  9216                           
  9217                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  9218     1F04  1683               	bsf	3,5	;RP0=1, select bank1
  9219     1F05  1303               	bcf	3,6	;RP1=0, select bank1
  9220     1F06  080F               	movf	15,w	;volatile
  9221     1F07  398F               	andlw	-113
  9222     1F08  3820               	iorlw	32
  9223     1F09  008F               	movwf	15	;volatile
  9224     1F0A                     l182:	
  9225                           ;oscilador.c: 28:     }
  9226                           
  9227                           
  9228                           ;oscilador.c: 29:     if (IRCF == 1){
  9229     1F0A  0370               	decf	setupINTOSC@IRCF,w
  9230     1F0B  1D03               	btfss	3,2
  9231     1F0C  2F0E               	goto	u5711
  9232     1F0D  2F0F               	goto	u5710
  9233     1F0E                     u5711:
  9234     1F0E  2F15               	goto	l183
  9235     1F0F                     u5710:
  9236     1F0F                     l3464:
  9237                           
  9238                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  9239     1F0F  1683               	bsf	3,5	;RP0=1, select bank1
  9240     1F10  1303               	bcf	3,6	;RP1=0, select bank1
  9241     1F11  080F               	movf	15,w	;volatile
  9242     1F12  398F               	andlw	-113
  9243     1F13  3810               	iorlw	16
  9244     1F14  008F               	movwf	15	;volatile
  9245     1F15                     l183:	
  9246                           ;oscilador.c: 31:     }
  9247                           
  9248                           
  9249                           ;oscilador.c: 32:     if (IRCF == 0){
  9250     1F15  0870               	movf	setupINTOSC@IRCF,w
  9251     1F16  1D03               	btfss	3,2
  9252     1F17  2F19               	goto	u5721
  9253     1F18  2F1A               	goto	u5720
  9254     1F19                     u5721:
  9255     1F19  2F1E               	goto	l3468
  9256     1F1A                     u5720:
  9257     1F1A                     l3466:
  9258                           
  9259                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  9260     1F1A  308F               	movlw	-113
  9261     1F1B  1683               	bsf	3,5	;RP0=1, select bank1
  9262     1F1C  1303               	bcf	3,6	;RP1=0, select bank1
  9263     1F1D  058F               	andwf	15,f	;volatile
  9264     1F1E                     l3468:
  9265                           
  9266                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  9267     1F1E  1683               	bsf	3,5	;RP0=1, select bank1
  9268     1F1F  1303               	bcf	3,6	;RP1=0, select bank1
  9269     1F20  140F               	bsf	15,0	;volatile
  9270     1F21                     l185:
  9271     1F21  0008               	return
  9272     1F22                     __end_of_setupINTOSC:
  9273                           
  9274                           	psect	text23
  9275     1B38                     __ptext23:	
  9276 ;; *************** function _portsetup *****************
  9277 ;; Defined at:
  9278 ;;		line 77 in file "main.c"
  9279 ;; Parameters:    Size  Location     Type
  9280 ;;		None
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;		None
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  1    wreg      void 
  9285 ;; Registers used:
  9286 ;;		wreg, status,2, status,0, pclath, cstack
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9292 ;;      Params:         0       0       0       0       0
  9293 ;;      Locals:         0       0       0       0       0
  9294 ;;      Temps:          0       0       0       0       0
  9295 ;;      Totals:         0       0       0       0       0
  9296 ;;Total ram usage:        0 bytes
  9297 ;; Hardware stack levels used: 1
  9298 ;; Hardware stack levels required when called: 2
  9299 ;; This function calls:
  9300 ;;		_I2C_Master_Init
  9301 ;; This function is called by:
  9302 ;;		_main
  9303 ;; This function uses a non-reentrant model
  9304 ;;
  9305                           
  9306     1B38                     _portsetup:	
  9307                           ;psect for function _portsetup
  9308                           
  9309     1B38                     l3470:	
  9310                           ;incstack = 0
  9311                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  9312                           
  9313                           
  9314                           ;main.c: 78:     ANSEL = 0;
  9315     1B38  1683               	bsf	3,5	;RP0=1, select bank3
  9316     1B39  1703               	bsf	3,6	;RP1=1, select bank3
  9317     1B3A  0188               	clrf	8	;volatile
  9318                           
  9319                           ;main.c: 79:     ANSELH = 0;
  9320     1B3B  0189               	clrf	9	;volatile
  9321                           
  9322                           ;main.c: 80:     TRISA = 0;
  9323     1B3C  1683               	bsf	3,5	;RP0=1, select bank1
  9324     1B3D  1303               	bcf	3,6	;RP1=0, select bank1
  9325     1B3E  0185               	clrf	5	;volatile
  9326                           
  9327                           ;main.c: 81:     PORTA = 0;
  9328     1B3F  1283               	bcf	3,5	;RP0=0, select bank0
  9329     1B40  1303               	bcf	3,6	;RP1=0, select bank0
  9330     1B41  0185               	clrf	5	;volatile
  9331                           
  9332                           ;main.c: 82:     TRISD = 0;
  9333     1B42  1683               	bsf	3,5	;RP0=1, select bank1
  9334     1B43  1303               	bcf	3,6	;RP1=0, select bank1
  9335     1B44  0188               	clrf	8	;volatile
  9336                           
  9337                           ;main.c: 83:     PORTD = 0;
  9338     1B45  1283               	bcf	3,5	;RP0=0, select bank0
  9339     1B46  1303               	bcf	3,6	;RP1=0, select bank0
  9340     1B47  0188               	clrf	8	;volatile
  9341                           
  9342                           ;main.c: 84:     TRISB = 0;
  9343     1B48  1683               	bsf	3,5	;RP0=1, select bank1
  9344     1B49  1303               	bcf	3,6	;RP1=0, select bank1
  9345     1B4A  0186               	clrf	6	;volatile
  9346                           
  9347                           ;main.c: 85:     PORTB = 0;
  9348     1B4B  1283               	bcf	3,5	;RP0=0, select bank0
  9349     1B4C  1303               	bcf	3,6	;RP1=0, select bank0
  9350     1B4D  0186               	clrf	6	;volatile
  9351     1B4E                     l3472:
  9352                           
  9353                           ;main.c: 86:     I2C_Master_Init(100000);
  9354     1B4E  3000               	movlw	0
  9355     1B4F  00A3               	movwf	I2C_Master_Init@c+3
  9356     1B50  3001               	movlw	1
  9357     1B51  00A2               	movwf	I2C_Master_Init@c+2
  9358     1B52  3086               	movlw	134
  9359     1B53  00A1               	movwf	I2C_Master_Init@c+1
  9360     1B54  30A0               	movlw	160
  9361     1B55  00A0               	movwf	I2C_Master_Init@c
  9362     1B56  160A  158A  242D  160A  158A  	fcall	_I2C_Master_Init
  9363     1B5B                     l59:
  9364     1B5B  0008               	return
  9365     1B5C                     __end_of_portsetup:
  9366                           
  9367                           	psect	text24
  9368     1C2D                     __ptext24:	
  9369 ;; *************** function _I2C_Master_Init *****************
  9370 ;; Defined at:
  9371 ;;		line 16 in file "I2C.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;  c               4    0[BANK0 ] const unsigned long 
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;		None
  9376 ;; Return value:  Size  Location     Type
  9377 ;;                  1    wreg      void 
  9378 ;; Registers used:
  9379 ;;		wreg, status,2, status,0, pclath, cstack
  9380 ;; Tracked objects:
  9381 ;;		On entry : 0/0
  9382 ;;		On exit  : 0/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9385 ;;      Params:         0       4       0       0       0
  9386 ;;      Locals:         0       0       0       0       0
  9387 ;;      Temps:          0       4       0       0       0
  9388 ;;      Totals:         0       8       0       0       0
  9389 ;;Total ram usage:        8 bytes
  9390 ;; Hardware stack levels used: 1
  9391 ;; Hardware stack levels required when called: 1
  9392 ;; This function calls:
  9393 ;;		___lldiv
  9394 ;; This function is called by:
  9395 ;;		_portsetup
  9396 ;; This function uses a non-reentrant model
  9397 ;;
  9398                           
  9399     1C2D                     _I2C_Master_Init:	
  9400                           ;psect for function _I2C_Master_Init
  9401                           
  9402     1C2D                     l3070:	
  9403                           ;incstack = 0
  9404                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  9405                           
  9406                           
  9407                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  9408     1C2D  3028               	movlw	40
  9409     1C2E  1283               	bcf	3,5	;RP0=0, select bank0
  9410     1C2F  1303               	bcf	3,6	;RP1=0, select bank0
  9411     1C30  0094               	movwf	20	;volatile
  9412     1C31                     l3072:
  9413                           
  9414                           ;I2C.c: 19:     SSPCON2 = 0;
  9415     1C31  1683               	bsf	3,5	;RP0=1, select bank1
  9416     1C32  1303               	bcf	3,6	;RP1=0, select bank1
  9417     1C33  0191               	clrf	17	;volatile
  9418     1C34                     l3074:
  9419                           
  9420                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  9421     1C34  1283               	bcf	3,5	;RP0=0, select bank0
  9422     1C35  1303               	bcf	3,6	;RP1=0, select bank0
  9423     1C36  0820               	movf	I2C_Master_Init@c,w
  9424     1C37  00A4               	movwf	??_I2C_Master_Init
  9425     1C38  0821               	movf	I2C_Master_Init@c+1,w
  9426     1C39  00A5               	movwf	??_I2C_Master_Init+1
  9427     1C3A  0822               	movf	I2C_Master_Init@c+2,w
  9428     1C3B  00A6               	movwf	??_I2C_Master_Init+2
  9429     1C3C  0823               	movf	I2C_Master_Init@c+3,w
  9430     1C3D  00A7               	movwf	??_I2C_Master_Init+3
  9431     1C3E  3002               	movlw	2
  9432     1C3F                     u4635:
  9433     1C3F  1003               	clrc
  9434     1C40  0DA4               	rlf	??_I2C_Master_Init,f
  9435     1C41  0DA5               	rlf	??_I2C_Master_Init+1,f
  9436     1C42  0DA6               	rlf	??_I2C_Master_Init+2,f
  9437     1C43  0DA7               	rlf	??_I2C_Master_Init+3,f
  9438     1C44                     u4630:
  9439     1C44  3EFF               	addlw	-1
  9440     1C45  1D03               	skipz
  9441     1C46  2C3F               	goto	u4635
  9442     1C47  0827               	movf	??_I2C_Master_Init+3,w
  9443     1C48  00F3               	movwf	___lldiv@divisor+3
  9444     1C49  0826               	movf	??_I2C_Master_Init+2,w
  9445     1C4A  00F2               	movwf	___lldiv@divisor+2
  9446     1C4B  0825               	movf	??_I2C_Master_Init+1,w
  9447     1C4C  00F1               	movwf	___lldiv@divisor+1
  9448     1C4D  0824               	movf	??_I2C_Master_Init,w
  9449     1C4E  00F0               	movwf	___lldiv@divisor
  9450     1C4F  3000               	movlw	0
  9451     1C50  00F7               	movwf	___lldiv@dividend+3
  9452     1C51  307A               	movlw	122
  9453     1C52  00F6               	movwf	___lldiv@dividend+2
  9454     1C53  3012               	movlw	18
  9455     1C54  00F5               	movwf	___lldiv@dividend+1
  9456     1C55  3000               	movlw	0
  9457     1C56  00F4               	movwf	___lldiv@dividend
  9458     1C57  160A  158A  2722  160A  158A  	fcall	___lldiv
  9459     1C5C  0870               	movf	?___lldiv,w
  9460     1C5D  3EFF               	addlw	255
  9461     1C5E  1683               	bsf	3,5	;RP0=1, select bank1
  9462     1C5F  1303               	bcf	3,6	;RP1=0, select bank1
  9463     1C60  0093               	movwf	19	;volatile
  9464     1C61                     l3076:
  9465                           
  9466                           ;I2C.c: 21:     SSPSTAT = 0;
  9467     1C61  0194               	clrf	20	;volatile
  9468     1C62                     l3078:
  9469                           
  9470                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  9471     1C62  1587               	bsf	7,3	;volatile
  9472     1C63                     l3080:
  9473                           
  9474                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  9475     1C63  1607               	bsf	7,4	;volatile
  9476     1C64                     l214:
  9477     1C64  0008               	return
  9478     1C65                     __end_of_I2C_Master_Init:
  9479                           
  9480                           	psect	text25
  9481     1F22                     __ptext25:	
  9482 ;; *************** function ___lldiv *****************
  9483 ;; Defined at:
  9484 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;  divisor         4    0[COMMON] unsigned long 
  9487 ;;  dividend        4    4[COMMON] unsigned long 
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;  quotient        4    9[COMMON] unsigned long 
  9490 ;;  counter         1   13[COMMON] unsigned char 
  9491 ;; Return value:  Size  Location     Type
  9492 ;;                  4    0[COMMON] unsigned long 
  9493 ;; Registers used:
  9494 ;;		wreg, status,2, status,0
  9495 ;; Tracked objects:
  9496 ;;		On entry : 0/0
  9497 ;;		On exit  : 0/0
  9498 ;;		Unchanged: 0/0
  9499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9500 ;;      Params:         8       0       0       0       0
  9501 ;;      Locals:         5       0       0       0       0
  9502 ;;      Temps:          1       0       0       0       0
  9503 ;;      Totals:        14       0       0       0       0
  9504 ;;Total ram usage:       14 bytes
  9505 ;; Hardware stack levels used: 1
  9506 ;; This function calls:
  9507 ;;		Nothing
  9508 ;; This function is called by:
  9509 ;;		_I2C_Master_Init
  9510 ;;		_sprintf
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514     1F22                     ___lldiv:	
  9515                           ;psect for function ___lldiv
  9516                           
  9517     1F22                     l2582:	
  9518                           ;incstack = 0
  9519                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9520                           
  9521     1F22  3000               	movlw	0
  9522     1F23  00FC               	movwf	___lldiv@quotient+3
  9523     1F24  3000               	movlw	0
  9524     1F25  00FB               	movwf	___lldiv@quotient+2
  9525     1F26  3000               	movlw	0
  9526     1F27  00FA               	movwf	___lldiv@quotient+1
  9527     1F28  3000               	movlw	0
  9528     1F29  00F9               	movwf	___lldiv@quotient
  9529     1F2A  0873               	movf	___lldiv@divisor+3,w
  9530     1F2B  0472               	iorwf	___lldiv@divisor+2,w
  9531     1F2C  0471               	iorwf	___lldiv@divisor+1,w
  9532     1F2D  0470               	iorwf	___lldiv@divisor,w
  9533     1F2E  1903               	skipnz
  9534     1F2F  2F31               	goto	u3411
  9535     1F30  2F32               	goto	u3410
  9536     1F31                     u3411:
  9537     1F31  2F7F               	goto	l2602
  9538     1F32                     u3410:
  9539     1F32                     l2584:
  9540     1F32  01FD               	clrf	___lldiv@counter
  9541     1F33  0AFD               	incf	___lldiv@counter,f
  9542     1F34  2F42               	goto	l2588
  9543     1F35                     l2586:
  9544     1F35  3001               	movlw	1
  9545     1F36  00F8               	movwf	??___lldiv
  9546     1F37                     u3425:
  9547     1F37  1003               	clrc
  9548     1F38  0DF0               	rlf	___lldiv@divisor,f
  9549     1F39  0DF1               	rlf	___lldiv@divisor+1,f
  9550     1F3A  0DF2               	rlf	___lldiv@divisor+2,f
  9551     1F3B  0DF3               	rlf	___lldiv@divisor+3,f
  9552     1F3C  0BF8               	decfsz	??___lldiv,f
  9553     1F3D  2F37               	goto	u3425
  9554     1F3E  3001               	movlw	1
  9555     1F3F  00F8               	movwf	??___lldiv
  9556     1F40  0878               	movf	??___lldiv,w
  9557     1F41  07FD               	addwf	___lldiv@counter,f
  9558     1F42                     l2588:
  9559     1F42  1FF3               	btfss	___lldiv@divisor+3,7
  9560     1F43  2F45               	goto	u3431
  9561     1F44  2F46               	goto	u3430
  9562     1F45                     u3431:
  9563     1F45  2F35               	goto	l2586
  9564     1F46                     u3430:
  9565     1F46                     l2590:
  9566     1F46  3001               	movlw	1
  9567     1F47  00F8               	movwf	??___lldiv
  9568     1F48                     u3445:
  9569     1F48  1003               	clrc
  9570     1F49  0DF9               	rlf	___lldiv@quotient,f
  9571     1F4A  0DFA               	rlf	___lldiv@quotient+1,f
  9572     1F4B  0DFB               	rlf	___lldiv@quotient+2,f
  9573     1F4C  0DFC               	rlf	___lldiv@quotient+3,f
  9574     1F4D  0BF8               	decfsz	??___lldiv,f
  9575     1F4E  2F48               	goto	u3445
  9576     1F4F                     l2592:
  9577     1F4F  0873               	movf	___lldiv@divisor+3,w
  9578     1F50  0277               	subwf	___lldiv@dividend+3,w
  9579     1F51  1D03               	skipz
  9580     1F52  2F5D               	goto	u3455
  9581     1F53  0872               	movf	___lldiv@divisor+2,w
  9582     1F54  0276               	subwf	___lldiv@dividend+2,w
  9583     1F55  1D03               	skipz
  9584     1F56  2F5D               	goto	u3455
  9585     1F57  0871               	movf	___lldiv@divisor+1,w
  9586     1F58  0275               	subwf	___lldiv@dividend+1,w
  9587     1F59  1D03               	skipz
  9588     1F5A  2F5D               	goto	u3455
  9589     1F5B  0870               	movf	___lldiv@divisor,w
  9590     1F5C  0274               	subwf	___lldiv@dividend,w
  9591     1F5D                     u3455:
  9592     1F5D  1C03               	skipc
  9593     1F5E  2F60               	goto	u3451
  9594     1F5F  2F61               	goto	u3450
  9595     1F60                     u3451:
  9596     1F60  2F70               	goto	l2598
  9597     1F61                     u3450:
  9598     1F61                     l2594:
  9599     1F61  0870               	movf	___lldiv@divisor,w
  9600     1F62  02F4               	subwf	___lldiv@dividend,f
  9601     1F63  0871               	movf	___lldiv@divisor+1,w
  9602     1F64  1C03               	skipc
  9603     1F65  0F71               	incfsz	___lldiv@divisor+1,w
  9604     1F66  02F5               	subwf	___lldiv@dividend+1,f
  9605     1F67  0872               	movf	___lldiv@divisor+2,w
  9606     1F68  1C03               	skipc
  9607     1F69  0F72               	incfsz	___lldiv@divisor+2,w
  9608     1F6A  02F6               	subwf	___lldiv@dividend+2,f
  9609     1F6B  0873               	movf	___lldiv@divisor+3,w
  9610     1F6C  1C03               	skipc
  9611     1F6D  0F73               	incfsz	___lldiv@divisor+3,w
  9612     1F6E  02F7               	subwf	___lldiv@dividend+3,f
  9613     1F6F                     l2596:
  9614     1F6F  1479               	bsf	___lldiv@quotient,0
  9615     1F70                     l2598:
  9616     1F70  3001               	movlw	1
  9617     1F71                     u3465:
  9618     1F71  1003               	clrc
  9619     1F72  0CF3               	rrf	___lldiv@divisor+3,f
  9620     1F73  0CF2               	rrf	___lldiv@divisor+2,f
  9621     1F74  0CF1               	rrf	___lldiv@divisor+1,f
  9622     1F75  0CF0               	rrf	___lldiv@divisor,f
  9623     1F76  3EFF               	addlw	-1
  9624     1F77  1D03               	skipz
  9625     1F78  2F71               	goto	u3465
  9626     1F79                     l2600:
  9627     1F79  3001               	movlw	1
  9628     1F7A  02FD               	subwf	___lldiv@counter,f
  9629     1F7B  1D03               	btfss	3,2
  9630     1F7C  2F7E               	goto	u3471
  9631     1F7D  2F7F               	goto	u3470
  9632     1F7E                     u3471:
  9633     1F7E  2F46               	goto	l2590
  9634     1F7F                     u3470:
  9635     1F7F                     l2602:
  9636     1F7F  087C               	movf	___lldiv@quotient+3,w
  9637     1F80  00F3               	movwf	?___lldiv+3
  9638     1F81  087B               	movf	___lldiv@quotient+2,w
  9639     1F82  00F2               	movwf	?___lldiv+2
  9640     1F83  087A               	movf	___lldiv@quotient+1,w
  9641     1F84  00F1               	movwf	?___lldiv+1
  9642     1F85  0879               	movf	___lldiv@quotient,w
  9643     1F86  00F0               	movwf	?___lldiv
  9644     1F87                     l455:
  9645     1F87  0008               	return
  9646     1F88                     __end_of___lldiv:
  9647                           
  9648                           	psect	text26
  9649     11CA                     __ptext26:	
  9650 ;; *************** function ___fldiv *****************
  9651 ;; Defined at:
  9652 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;  a               4   30[BANK0 ] unsigned long 
  9655 ;;  b               4   34[BANK0 ] unsigned long 
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;  grs             4   50[BANK0 ] unsigned long 
  9658 ;;  rem             4   43[BANK0 ] unsigned long 
  9659 ;;  new_exp         2   48[BANK0 ] int 
  9660 ;;  aexp            1   55[BANK0 ] unsigned char 
  9661 ;;  bexp            1   54[BANK0 ] unsigned char 
  9662 ;;  sign            1   47[BANK0 ] unsigned char 
  9663 ;; Return value:  Size  Location     Type
  9664 ;;                  4   30[BANK0 ] unsigned char 
  9665 ;; Registers used:
  9666 ;;		wreg, status,2, status,0, btemp+1
  9667 ;; Tracked objects:
  9668 ;;		On entry : 0/0
  9669 ;;		On exit  : 0/0
  9670 ;;		Unchanged: 0/0
  9671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9672 ;;      Params:         0       8       0       0       0
  9673 ;;      Locals:         0      13       0       0       0
  9674 ;;      Temps:          0       5       0       0       0
  9675 ;;      Totals:         0      26       0       0       0
  9676 ;;Total ram usage:       26 bytes
  9677 ;; Hardware stack levels used: 1
  9678 ;; This function calls:
  9679 ;;		Nothing
  9680 ;; This function is called by:
  9681 ;;		_main
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685     11CA                     ___fldiv:	
  9686                           ;psect for function ___fldiv
  9687                           
  9688     11CA                     l3748:	
  9689                           ;incstack = 0
  9690                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9691                           
  9692     11CA  1283               	bcf	3,5	;RP0=0, select bank0
  9693     11CB  1303               	bcf	3,6	;RP1=0, select bank0
  9694     11CC  0845               	movf	___fldiv@b+3,w
  9695     11CD  3980               	andlw	128
  9696     11CE  00CF               	movwf	___fldiv@sign
  9697     11CF                     l3750:
  9698     11CF  0845               	movf	___fldiv@b+3,w
  9699     11D0  00C6               	movwf	??___fldiv
  9700     11D1  0746               	addwf	??___fldiv,w
  9701     11D2  00D6               	movwf	___fldiv@bexp
  9702     11D3                     l3752:
  9703     11D3  1FC4               	btfss	___fldiv@b+2,7
  9704     11D4  29D6               	goto	u6161
  9705     11D5  29D7               	goto	u6160
  9706     11D6                     u6161:
  9707     11D6  29D8               	goto	l3756
  9708     11D7                     u6160:
  9709     11D7                     l3754:
  9710     11D7  1456               	bsf	___fldiv@bexp,0
  9711     11D8                     l3756:
  9712     11D8  0856               	movf	___fldiv@bexp,w
  9713     11D9  1903               	btfsc	3,2
  9714     11DA  29DC               	goto	u6171
  9715     11DB  29DD               	goto	u6170
  9716     11DC                     u6171:
  9717     11DC  29ED               	goto	l3766
  9718     11DD                     u6170:
  9719     11DD                     l3758:
  9720     11DD  0A56               	incf	___fldiv@bexp,w
  9721     11DE  1D03               	btfss	3,2
  9722     11DF  29E1               	goto	u6181
  9723     11E0  29E2               	goto	u6180
  9724     11E1                     u6181:
  9725     11E1  29EA               	goto	l3762
  9726     11E2                     u6180:
  9727     11E2                     l3760:
  9728     11E2  3000               	movlw	0
  9729     11E3  00C5               	movwf	___fldiv@b+3
  9730     11E4  3000               	movlw	0
  9731     11E5  00C4               	movwf	___fldiv@b+2
  9732     11E6  3000               	movlw	0
  9733     11E7  00C3               	movwf	___fldiv@b+1
  9734     11E8  3000               	movlw	0
  9735     11E9  00C2               	movwf	___fldiv@b
  9736     11EA                     l3762:
  9737     11EA  17C4               	bsf	___fldiv@b+2,7
  9738     11EB                     l3764:
  9739     11EB  01C5               	clrf	___fldiv@b+3
  9740     11EC  29F5               	goto	l3768
  9741     11ED                     l3766:
  9742     11ED  3000               	movlw	0
  9743     11EE  00C5               	movwf	___fldiv@b+3
  9744     11EF  3000               	movlw	0
  9745     11F0  00C4               	movwf	___fldiv@b+2
  9746     11F1  3000               	movlw	0
  9747     11F2  00C3               	movwf	___fldiv@b+1
  9748     11F3  3000               	movlw	0
  9749     11F4  00C2               	movwf	___fldiv@b
  9750     11F5                     l3768:
  9751     11F5  0841               	movf	___fldiv@a+3,w
  9752     11F6  3980               	andlw	128
  9753     11F7  00C6               	movwf	??___fldiv
  9754     11F8  0846               	movf	??___fldiv,w
  9755     11F9  06CF               	xorwf	___fldiv@sign,f
  9756     11FA                     l3770:
  9757     11FA  0841               	movf	___fldiv@a+3,w
  9758     11FB  00C6               	movwf	??___fldiv
  9759     11FC  0746               	addwf	??___fldiv,w
  9760     11FD  00D7               	movwf	___fldiv@aexp
  9761     11FE                     l3772:
  9762     11FE  1FC0               	btfss	___fldiv@a+2,7
  9763     11FF  2A01               	goto	u6191
  9764     1200  2A02               	goto	u6190
  9765     1201                     u6191:
  9766     1201  2A03               	goto	l3776
  9767     1202                     u6190:
  9768     1202                     l3774:
  9769     1202  1457               	bsf	___fldiv@aexp,0
  9770     1203                     l3776:
  9771     1203  0857               	movf	___fldiv@aexp,w
  9772     1204  1903               	btfsc	3,2
  9773     1205  2A07               	goto	u6201
  9774     1206  2A08               	goto	u6200
  9775     1207                     u6201:
  9776     1207  2A18               	goto	l3786
  9777     1208                     u6200:
  9778     1208                     l3778:
  9779     1208  0A57               	incf	___fldiv@aexp,w
  9780     1209  1D03               	btfss	3,2
  9781     120A  2A0C               	goto	u6211
  9782     120B  2A0D               	goto	u6210
  9783     120C                     u6211:
  9784     120C  2A15               	goto	l3782
  9785     120D                     u6210:
  9786     120D                     l3780:
  9787     120D  3000               	movlw	0
  9788     120E  00C1               	movwf	___fldiv@a+3
  9789     120F  3000               	movlw	0
  9790     1210  00C0               	movwf	___fldiv@a+2
  9791     1211  3000               	movlw	0
  9792     1212  00BF               	movwf	___fldiv@a+1
  9793     1213  3000               	movlw	0
  9794     1214  00BE               	movwf	___fldiv@a
  9795     1215                     l3782:
  9796     1215  17C0               	bsf	___fldiv@a+2,7
  9797     1216                     l3784:
  9798     1216  01C1               	clrf	___fldiv@a+3
  9799     1217  2A20               	goto	l802
  9800     1218                     l3786:
  9801     1218  3000               	movlw	0
  9802     1219  00C1               	movwf	___fldiv@a+3
  9803     121A  3000               	movlw	0
  9804     121B  00C0               	movwf	___fldiv@a+2
  9805     121C  3000               	movlw	0
  9806     121D  00BF               	movwf	___fldiv@a+1
  9807     121E  3000               	movlw	0
  9808     121F  00BE               	movwf	___fldiv@a
  9809     1220                     l802:
  9810     1220  0841               	movf	___fldiv@a+3,w
  9811     1221  0440               	iorwf	___fldiv@a+2,w
  9812     1222  043F               	iorwf	___fldiv@a+1,w
  9813     1223  043E               	iorwf	___fldiv@a,w
  9814     1224  1D03               	skipz
  9815     1225  2A27               	goto	u6221
  9816     1226  2A28               	goto	u6220
  9817     1227                     u6221:
  9818     1227  2A41               	goto	l3796
  9819     1228                     u6220:
  9820     1228                     l3788:
  9821     1228  3000               	movlw	0
  9822     1229  00C5               	movwf	___fldiv@b+3
  9823     122A  3000               	movlw	0
  9824     122B  00C4               	movwf	___fldiv@b+2
  9825     122C  3000               	movlw	0
  9826     122D  00C3               	movwf	___fldiv@b+1
  9827     122E  3000               	movlw	0
  9828     122F  00C2               	movwf	___fldiv@b
  9829     1230  3080               	movlw	128
  9830     1231  04C4               	iorwf	___fldiv@b+2,f
  9831     1232  307F               	movlw	127
  9832     1233  04C5               	iorwf	___fldiv@b+3,f
  9833     1234                     l3790:
  9834     1234  084F               	movf	___fldiv@sign,w
  9835     1235  00C6               	movwf	??___fldiv
  9836     1236  0846               	movf	??___fldiv,w
  9837     1237  04C5               	iorwf	___fldiv@b+3,f
  9838     1238                     l3792:
  9839     1238  0845               	movf	___fldiv@b+3,w
  9840     1239  00C1               	movwf	?___fldiv+3
  9841     123A  0844               	movf	___fldiv@b+2,w
  9842     123B  00C0               	movwf	?___fldiv+2
  9843     123C  0843               	movf	___fldiv@b+1,w
  9844     123D  00BF               	movwf	?___fldiv+1
  9845     123E  0842               	movf	___fldiv@b,w
  9846     123F  00BE               	movwf	?___fldiv
  9847     1240  2B9C               	goto	l804
  9848     1241                     l3796:
  9849     1241  0856               	movf	___fldiv@bexp,w
  9850     1242  1D03               	btfss	3,2
  9851     1243  2A45               	goto	u6231
  9852     1244  2A46               	goto	u6230
  9853     1245                     u6231:
  9854     1245  2A4F               	goto	l3802
  9855     1246                     u6230:
  9856     1246                     l3798:
  9857     1246  3000               	movlw	0
  9858     1247  00C1               	movwf	?___fldiv+3
  9859     1248  3000               	movlw	0
  9860     1249  00C0               	movwf	?___fldiv+2
  9861     124A  3000               	movlw	0
  9862     124B  00BF               	movwf	?___fldiv+1
  9863     124C  3000               	movlw	0
  9864     124D  00BE               	movwf	?___fldiv
  9865     124E  2B9C               	goto	l804
  9866     124F                     l3802:
  9867     124F  0856               	movf	___fldiv@bexp,w
  9868     1250  00C6               	movwf	??___fldiv
  9869     1251  01C7               	clrf	??___fldiv+1
  9870     1252  0847               	movf	??___fldiv+1,w
  9871     1253  00C9               	movwf	??___fldiv+3
  9872     1254  0857               	movf	___fldiv@aexp,w
  9873     1255  0246               	subwf	??___fldiv,w
  9874     1256  00C8               	movwf	??___fldiv+2
  9875     1257  1C03               	skipc
  9876     1258  03C9               	decf	??___fldiv+3,f
  9877     1259  0848               	movf	??___fldiv+2,w
  9878     125A  3E7F               	addlw	127
  9879     125B  00D0               	movwf	___fldiv@new_exp
  9880     125C  0849               	movf	??___fldiv+3,w
  9881     125D  1803               	skipnc
  9882     125E  3E01               	addlw	1
  9883     125F  3E00               	addlw	0
  9884     1260  00D1               	movwf	___fldiv@new_exp+1
  9885     1261                     l3804:
  9886     1261  0845               	movf	___fldiv@b+3,w
  9887     1262  00CE               	movwf	___fldiv@rem+3
  9888     1263  0844               	movf	___fldiv@b+2,w
  9889     1264  00CD               	movwf	___fldiv@rem+2
  9890     1265  0843               	movf	___fldiv@b+1,w
  9891     1266  00CC               	movwf	___fldiv@rem+1
  9892     1267  0842               	movf	___fldiv@b,w
  9893     1268  00CB               	movwf	___fldiv@rem
  9894     1269                     l3806:
  9895     1269  3000               	movlw	0
  9896     126A  00C5               	movwf	___fldiv@b+3
  9897     126B  3000               	movlw	0
  9898     126C  00C4               	movwf	___fldiv@b+2
  9899     126D  3000               	movlw	0
  9900     126E  00C3               	movwf	___fldiv@b+1
  9901     126F  3000               	movlw	0
  9902     1270  00C2               	movwf	___fldiv@b
  9903     1271                     l3808:
  9904     1271  3000               	movlw	0
  9905     1272  00D5               	movwf	___fldiv@grs+3
  9906     1273  3000               	movlw	0
  9907     1274  00D4               	movwf	___fldiv@grs+2
  9908     1275  3000               	movlw	0
  9909     1276  00D3               	movwf	___fldiv@grs+1
  9910     1277  3000               	movlw	0
  9911     1278  00D2               	movwf	___fldiv@grs
  9912     1279                     l3810:
  9913     1279  01D7               	clrf	___fldiv@aexp
  9914     127A  2AC5               	goto	l3830
  9915     127B                     l3812:
  9916     127B  0857               	movf	___fldiv@aexp,w
  9917     127C  1903               	btfsc	3,2
  9918     127D  2A7F               	goto	u6241
  9919     127E  2A80               	goto	u6240
  9920     127F                     u6241:
  9921     127F  2AA0               	goto	l3822
  9922     1280                     u6240:
  9923     1280                     l3814:
  9924     1280  3001               	movlw	1
  9925     1281  00C6               	movwf	??___fldiv
  9926     1282                     u6255:
  9927     1282  1003               	clrc
  9928     1283  0DCB               	rlf	___fldiv@rem,f
  9929     1284  0DCC               	rlf	___fldiv@rem+1,f
  9930     1285  0DCD               	rlf	___fldiv@rem+2,f
  9931     1286  0DCE               	rlf	___fldiv@rem+3,f
  9932     1287  0BC6               	decfsz	??___fldiv,f
  9933     1288  2A82               	goto	u6255
  9934     1289  3001               	movlw	1
  9935     128A  00C6               	movwf	??___fldiv
  9936     128B                     u6265:
  9937     128B  1003               	clrc
  9938     128C  0DC2               	rlf	___fldiv@b,f
  9939     128D  0DC3               	rlf	___fldiv@b+1,f
  9940     128E  0DC4               	rlf	___fldiv@b+2,f
  9941     128F  0DC5               	rlf	___fldiv@b+3,f
  9942     1290  0BC6               	decfsz	??___fldiv,f
  9943     1291  2A8B               	goto	u6265
  9944     1292                     l3816:
  9945     1292  1FD5               	btfss	___fldiv@grs+3,7
  9946     1293  2A95               	goto	u6271
  9947     1294  2A96               	goto	u6270
  9948     1295                     u6271:
  9949     1295  2A97               	goto	l3820
  9950     1296                     u6270:
  9951     1296                     l3818:
  9952     1296  1442               	bsf	___fldiv@b,0
  9953     1297                     l3820:
  9954     1297  3001               	movlw	1
  9955     1298  00C6               	movwf	??___fldiv
  9956     1299                     u6285:
  9957     1299  1003               	clrc
  9958     129A  0DD2               	rlf	___fldiv@grs,f
  9959     129B  0DD3               	rlf	___fldiv@grs+1,f
  9960     129C  0DD4               	rlf	___fldiv@grs+2,f
  9961     129D  0DD5               	rlf	___fldiv@grs+3,f
  9962     129E  0BC6               	decfsz	??___fldiv,f
  9963     129F  2A99               	goto	u6285
  9964     12A0                     l3822:
  9965     12A0  0841               	movf	___fldiv@a+3,w
  9966     12A1  024E               	subwf	___fldiv@rem+3,w
  9967     12A2  1D03               	skipz
  9968     12A3  2AAE               	goto	u6295
  9969     12A4  0840               	movf	___fldiv@a+2,w
  9970     12A5  024D               	subwf	___fldiv@rem+2,w
  9971     12A6  1D03               	skipz
  9972     12A7  2AAE               	goto	u6295
  9973     12A8  083F               	movf	___fldiv@a+1,w
  9974     12A9  024C               	subwf	___fldiv@rem+1,w
  9975     12AA  1D03               	skipz
  9976     12AB  2AAE               	goto	u6295
  9977     12AC  083E               	movf	___fldiv@a,w
  9978     12AD  024B               	subwf	___fldiv@rem,w
  9979     12AE                     u6295:
  9980     12AE  1C03               	skipc
  9981     12AF  2AB1               	goto	u6291
  9982     12B0  2AB2               	goto	u6290
  9983     12B1                     u6291:
  9984     12B1  2AC1               	goto	l3828
  9985     12B2                     u6290:
  9986     12B2                     l3824:
  9987     12B2  1755               	bsf	___fldiv@grs+3,6
  9988     12B3                     l3826:
  9989     12B3  083E               	movf	___fldiv@a,w
  9990     12B4  02CB               	subwf	___fldiv@rem,f
  9991     12B5  083F               	movf	___fldiv@a+1,w
  9992     12B6  1C03               	skipc
  9993     12B7  0F3F               	incfsz	___fldiv@a+1,w
  9994     12B8  02CC               	subwf	___fldiv@rem+1,f
  9995     12B9  0840               	movf	___fldiv@a+2,w
  9996     12BA  1C03               	skipc
  9997     12BB  0F40               	incfsz	___fldiv@a+2,w
  9998     12BC  02CD               	subwf	___fldiv@rem+2,f
  9999     12BD  0841               	movf	___fldiv@a+3,w
 10000     12BE  1C03               	skipc
 10001     12BF  0F41               	incfsz	___fldiv@a+3,w
 10002     12C0  02CE               	subwf	___fldiv@rem+3,f
 10003     12C1                     l3828:
 10004     12C1  3001               	movlw	1
 10005     12C2  00C6               	movwf	??___fldiv
 10006     12C3  0846               	movf	??___fldiv,w
 10007     12C4  07D7               	addwf	___fldiv@aexp,f
 10008     12C5                     l3830:
 10009     12C5  301A               	movlw	26
 10010     12C6  0257               	subwf	___fldiv@aexp,w
 10011     12C7  1C03               	skipc
 10012     12C8  2ACA               	goto	u6301
 10013     12C9  2ACB               	goto	u6300
 10014     12CA                     u6301:
 10015     12CA  2A7B               	goto	l3812
 10016     12CB                     u6300:
 10017     12CB                     l3832:
 10018     12CB  084E               	movf	___fldiv@rem+3,w
 10019     12CC  044D               	iorwf	___fldiv@rem+2,w
 10020     12CD  044C               	iorwf	___fldiv@rem+1,w
 10021     12CE  044B               	iorwf	___fldiv@rem,w
 10022     12CF  1903               	skipnz
 10023     12D0  2AD2               	goto	u6311
 10024     12D1  2AD3               	goto	u6310
 10025     12D2                     u6311:
 10026     12D2  2AF2               	goto	l3846
 10027     12D3                     u6310:
 10028     12D3                     l3834:
 10029     12D3  1452               	bsf	___fldiv@grs,0
 10030     12D4  2AF2               	goto	l3846
 10031     12D5                     l3836:
 10032     12D5  3001               	movlw	1
 10033     12D6  00C6               	movwf	??___fldiv
 10034     12D7                     u6325:
 10035     12D7  1003               	clrc
 10036     12D8  0DC2               	rlf	___fldiv@b,f
 10037     12D9  0DC3               	rlf	___fldiv@b+1,f
 10038     12DA  0DC4               	rlf	___fldiv@b+2,f
 10039     12DB  0DC5               	rlf	___fldiv@b+3,f
 10040     12DC  0BC6               	decfsz	??___fldiv,f
 10041     12DD  2AD7               	goto	u6325
 10042     12DE                     l3838:
 10043     12DE  1FD5               	btfss	___fldiv@grs+3,7
 10044     12DF  2AE1               	goto	u6331
 10045     12E0  2AE2               	goto	u6330
 10046     12E1                     u6331:
 10047     12E1  2AE3               	goto	l3842
 10048     12E2                     u6330:
 10049     12E2                     l3840:
 10050     12E2  1442               	bsf	___fldiv@b,0
 10051     12E3                     l3842:
 10052     12E3  3001               	movlw	1
 10053     12E4  00C6               	movwf	??___fldiv
 10054     12E5                     u6345:
 10055     12E5  1003               	clrc
 10056     12E6  0DD2               	rlf	___fldiv@grs,f
 10057     12E7  0DD3               	rlf	___fldiv@grs+1,f
 10058     12E8  0DD4               	rlf	___fldiv@grs+2,f
 10059     12E9  0DD5               	rlf	___fldiv@grs+3,f
 10060     12EA  0BC6               	decfsz	??___fldiv,f
 10061     12EB  2AE5               	goto	u6345
 10062     12EC                     l3844:
 10063     12EC  30FF               	movlw	255
 10064     12ED  07D0               	addwf	___fldiv@new_exp,f
 10065     12EE  1803               	skipnc
 10066     12EF  0AD1               	incf	___fldiv@new_exp+1,f
 10067     12F0  30FF               	movlw	255
 10068     12F1  07D1               	addwf	___fldiv@new_exp+1,f
 10069     12F2                     l3846:
 10070     12F2  1FC4               	btfss	___fldiv@b+2,7
 10071     12F3  2AF5               	goto	u6351
 10072     12F4  2AF6               	goto	u6350
 10073     12F5                     u6351:
 10074     12F5  2AD5               	goto	l3836
 10075     12F6                     u6350:
 10076     12F6                     l3848:
 10077     12F6  01D7               	clrf	___fldiv@aexp
 10078     12F7                     l3850:
 10079     12F7  1FD5               	btfss	___fldiv@grs+3,7
 10080     12F8  2AFA               	goto	u6361
 10081     12F9  2AFB               	goto	u6360
 10082     12FA                     u6361:
 10083     12FA  2B17               	goto	l3858
 10084     12FB                     u6360:
 10085     12FB                     l3852:
 10086     12FB  30FF               	movlw	255
 10087     12FC  0552               	andwf	___fldiv@grs,w
 10088     12FD  00C6               	movwf	??___fldiv
 10089     12FE  30FF               	movlw	255
 10090     12FF  0553               	andwf	___fldiv@grs+1,w
 10091     1300  00C7               	movwf	??___fldiv+1
 10092     1301  30FF               	movlw	255
 10093     1302  0554               	andwf	___fldiv@grs+2,w
 10094     1303  00C8               	movwf	??___fldiv+2
 10095     1304  307F               	movlw	127
 10096     1305  0555               	andwf	___fldiv@grs+3,w
 10097     1306  00C9               	movwf	??___fldiv+3
 10098     1307  0849               	movf	??___fldiv+3,w
 10099     1308  0448               	iorwf	??___fldiv+2,w
 10100     1309  0447               	iorwf	??___fldiv+1,w
 10101     130A  0446               	iorwf	??___fldiv,w
 10102     130B  1903               	skipnz
 10103     130C  2B0E               	goto	u6371
 10104     130D  2B0F               	goto	u6370
 10105     130E                     u6371:
 10106     130E  2B12               	goto	l818
 10107     130F                     u6370:
 10108     130F                     l3854:
 10109     130F  01D7               	clrf	___fldiv@aexp
 10110     1310  0AD7               	incf	___fldiv@aexp,f
 10111     1311  2B17               	goto	l3858
 10112     1312                     l818:
 10113     1312  1C42               	btfss	___fldiv@b,0
 10114     1313  2B15               	goto	u6381
 10115     1314  2B16               	goto	u6380
 10116     1315                     u6381:
 10117     1315  2B17               	goto	l3858
 10118     1316                     u6380:
 10119     1316  2B0F               	goto	l3854
 10120     1317                     l3858:
 10121     1317  0857               	movf	___fldiv@aexp,w
 10122     1318  1903               	btfsc	3,2
 10123     1319  2B1B               	goto	u6391
 10124     131A  2B1C               	goto	u6390
 10125     131B                     u6391:
 10126     131B  2B4D               	goto	l3868
 10127     131C                     u6390:
 10128     131C                     l3860:
 10129     131C  3001               	movlw	1
 10130     131D  07C2               	addwf	___fldiv@b,f
 10131     131E  3000               	movlw	0
 10132     131F  1803               	skipnc
 10133     1320  3001               	movlw	1
 10134     1321  07C3               	addwf	___fldiv@b+1,f
 10135     1322  3000               	movlw	0
 10136     1323  1803               	skipnc
 10137     1324  3001               	movlw	1
 10138     1325  07C4               	addwf	___fldiv@b+2,f
 10139     1326  3000               	movlw	0
 10140     1327  1803               	skipnc
 10141     1328  3001               	movlw	1
 10142     1329  07C5               	addwf	___fldiv@b+3,f
 10143     132A                     l3862:
 10144     132A  1C45               	btfss	___fldiv@b+3,0
 10145     132B  2B2D               	goto	u6401
 10146     132C  2B2E               	goto	u6400
 10147     132D                     u6401:
 10148     132D  2B4D               	goto	l3868
 10149     132E                     u6400:
 10150     132E                     l3864:
 10151     132E  0842               	movf	___fldiv@b,w
 10152     132F  00C6               	movwf	??___fldiv
 10153     1330  0843               	movf	___fldiv@b+1,w
 10154     1331  00C7               	movwf	??___fldiv+1
 10155     1332  0844               	movf	___fldiv@b+2,w
 10156     1333  00C8               	movwf	??___fldiv+2
 10157     1334  0845               	movf	___fldiv@b+3,w
 10158     1335  00C9               	movwf	??___fldiv+3
 10159     1336  3001               	movlw	1
 10160     1337  00CA               	movwf	??___fldiv+4
 10161     1338                     u6415:
 10162     1338  0D49               	rlf	??___fldiv+3,w
 10163     1339  0CC9               	rrf	??___fldiv+3,f
 10164     133A  0CC8               	rrf	??___fldiv+2,f
 10165     133B  0CC7               	rrf	??___fldiv+1,f
 10166     133C  0CC6               	rrf	??___fldiv,f
 10167     133D                     u6410:
 10168     133D  0BCA               	decfsz	??___fldiv+4,f
 10169     133E  2B38               	goto	u6415
 10170     133F  0849               	movf	??___fldiv+3,w
 10171     1340  00C5               	movwf	___fldiv@b+3
 10172     1341  0848               	movf	??___fldiv+2,w
 10173     1342  00C4               	movwf	___fldiv@b+2
 10174     1343  0847               	movf	??___fldiv+1,w
 10175     1344  00C3               	movwf	___fldiv@b+1
 10176     1345  0846               	movf	??___fldiv,w
 10177     1346  00C2               	movwf	___fldiv@b
 10178     1347                     l3866:
 10179     1347  3001               	movlw	1
 10180     1348  07D0               	addwf	___fldiv@new_exp,f
 10181     1349  1803               	skipnc
 10182     134A  0AD1               	incf	___fldiv@new_exp+1,f
 10183     134B  3000               	movlw	0
 10184     134C  07D1               	addwf	___fldiv@new_exp+1,f
 10185     134D                     l3868:
 10186     134D  0851               	movf	___fldiv@new_exp+1,w
 10187     134E  3A80               	xorlw	128
 10188     134F  00FF               	movwf	btemp+1
 10189     1350  3080               	movlw	128
 10190     1351  027F               	subwf	btemp+1,w
 10191     1352  1D03               	skipz
 10192     1353  2B56               	goto	u6425
 10193     1354  30FF               	movlw	255
 10194     1355  0250               	subwf	___fldiv@new_exp,w
 10195     1356                     u6425:
 10196     1356  1C03               	skipc
 10197     1357  2B59               	goto	u6421
 10198     1358  2B5A               	goto	u6420
 10199     1359                     u6421:
 10200     1359  2B68               	goto	l3872
 10201     135A                     u6420:
 10202     135A                     l3870:
 10203     135A  30FF               	movlw	255
 10204     135B  1283               	bcf	3,5	;RP0=0, select bank0
 10205     135C  1303               	bcf	3,6	;RP1=0, select bank0
 10206     135D  00D0               	movwf	___fldiv@new_exp
 10207     135E  3000               	movlw	0
 10208     135F  00D1               	movwf	___fldiv@new_exp+1
 10209     1360  3000               	movlw	0
 10210     1361  00C5               	movwf	___fldiv@b+3
 10211     1362  3000               	movlw	0
 10212     1363  00C4               	movwf	___fldiv@b+2
 10213     1364  3000               	movlw	0
 10214     1365  00C3               	movwf	___fldiv@b+1
 10215     1366  3000               	movlw	0
 10216     1367  00C2               	movwf	___fldiv@b
 10217     1368                     l3872:
 10218     1368  1283               	bcf	3,5	;RP0=0, select bank0
 10219     1369  1303               	bcf	3,6	;RP1=0, select bank0
 10220     136A  0851               	movf	___fldiv@new_exp+1,w
 10221     136B  3A80               	xorlw	128
 10222     136C  00FF               	movwf	btemp+1
 10223     136D  3080               	movlw	128
 10224     136E  027F               	subwf	btemp+1,w
 10225     136F  1D03               	skipz
 10226     1370  2B73               	goto	u6435
 10227     1371  3001               	movlw	1
 10228     1372  0250               	subwf	___fldiv@new_exp,w
 10229     1373                     u6435:
 10230     1373  1803               	skipnc
 10231     1374  2B76               	goto	u6431
 10232     1375  2B77               	goto	u6430
 10233     1376                     u6431:
 10234     1376  2B84               	goto	l824
 10235     1377                     u6430:
 10236     1377                     l3874:
 10237     1377  1283               	bcf	3,5	;RP0=0, select bank0
 10238     1378  1303               	bcf	3,6	;RP1=0, select bank0
 10239     1379  01D0               	clrf	___fldiv@new_exp
 10240     137A  01D1               	clrf	___fldiv@new_exp+1
 10241     137B                     l3876:
 10242     137B  3000               	movlw	0
 10243     137C  00C5               	movwf	___fldiv@b+3
 10244     137D  3000               	movlw	0
 10245     137E  00C4               	movwf	___fldiv@b+2
 10246     137F  3000               	movlw	0
 10247     1380  00C3               	movwf	___fldiv@b+1
 10248     1381  3000               	movlw	0
 10249     1382  00C2               	movwf	___fldiv@b
 10250     1383                     l3878:
 10251     1383  01CF               	clrf	___fldiv@sign
 10252     1384                     l824:
 10253     1384  1283               	bcf	3,5	;RP0=0, select bank0
 10254     1385  1303               	bcf	3,6	;RP1=0, select bank0
 10255     1386  0850               	movf	___fldiv@new_exp,w
 10256     1387  00D6               	movwf	___fldiv@bexp
 10257     1388                     l3880:
 10258     1388  1C56               	btfss	___fldiv@bexp,0
 10259     1389  2B8B               	goto	u6441
 10260     138A  2B8C               	goto	u6440
 10261     138B                     u6441:
 10262     138B  2B8E               	goto	l3884
 10263     138C                     u6440:
 10264     138C                     l3882:
 10265     138C  17C4               	bsf	___fldiv@b+2,7
 10266     138D  2B92               	goto	l826
 10267     138E                     l3884:
 10268     138E  307F               	movlw	127
 10269     138F  00C6               	movwf	??___fldiv
 10270     1390  0846               	movf	??___fldiv,w
 10271     1391  05C4               	andwf	___fldiv@b+2,f
 10272     1392                     l826:
 10273     1392  0856               	movf	___fldiv@bexp,w
 10274     1393  00C6               	movwf	??___fldiv
 10275     1394  1003               	clrc
 10276     1395  0C46               	rrf	??___fldiv,w
 10277     1396  00C5               	movwf	___fldiv@b+3
 10278     1397  084F               	movf	___fldiv@sign,w
 10279     1398  00C6               	movwf	??___fldiv
 10280     1399  0846               	movf	??___fldiv,w
 10281     139A  04C5               	iorwf	___fldiv@b+3,f
 10282     139B  2A38               	goto	l3792
 10283     139C                     l804:
 10284     139C  0008               	return
 10285     139D                     __end_of___fldiv:
 10286                           
 10287                           	psect	text27
 10288     1C9F                     __ptext27:	
 10289 ;; *************** function _Lcd_Write_String *****************
 10290 ;; Defined at:
 10291 ;;		line 98 in file "LCD.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;  a               2    5[COMMON] PTR unsigned char 
 10294 ;;		 -> valADC(3), STR_1(5), 
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;  i               2   10[COMMON] int 
 10297 ;; Return value:  Size  Location     Type
 10298 ;;                  1    wreg      void 
 10299 ;; Registers used:
 10300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10306 ;;      Params:         2       0       0       0       0
 10307 ;;      Locals:         2       0       0       0       0
 10308 ;;      Temps:          3       0       0       0       0
 10309 ;;      Totals:         7       0       0       0       0
 10310 ;;Total ram usage:        7 bytes
 10311 ;; Hardware stack levels used: 1
 10312 ;; Hardware stack levels required when called: 2
 10313 ;; This function calls:
 10314 ;;		_Lcd_Write_Char
 10315 ;; This function is called by:
 10316 ;;		_main
 10317 ;; This function uses a non-reentrant model
 10318 ;;
 10319                           
 10320     1C9F                     _Lcd_Write_String:	
 10321                           ;psect for function _Lcd_Write_String
 10322                           
 10323     1C9F                     l3506:	
 10324                           ;incstack = 0
 10325                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10326                           
 10327                           
 10328                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
 10329     1C9F  01FA               	clrf	Lcd_Write_String@i
 10330     1CA0  01FB               	clrf	Lcd_Write_String@i+1
 10331     1CA1  2CC4               	goto	l3512
 10332     1CA2                     l3508:
 10333                           
 10334                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
 10335     1CA2  087A               	movf	Lcd_Write_String@i,w
 10336     1CA3  0775               	addwf	Lcd_Write_String@a,w
 10337     1CA4  00F8               	movwf	??_Lcd_Write_String+1
 10338     1CA5  0876               	movf	Lcd_Write_String@a+1,w
 10339     1CA6  00F7               	movwf	??_Lcd_Write_String
 10340     1CA7  1803               	skipnc
 10341     1CA8  0AF7               	incf	??_Lcd_Write_String,f
 10342     1CA9  1FFA               	btfss	Lcd_Write_String@i,7
 10343     1CAA  2CAC               	goto	u5770
 10344     1CAB  03F7               	decf	??_Lcd_Write_String,f
 10345     1CAC                     u5770:
 10346     1CAC  0877               	movf	??_Lcd_Write_String,w
 10347     1CAD  00F9               	movwf	??_Lcd_Write_String+2
 10348     1CAE  0879               	movf	??_Lcd_Write_String+2,w
 10349     1CAF  1283               	bcf	3,5	;RP0=0, select bank0
 10350     1CB0  1303               	bcf	3,6	;RP1=0, select bank0
 10351     1CB1  00FF               	movwf	btemp+1
 10352     1CB2  0878               	movf	??_Lcd_Write_String+1,w
 10353     1CB3  0084               	movwf	4
 10354     1CB4  160A  118A  2000  160A  158A  	fcall	stringtab
 10355     1CB9  160A  158A  23FA  160A  158A  	fcall	_Lcd_Write_Char
 10356     1CBE                     l3510:
 10357     1CBE  3001               	movlw	1
 10358     1CBF  07FA               	addwf	Lcd_Write_String@i,f
 10359     1CC0  1803               	skipnc
 10360     1CC1  0AFB               	incf	Lcd_Write_String@i+1,f
 10361     1CC2  3000               	movlw	0
 10362     1CC3  07FB               	addwf	Lcd_Write_String@i+1,f
 10363     1CC4                     l3512:
 10364     1CC4  087A               	movf	Lcd_Write_String@i,w
 10365     1CC5  0775               	addwf	Lcd_Write_String@a,w
 10366     1CC6  00F8               	movwf	??_Lcd_Write_String+1
 10367     1CC7  0876               	movf	Lcd_Write_String@a+1,w
 10368     1CC8  00F7               	movwf	??_Lcd_Write_String
 10369     1CC9  1803               	skipnc
 10370     1CCA  0AF7               	incf	??_Lcd_Write_String,f
 10371     1CCB  1FFA               	btfss	Lcd_Write_String@i,7
 10372     1CCC  2CCE               	goto	u5780
 10373     1CCD  03F7               	decf	??_Lcd_Write_String,f
 10374     1CCE                     u5780:
 10375     1CCE  0877               	movf	??_Lcd_Write_String,w
 10376     1CCF  00F9               	movwf	??_Lcd_Write_String+2
 10377     1CD0  0879               	movf	??_Lcd_Write_String+2,w
 10378     1CD1  1283               	bcf	3,5	;RP0=0, select bank0
 10379     1CD2  1303               	bcf	3,6	;RP1=0, select bank0
 10380     1CD3  00FF               	movwf	btemp+1
 10381     1CD4  0878               	movf	??_Lcd_Write_String+1,w
 10382     1CD5  0084               	movwf	4
 10383     1CD6  160A  118A  2000  160A  158A  	fcall	stringtab
 10384     1CDB  3A00               	xorlw	0
 10385     1CDC  1D03               	skipz
 10386     1CDD  2CDF               	goto	u5791
 10387     1CDE  2CE0               	goto	u5790
 10388     1CDF                     u5791:
 10389     1CDF  2CA2               	goto	l3508
 10390     1CE0                     u5790:
 10391     1CE0                     l108:
 10392     1CE0  0008               	return
 10393     1CE1                     __end_of_Lcd_Write_String:
 10394                           
 10395                           	psect	text28
 10396     1BFA                     __ptext28:	
 10397 ;; *************** function _Lcd_Write_Char *****************
 10398 ;; Defined at:
 10399 ;;		line 83 in file "LCD.c"
 10400 ;; Parameters:    Size  Location     Type
 10401 ;;  a               1    wreg     unsigned char 
 10402 ;; Auto vars:     Size  Location     Type
 10403 ;;  a               1    4[COMMON] unsigned char 
 10404 ;;  y               1    3[COMMON] unsigned char 
 10405 ;;  temp            1    2[COMMON] unsigned char 
 10406 ;; Return value:  Size  Location     Type
 10407 ;;                  1    wreg      void 
 10408 ;; Registers used:
 10409 ;;		wreg, status,2, status,0, pclath, cstack
 10410 ;; Tracked objects:
 10411 ;;		On entry : 0/0
 10412 ;;		On exit  : 0/0
 10413 ;;		Unchanged: 0/0
 10414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10415 ;;      Params:         0       0       0       0       0
 10416 ;;      Locals:         3       0       0       0       0
 10417 ;;      Temps:          1       0       0       0       0
 10418 ;;      Totals:         4       0       0       0       0
 10419 ;;Total ram usage:        4 bytes
 10420 ;; Hardware stack levels used: 1
 10421 ;; Hardware stack levels required when called: 1
 10422 ;; This function calls:
 10423 ;;		_Lcd_Port
 10424 ;; This function is called by:
 10425 ;;		_Lcd_Write_String
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429     1BFA                     _Lcd_Write_Char:	
 10430                           ;psect for function _Lcd_Write_Char
 10431                           
 10432                           
 10433                           ;incstack = 0
 10434                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10435                           ;Lcd_Write_Char@a stored from wreg
 10436     1BFA  00F4               	movwf	Lcd_Write_Char@a
 10437     1BFB                     l3092:
 10438                           
 10439                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
 10440     1BFB  0874               	movf	Lcd_Write_Char@a,w
 10441     1BFC  390F               	andlw	15
 10442     1BFD  00F2               	movwf	Lcd_Write_Char@temp
 10443                           
 10444                           ;LCD.c: 86:     y = a & 0xF0;
 10445     1BFE  0874               	movf	Lcd_Write_Char@a,w
 10446     1BFF  39F0               	andlw	240
 10447     1C00  00F3               	movwf	Lcd_Write_Char@y
 10448     1C01                     l3094:
 10449                           
 10450                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
 10451     1C01  1283               	bcf	3,5	;RP0=0, select bank0
 10452     1C02  1303               	bcf	3,6	;RP1=0, select bank0
 10453     1C03  1508               	bsf	8,2	;volatile
 10454     1C04                     l3096:
 10455                           
 10456                           ;LCD.c: 88:     Lcd_Port(y >> 4);
 10457     1C04  0873               	movf	Lcd_Write_Char@y,w
 10458     1C05  00F1               	movwf	??_Lcd_Write_Char
 10459     1C06  3004               	movlw	4
 10460     1C07                     u4645:
 10461     1C07  1003               	clrc
 10462     1C08  0CF1               	rrf	??_Lcd_Write_Char,f
 10463     1C09  3EFF               	addlw	-1
 10464     1C0A  1D03               	skipz
 10465     1C0B  2C07               	goto	u4645
 10466     1C0C  0871               	movf	??_Lcd_Write_Char,w
 10467     1C0D  160A  158A  2316  160A  158A  	fcall	_Lcd_Port
 10468     1C12                     l3098:
 10469                           
 10470                           ;LCD.c: 89:     RD3 = 1;
 10471     1C12  1283               	bcf	3,5	;RP0=0, select bank0
 10472     1C13  1303               	bcf	3,6	;RP1=0, select bank0
 10473     1C14  1588               	bsf	8,3	;volatile
 10474     1C15                     l3100:
 10475                           
 10476                           ;LCD.c: 90:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 10477     1C15  300D               	movlw	13
 10478     1C16  00F1               	movwf	??_Lcd_Write_Char
 10479     1C17                     u6487:
 10480     1C17  0BF1               	decfsz	??_Lcd_Write_Char,f
 10481     1C18  2C17               	goto	u6487
 10482     1C19                     l3102:
 10483                           
 10484                           ;LCD.c: 91:     RD3 = 0;
 10485     1C19  1283               	bcf	3,5	;RP0=0, select bank0
 10486     1C1A  1303               	bcf	3,6	;RP1=0, select bank0
 10487     1C1B  1188               	bcf	8,3	;volatile
 10488     1C1C                     l3104:
 10489                           
 10490                           ;LCD.c: 92:     Lcd_Port(temp);
 10491     1C1C  0872               	movf	Lcd_Write_Char@temp,w
 10492     1C1D  160A  158A  2316  160A  158A  	fcall	_Lcd_Port
 10493     1C22                     l3106:
 10494                           
 10495                           ;LCD.c: 93:     RD3 = 1;
 10496     1C22  1283               	bcf	3,5	;RP0=0, select bank0
 10497     1C23  1303               	bcf	3,6	;RP1=0, select bank0
 10498     1C24  1588               	bsf	8,3	;volatile
 10499     1C25                     l3108:
 10500                           
 10501                           ;LCD.c: 94:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 10502     1C25  300D               	movlw	13
 10503     1C26  00F1               	movwf	??_Lcd_Write_Char
 10504     1C27                     u6497:
 10505     1C27  0BF1               	decfsz	??_Lcd_Write_Char,f
 10506     1C28  2C27               	goto	u6497
 10507     1C29                     l3110:
 10508                           
 10509                           ;LCD.c: 95:     RD3 = 0;
 10510     1C29  1283               	bcf	3,5	;RP0=0, select bank0
 10511     1C2A  1303               	bcf	3,6	;RP1=0, select bank0
 10512     1C2B  1188               	bcf	8,3	;volatile
 10513     1C2C                     l102:
 10514     1C2C  0008               	return
 10515     1C2D                     __end_of_Lcd_Write_Char:
 10516                           
 10517                           	psect	text29
 10518     1D25                     __ptext29:	
 10519 ;; *************** function _Lcd_Set_Cursor *****************
 10520 ;; Defined at:
 10521 ;;		line 48 in file "LCD.c"
 10522 ;; Parameters:    Size  Location     Type
 10523 ;;  a               1    wreg     unsigned char 
 10524 ;;  b               1    4[COMMON] unsigned char 
 10525 ;; Auto vars:     Size  Location     Type
 10526 ;;  a               1    6[COMMON] unsigned char 
 10527 ;;  temp            1    9[COMMON] unsigned char 
 10528 ;;  y               1    8[COMMON] unsigned char 
 10529 ;;  z               1    7[COMMON] unsigned char 
 10530 ;; Return value:  Size  Location     Type
 10531 ;;                  1    wreg      void 
 10532 ;; Registers used:
 10533 ;;		wreg, status,2, status,0, pclath, cstack
 10534 ;; Tracked objects:
 10535 ;;		On entry : 0/0
 10536 ;;		On exit  : 0/0
 10537 ;;		Unchanged: 0/0
 10538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10539 ;;      Params:         1       0       0       0       0
 10540 ;;      Locals:         4       0       0       0       0
 10541 ;;      Temps:          1       0       0       0       0
 10542 ;;      Totals:         6       0       0       0       0
 10543 ;;Total ram usage:        6 bytes
 10544 ;; Hardware stack levels used: 1
 10545 ;; Hardware stack levels required when called: 2
 10546 ;; This function calls:
 10547 ;;		_Lcd_Cmd
 10548 ;; This function is called by:
 10549 ;;		_main
 10550 ;; This function uses a non-reentrant model
 10551 ;;
 10552                           
 10553     1D25                     _Lcd_Set_Cursor:	
 10554                           ;psect for function _Lcd_Set_Cursor
 10555                           
 10556                           
 10557                           ;incstack = 0
 10558                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10559                           ;Lcd_Set_Cursor@a stored from wreg
 10560     1D25  00F6               	movwf	Lcd_Set_Cursor@a
 10561     1D26                     l3486:
 10562                           
 10563                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
 10564     1D26  0376               	decf	Lcd_Set_Cursor@a,w
 10565     1D27  1D03               	btfss	3,2
 10566     1D28  2D2A               	goto	u5731
 10567     1D29  2D2B               	goto	u5730
 10568     1D2A                     u5731:
 10569     1D2A  2D48               	goto	l3496
 10570     1D2B                     u5730:
 10571     1D2B                     l3488:
 10572                           
 10573                           ;LCD.c: 51:         temp = 0x80 + b - 1;
 10574     1D2B  0874               	movf	Lcd_Set_Cursor@b,w
 10575     1D2C  3E7F               	addlw	127
 10576     1D2D  00F9               	movwf	Lcd_Set_Cursor@temp
 10577                           
 10578                           ;LCD.c: 52:         z = temp >> 4;
 10579     1D2E  0879               	movf	Lcd_Set_Cursor@temp,w
 10580     1D2F  00F5               	movwf	??_Lcd_Set_Cursor
 10581     1D30  3004               	movlw	4
 10582     1D31                     u5745:
 10583     1D31  1003               	clrc
 10584     1D32  0CF5               	rrf	??_Lcd_Set_Cursor,f
 10585     1D33  3EFF               	addlw	-1
 10586     1D34  1D03               	skipz
 10587     1D35  2D31               	goto	u5745
 10588     1D36  0875               	movf	??_Lcd_Set_Cursor,w
 10589     1D37  00F7               	movwf	Lcd_Set_Cursor@z
 10590     1D38                     l3490:
 10591                           
 10592                           ;LCD.c: 53:         y = temp & 0x0F;
 10593     1D38  0879               	movf	Lcd_Set_Cursor@temp,w
 10594     1D39  390F               	andlw	15
 10595     1D3A  00F8               	movwf	Lcd_Set_Cursor@y
 10596     1D3B                     l3492:
 10597                           
 10598                           ;LCD.c: 54:         Lcd_Cmd(z);
 10599     1D3B  0877               	movf	Lcd_Set_Cursor@z,w
 10600     1D3C  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10601     1D41                     l3494:
 10602                           
 10603                           ;LCD.c: 55:         Lcd_Cmd(y);
 10604     1D41  0878               	movf	Lcd_Set_Cursor@y,w
 10605     1D42  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10606                           
 10607                           ;LCD.c: 56:     } else if (a == 2) {
 10608     1D47  2D6A               	goto	l96
 10609     1D48                     l3496:
 10610     1D48  3002               	movlw	2
 10611     1D49  0676               	xorwf	Lcd_Set_Cursor@a,w
 10612     1D4A  1D03               	btfss	3,2
 10613     1D4B  2D4D               	goto	u5751
 10614     1D4C  2D4E               	goto	u5750
 10615     1D4D                     u5751:
 10616     1D4D  2D6A               	goto	l96
 10617     1D4E                     u5750:
 10618     1D4E                     l3498:
 10619                           
 10620                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
 10621     1D4E  0874               	movf	Lcd_Set_Cursor@b,w
 10622     1D4F  3EBF               	addlw	191
 10623     1D50  00F9               	movwf	Lcd_Set_Cursor@temp
 10624                           
 10625                           ;LCD.c: 58:         z = temp >> 4;
 10626     1D51  0879               	movf	Lcd_Set_Cursor@temp,w
 10627     1D52  00F5               	movwf	??_Lcd_Set_Cursor
 10628     1D53  3004               	movlw	4
 10629     1D54                     u5765:
 10630     1D54  1003               	clrc
 10631     1D55  0CF5               	rrf	??_Lcd_Set_Cursor,f
 10632     1D56  3EFF               	addlw	-1
 10633     1D57  1D03               	skipz
 10634     1D58  2D54               	goto	u5765
 10635     1D59  0875               	movf	??_Lcd_Set_Cursor,w
 10636     1D5A  00F7               	movwf	Lcd_Set_Cursor@z
 10637     1D5B                     l3500:
 10638                           
 10639                           ;LCD.c: 59:         y = temp & 0x0F;
 10640     1D5B  0879               	movf	Lcd_Set_Cursor@temp,w
 10641     1D5C  390F               	andlw	15
 10642     1D5D  00F8               	movwf	Lcd_Set_Cursor@y
 10643     1D5E                     l3502:
 10644                           
 10645                           ;LCD.c: 60:         Lcd_Cmd(z);
 10646     1D5E  0877               	movf	Lcd_Set_Cursor@z,w
 10647     1D5F  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10648     1D64                     l3504:
 10649                           
 10650                           ;LCD.c: 61:         Lcd_Cmd(y);
 10651     1D64  0878               	movf	Lcd_Set_Cursor@y,w
 10652     1D65  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10653     1D6A                     l96:
 10654     1D6A  0008               	return
 10655     1D6B                     __end_of_Lcd_Set_Cursor:
 10656                           
 10657                           	psect	text30
 10658     1E66                     __ptext30:	
 10659 ;; *************** function _Lcd_Init *****************
 10660 ;; Defined at:
 10661 ;;		line 65 in file "LCD.c"
 10662 ;; Parameters:    Size  Location     Type
 10663 ;;		None
 10664 ;; Auto vars:     Size  Location     Type
 10665 ;;		None
 10666 ;; Return value:  Size  Location     Type
 10667 ;;                  1    wreg      void 
 10668 ;; Registers used:
 10669 ;;		wreg, status,2, status,0, pclath, cstack
 10670 ;; Tracked objects:
 10671 ;;		On entry : 0/0
 10672 ;;		On exit  : 0/0
 10673 ;;		Unchanged: 0/0
 10674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10675 ;;      Params:         0       0       0       0       0
 10676 ;;      Locals:         0       0       0       0       0
 10677 ;;      Temps:          2       0       0       0       0
 10678 ;;      Totals:         2       0       0       0       0
 10679 ;;Total ram usage:        2 bytes
 10680 ;; Hardware stack levels used: 1
 10681 ;; Hardware stack levels required when called: 2
 10682 ;; This function calls:
 10683 ;;		_Lcd_Cmd
 10684 ;;		_Lcd_Port
 10685 ;; This function is called by:
 10686 ;;		_main
 10687 ;; This function uses a non-reentrant model
 10688 ;;
 10689                           
 10690     1E66                     _Lcd_Init:	
 10691                           ;psect for function _Lcd_Init
 10692                           
 10693     1E66                     l3474:	
 10694                           ;incstack = 0
 10695                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10696                           
 10697                           
 10698                           ;LCD.c: 66:     Lcd_Port(0x00);
 10699     1E66  3000               	movlw	0
 10700     1E67  160A  158A  2316  160A  158A  	fcall	_Lcd_Port
 10701     1E6C                     l3476:
 10702                           
 10703                           ;LCD.c: 67:     _delay((unsigned long)((20)*(4000000/4000.0)));
 10704     1E6C  301A               	movlw	26
 10705     1E6D  00F5               	movwf	??_Lcd_Init+1
 10706     1E6E  30F8               	movlw	248
 10707     1E6F  00F4               	movwf	??_Lcd_Init
 10708     1E70                     u6507:
 10709     1E70  0BF4               	decfsz	??_Lcd_Init,f
 10710     1E71  2E70               	goto	u6507
 10711     1E72  0BF5               	decfsz	??_Lcd_Init+1,f
 10712     1E73  2E70               	goto	u6507
 10713     1E74  0000               	nop
 10714     1E75                     l3478:
 10715                           
 10716                           ;LCD.c: 68:     Lcd_Cmd(0x03);
 10717     1E75  3003               	movlw	3
 10718     1E76  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10719                           
 10720                           ;LCD.c: 69:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10721     1E7B  3007               	movlw	7
 10722     1E7C  00F5               	movwf	??_Lcd_Init+1
 10723     1E7D  307D               	movlw	125
 10724     1E7E  00F4               	movwf	??_Lcd_Init
 10725     1E7F                     u6517:
 10726     1E7F  0BF4               	decfsz	??_Lcd_Init,f
 10727     1E80  2E7F               	goto	u6517
 10728     1E81  0BF5               	decfsz	??_Lcd_Init+1,f
 10729     1E82  2E7F               	goto	u6517
 10730     1E83                     l3480:
 10731                           
 10732                           ;LCD.c: 70:     Lcd_Cmd(0x03);
 10733     1E83  3003               	movlw	3
 10734     1E84  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10735     1E89                     l3482:
 10736                           
 10737                           ;LCD.c: 71:     _delay((unsigned long)((11)*(4000000/4000.0)));
 10738     1E89  300F               	movlw	15
 10739     1E8A  00F5               	movwf	??_Lcd_Init+1
 10740     1E8B  3047               	movlw	71
 10741     1E8C  00F4               	movwf	??_Lcd_Init
 10742     1E8D                     u6527:
 10743     1E8D  0BF4               	decfsz	??_Lcd_Init,f
 10744     1E8E  2E8D               	goto	u6527
 10745     1E8F  0BF5               	decfsz	??_Lcd_Init+1,f
 10746     1E90  2E8D               	goto	u6527
 10747     1E91  2E92               	nop2
 10748                           
 10749                           ;LCD.c: 72:     Lcd_Cmd(0x03);
 10750     1E92  3003               	movlw	3
 10751     1E93  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10752                           
 10753                           ;LCD.c: 74:     Lcd_Cmd(0x02);
 10754     1E98  3002               	movlw	2
 10755     1E99  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10756                           
 10757                           ;LCD.c: 75:     Lcd_Cmd(0x02);
 10758     1E9E  3002               	movlw	2
 10759     1E9F  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10760                           
 10761                           ;LCD.c: 76:     Lcd_Cmd(0x08);
 10762     1EA4  3008               	movlw	8
 10763     1EA5  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10764                           
 10765                           ;LCD.c: 77:     Lcd_Cmd(0x00);
 10766     1EAA  3000               	movlw	0
 10767     1EAB  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10768                           
 10769                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
 10770     1EB0  300C               	movlw	12
 10771     1EB1  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10772                           
 10773                           ;LCD.c: 79:     Lcd_Cmd(0x00);
 10774     1EB6  3000               	movlw	0
 10775     1EB7  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10776                           
 10777                           ;LCD.c: 80:     Lcd_Cmd(0x06);
 10778     1EBC  3006               	movlw	6
 10779     1EBD  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10780     1EC2                     l99:
 10781     1EC2  0008               	return
 10782     1EC3                     __end_of_Lcd_Init:
 10783                           
 10784                           	psect	text31
 10785     1AF7                     __ptext31:	
 10786 ;; *************** function _Lcd_Clear *****************
 10787 ;; Defined at:
 10788 ;;		line 43 in file "LCD.c"
 10789 ;; Parameters:    Size  Location     Type
 10790 ;;		None
 10791 ;; Auto vars:     Size  Location     Type
 10792 ;;		None
 10793 ;; Return value:  Size  Location     Type
 10794 ;;                  1    wreg      void 
 10795 ;; Registers used:
 10796 ;;		wreg, status,2, status,0, pclath, cstack
 10797 ;; Tracked objects:
 10798 ;;		On entry : 0/0
 10799 ;;		On exit  : 0/0
 10800 ;;		Unchanged: 0/0
 10801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10802 ;;      Params:         0       0       0       0       0
 10803 ;;      Locals:         0       0       0       0       0
 10804 ;;      Temps:          0       0       0       0       0
 10805 ;;      Totals:         0       0       0       0       0
 10806 ;;Total ram usage:        0 bytes
 10807 ;; Hardware stack levels used: 1
 10808 ;; Hardware stack levels required when called: 2
 10809 ;; This function calls:
 10810 ;;		_Lcd_Cmd
 10811 ;; This function is called by:
 10812 ;;		_main
 10813 ;; This function uses a non-reentrant model
 10814 ;;
 10815                           
 10816     1AF7                     _Lcd_Clear:	
 10817                           ;psect for function _Lcd_Clear
 10818                           
 10819     1AF7                     l3484:	
 10820                           ;incstack = 0
 10821                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10822                           
 10823                           
 10824                           ;LCD.c: 44:     Lcd_Cmd(0);
 10825     1AF7  3000               	movlw	0
 10826     1AF8  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10827                           
 10828                           ;LCD.c: 45:     Lcd_Cmd(1);
 10829     1AFD  3001               	movlw	1
 10830     1AFE  120A  118A  200A  160A  158A  	fcall	_Lcd_Cmd
 10831     1B03                     l90:
 10832     1B03  0008               	return
 10833     1B04                     __end_of_Lcd_Clear:
 10834                           
 10835                           	psect	text32
 10836     000A                     __ptext32:	
 10837 ;; *************** function _Lcd_Cmd *****************
 10838 ;; Defined at:
 10839 ;;		line 35 in file "LCD.c"
 10840 ;; Parameters:    Size  Location     Type
 10841 ;;  a               1    wreg     unsigned char 
 10842 ;; Auto vars:     Size  Location     Type
 10843 ;;  a               1    3[COMMON] unsigned char 
 10844 ;; Return value:  Size  Location     Type
 10845 ;;                  1    wreg      void 
 10846 ;; Registers used:
 10847 ;;		wreg, status,2, status,0, pclath, cstack
 10848 ;; Tracked objects:
 10849 ;;		On entry : 0/0
 10850 ;;		On exit  : 0/0
 10851 ;;		Unchanged: 0/0
 10852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10853 ;;      Params:         0       0       0       0       0
 10854 ;;      Locals:         1       0       0       0       0
 10855 ;;      Temps:          2       0       0       0       0
 10856 ;;      Totals:         3       0       0       0       0
 10857 ;;Total ram usage:        3 bytes
 10858 ;; Hardware stack levels used: 1
 10859 ;; Hardware stack levels required when called: 1
 10860 ;; This function calls:
 10861 ;;		_Lcd_Port
 10862 ;; This function is called by:
 10863 ;;		_Lcd_Clear
 10864 ;;		_Lcd_Set_Cursor
 10865 ;;		_Lcd_Init
 10866 ;;		_Lcd_Shift_Right
 10867 ;;		_Lcd_Shift_Left
 10868 ;; This function uses a non-reentrant model
 10869 ;;
 10870                           
 10871     000A                     _Lcd_Cmd:	
 10872                           ;psect for function _Lcd_Cmd
 10873                           
 10874                           
 10875                           ;incstack = 0
 10876                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10877                           ;Lcd_Cmd@a stored from wreg
 10878     000A  00F3               	movwf	Lcd_Cmd@a
 10879     000B                     l3082:
 10880                           
 10881                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
 10882     000B  1283               	bcf	3,5	;RP0=0, select bank0
 10883     000C  1303               	bcf	3,6	;RP1=0, select bank0
 10884     000D  1108               	bcf	8,2	;volatile
 10885     000E                     l3084:
 10886                           
 10887                           ;LCD.c: 37:     Lcd_Port(a);
 10888     000E  0873               	movf	Lcd_Cmd@a,w
 10889     000F  160A  158A  2316  120A  118A  	fcall	_Lcd_Port
 10890     0014                     l3086:
 10891                           
 10892                           ;LCD.c: 38:     RD3 = 1;
 10893     0014  1283               	bcf	3,5	;RP0=0, select bank0
 10894     0015  1303               	bcf	3,6	;RP1=0, select bank0
 10895     0016  1588               	bsf	8,3	;volatile
 10896     0017                     l3088:
 10897                           
 10898                           ;LCD.c: 39:     _delay((unsigned long)((4)*(4000000/4000.0)));
 10899     0017  3006               	movlw	6
 10900     0018  00F2               	movwf	??_Lcd_Cmd+1
 10901     0019  3030               	movlw	48
 10902     001A  00F1               	movwf	??_Lcd_Cmd
 10903     001B                     u6537:
 10904     001B  0BF1               	decfsz	??_Lcd_Cmd,f
 10905     001C  281B               	goto	u6537
 10906     001D  0BF2               	decfsz	??_Lcd_Cmd+1,f
 10907     001E  281B               	goto	u6537
 10908     001F  0000               	nop
 10909     0020                     l3090:
 10910                           
 10911                           ;LCD.c: 40:     RD3 = 0;
 10912     0020  1283               	bcf	3,5	;RP0=0, select bank0
 10913     0021  1303               	bcf	3,6	;RP1=0, select bank0
 10914     0022  1188               	bcf	8,3	;volatile
 10915     0023                     l87:
 10916     0023  0008               	return
 10917     0024                     __end_of_Lcd_Cmd:
 10918                           
 10919                           	psect	text33
 10920     1B16                     __ptext33:	
 10921 ;; *************** function _Lcd_Port *****************
 10922 ;; Defined at:
 10923 ;;		line 13 in file "LCD.c"
 10924 ;; Parameters:    Size  Location     Type
 10925 ;;  a               1    wreg     unsigned char 
 10926 ;; Auto vars:     Size  Location     Type
 10927 ;;  a               1    0[COMMON] unsigned char 
 10928 ;; Return value:  Size  Location     Type
 10929 ;;                  1    wreg      void 
 10930 ;; Registers used:
 10931 ;;		wreg
 10932 ;; Tracked objects:
 10933 ;;		On entry : 0/0
 10934 ;;		On exit  : 0/0
 10935 ;;		Unchanged: 0/0
 10936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10937 ;;      Params:         0       0       0       0       0
 10938 ;;      Locals:         1       0       0       0       0
 10939 ;;      Temps:          0       0       0       0       0
 10940 ;;      Totals:         1       0       0       0       0
 10941 ;;Total ram usage:        1 bytes
 10942 ;; Hardware stack levels used: 1
 10943 ;; This function calls:
 10944 ;;		Nothing
 10945 ;; This function is called by:
 10946 ;;		_Lcd_Cmd
 10947 ;;		_Lcd_Init
 10948 ;;		_Lcd_Write_Char
 10949 ;; This function uses a non-reentrant model
 10950 ;;
 10951                           
 10952     1B16                     _Lcd_Port:	
 10953                           ;psect for function _Lcd_Port
 10954                           
 10955                           
 10956                           ;incstack = 0
 10957                           ; Regs used in _Lcd_Port: [wreg]
 10958                           ;Lcd_Port@a stored from wreg
 10959     1B16  00F0               	movwf	Lcd_Port@a
 10960     1B17                     l2572:
 10961                           
 10962                           ;LCD.c: 14:     if (a & 1)
 10963     1B17  1C70               	btfss	Lcd_Port@a,0
 10964     1B18  2B1A               	goto	u3371
 10965     1B19  2B1B               	goto	u3370
 10966     1B1A                     u3371:
 10967     1B1A  2B1F               	goto	l76
 10968     1B1B                     u3370:
 10969     1B1B                     l2574:
 10970                           
 10971                           ;LCD.c: 15:         RD4 = 1;
 10972     1B1B  1283               	bcf	3,5	;RP0=0, select bank0
 10973     1B1C  1303               	bcf	3,6	;RP1=0, select bank0
 10974     1B1D  1608               	bsf	8,4	;volatile
 10975     1B1E  2B22               	goto	l77
 10976     1B1F                     l76:	
 10977                           ;LCD.c: 16:     else
 10978                           
 10979                           
 10980                           ;LCD.c: 17:         RD4 = 0;
 10981     1B1F  1283               	bcf	3,5	;RP0=0, select bank0
 10982     1B20  1303               	bcf	3,6	;RP1=0, select bank0
 10983     1B21  1208               	bcf	8,4	;volatile
 10984     1B22                     l77:
 10985                           
 10986                           ;LCD.c: 19:     if (a & 2)
 10987     1B22  1CF0               	btfss	Lcd_Port@a,1
 10988     1B23  2B25               	goto	u3381
 10989     1B24  2B26               	goto	u3380
 10990     1B25                     u3381:
 10991     1B25  2B28               	goto	l78
 10992     1B26                     u3380:
 10993     1B26                     l2576:
 10994                           
 10995                           ;LCD.c: 20:         RD5 = 1;
 10996     1B26  1688               	bsf	8,5	;volatile
 10997     1B27  2B29               	goto	l79
 10998     1B28                     l78:	
 10999                           ;LCD.c: 21:     else
 11000                           
 11001                           
 11002                           ;LCD.c: 22:         RD5 = 0;
 11003     1B28  1288               	bcf	8,5	;volatile
 11004     1B29                     l79:
 11005                           
 11006                           ;LCD.c: 24:     if (a & 4)
 11007     1B29  1D70               	btfss	Lcd_Port@a,2
 11008     1B2A  2B2C               	goto	u3391
 11009     1B2B  2B2D               	goto	u3390
 11010     1B2C                     u3391:
 11011     1B2C  2B2F               	goto	l80
 11012     1B2D                     u3390:
 11013     1B2D                     l2578:
 11014                           
 11015                           ;LCD.c: 25:         RD6 = 1;
 11016     1B2D  1708               	bsf	8,6	;volatile
 11017     1B2E  2B30               	goto	l81
 11018     1B2F                     l80:	
 11019                           ;LCD.c: 26:     else
 11020                           
 11021                           
 11022                           ;LCD.c: 27:         RD6 = 0;
 11023     1B2F  1308               	bcf	8,6	;volatile
 11024     1B30                     l81:
 11025                           
 11026                           ;LCD.c: 29:     if (a & 8)
 11027     1B30  1DF0               	btfss	Lcd_Port@a,3
 11028     1B31  2B33               	goto	u3401
 11029     1B32  2B34               	goto	u3400
 11030     1B33                     u3401:
 11031     1B33  2B36               	goto	l82
 11032     1B34                     u3400:
 11033     1B34                     l2580:
 11034                           
 11035                           ;LCD.c: 30:         RD7 = 1;
 11036     1B34  1788               	bsf	8,7	;volatile
 11037     1B35  2B37               	goto	l84
 11038     1B36                     l82:	
 11039                           ;LCD.c: 31:     else
 11040                           
 11041                           
 11042                           ;LCD.c: 32:         RD7 = 0;
 11043     1B36  1388               	bcf	8,7	;volatile
 11044     1B37                     l84:
 11045     1B37  0008               	return
 11046     1B38                     __end_of_Lcd_Port:
 11047                           
 11048                           	psect	text34
 11049     1AD5                     __ptext34:	
 11050 ;; *************** function _I2C_Master_Write *****************
 11051 ;; Defined at:
 11052 ;;		line 65 in file "I2C.c"
 11053 ;; Parameters:    Size  Location     Type
 11054 ;;  d               2    0[COMMON] unsigned int 
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;		None
 11057 ;; Return value:  Size  Location     Type
 11058 ;;                  1    wreg      void 
 11059 ;; Registers used:
 11060 ;;		wreg, status,2, status,0, pclath, cstack
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/0
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11066 ;;      Params:         2       0       0       0       0
 11067 ;;      Locals:         0       0       0       0       0
 11068 ;;      Temps:          0       0       0       0       0
 11069 ;;      Totals:         2       0       0       0       0
 11070 ;;Total ram usage:        2 bytes
 11071 ;; Hardware stack levels used: 1
 11072 ;; Hardware stack levels required when called: 1
 11073 ;; This function calls:
 11074 ;;		_I2C_Master_Wait
 11075 ;; This function is called by:
 11076 ;;		_main
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080     1AD5                     _I2C_Master_Write:	
 11081                           ;psect for function _I2C_Master_Write
 11082                           
 11083     1AD5                     l3518:	
 11084                           ;incstack = 0
 11085                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11086                           
 11087                           
 11088                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
 11089     1AD5  160A  158A  22EA  160A  158A  	fcall	_I2C_Master_Wait
 11090     1ADA                     l3520:
 11091                           
 11092                           ;I2C.c: 68:     SSPBUF = d;
 11093     1ADA  0870               	movf	I2C_Master_Write@d,w
 11094     1ADB  1283               	bcf	3,5	;RP0=0, select bank0
 11095     1ADC  1303               	bcf	3,6	;RP1=0, select bank0
 11096     1ADD  0093               	movwf	19	;volatile
 11097     1ADE                     l232:
 11098     1ADE  0008               	return
 11099     1ADF                     __end_of_I2C_Master_Write:
 11100                           
 11101                           	psect	text35
 11102     1ACC                     __ptext35:	
 11103 ;; *************** function _I2C_Master_Stop *****************
 11104 ;; Defined at:
 11105 ;;		line 55 in file "I2C.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;		None
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;		None
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1    wreg      void 
 11112 ;; Registers used:
 11113 ;;		wreg, status,2, status,0, pclath, cstack
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11119 ;;      Params:         0       0       0       0       0
 11120 ;;      Locals:         0       0       0       0       0
 11121 ;;      Temps:          0       0       0       0       0
 11122 ;;      Totals:         0       0       0       0       0
 11123 ;;Total ram usage:        0 bytes
 11124 ;; Hardware stack levels used: 1
 11125 ;; Hardware stack levels required when called: 1
 11126 ;; This function calls:
 11127 ;;		_I2C_Master_Wait
 11128 ;; This function is called by:
 11129 ;;		_main
 11130 ;; This function uses a non-reentrant model
 11131 ;;
 11132                           
 11133     1ACC                     _I2C_Master_Stop:	
 11134                           ;psect for function _I2C_Master_Stop
 11135                           
 11136     1ACC                     l3538:	
 11137                           ;incstack = 0
 11138                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11139                           
 11140                           
 11141                           ;I2C.c: 57:     I2C_Master_Wait();
 11142     1ACC  160A  158A  22EA  160A  158A  	fcall	_I2C_Master_Wait
 11143     1AD1                     l3540:
 11144                           
 11145                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
 11146     1AD1  1683               	bsf	3,5	;RP0=1, select bank1
 11147     1AD2  1303               	bcf	3,6	;RP1=0, select bank1
 11148     1AD3  1511               	bsf	17,2	;volatile
 11149     1AD4                     l229:
 11150     1AD4  0008               	return
 11151     1AD5                     __end_of_I2C_Master_Stop:
 11152                           
 11153                           	psect	text36
 11154     1AC3                     __ptext36:	
 11155 ;; *************** function _I2C_Master_Start *****************
 11156 ;; Defined at:
 11157 ;;		line 39 in file "I2C.c"
 11158 ;; Parameters:    Size  Location     Type
 11159 ;;		None
 11160 ;; Auto vars:     Size  Location     Type
 11161 ;;		None
 11162 ;; Return value:  Size  Location     Type
 11163 ;;                  1    wreg      void 
 11164 ;; Registers used:
 11165 ;;		wreg, status,2, status,0, pclath, cstack
 11166 ;; Tracked objects:
 11167 ;;		On entry : 0/0
 11168 ;;		On exit  : 0/0
 11169 ;;		Unchanged: 0/0
 11170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11171 ;;      Params:         0       0       0       0       0
 11172 ;;      Locals:         0       0       0       0       0
 11173 ;;      Temps:          0       0       0       0       0
 11174 ;;      Totals:         0       0       0       0       0
 11175 ;;Total ram usage:        0 bytes
 11176 ;; Hardware stack levels used: 1
 11177 ;; Hardware stack levels required when called: 1
 11178 ;; This function calls:
 11179 ;;		_I2C_Master_Wait
 11180 ;; This function is called by:
 11181 ;;		_main
 11182 ;; This function uses a non-reentrant model
 11183 ;;
 11184                           
 11185     1AC3                     _I2C_Master_Start:	
 11186                           ;psect for function _I2C_Master_Start
 11187                           
 11188     1AC3                     l3514:	
 11189                           ;incstack = 0
 11190                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11191                           
 11192                           
 11193                           ;I2C.c: 41:     I2C_Master_Wait();
 11194     1AC3  160A  158A  22EA  160A  158A  	fcall	_I2C_Master_Wait
 11195     1AC8                     l3516:
 11196                           
 11197                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
 11198     1AC8  1683               	bsf	3,5	;RP0=1, select bank1
 11199     1AC9  1303               	bcf	3,6	;RP1=0, select bank1
 11200     1ACA  1411               	bsf	17,0	;volatile
 11201     1ACB                     l223:
 11202     1ACB  0008               	return
 11203     1ACC                     __end_of_I2C_Master_Start:
 11204                           
 11205                           	psect	text37
 11206     1BCC                     __ptext37:	
 11207 ;; *************** function _I2C_Master_Read *****************
 11208 ;; Defined at:
 11209 ;;		line 74 in file "I2C.c"
 11210 ;; Parameters:    Size  Location     Type
 11211 ;;  a               2    0[COMMON] unsigned short 
 11212 ;; Auto vars:     Size  Location     Type
 11213 ;;  temp            2    4[COMMON] unsigned short 
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  2    0[COMMON] unsigned short 
 11216 ;; Registers used:
 11217 ;;		wreg, status,2, status,0, pclath, cstack
 11218 ;; Tracked objects:
 11219 ;;		On entry : 0/0
 11220 ;;		On exit  : 0/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11223 ;;      Params:         2       0       0       0       0
 11224 ;;      Locals:         2       0       0       0       0
 11225 ;;      Temps:          2       0       0       0       0
 11226 ;;      Totals:         6       0       0       0       0
 11227 ;;Total ram usage:        6 bytes
 11228 ;; Hardware stack levels used: 1
 11229 ;; Hardware stack levels required when called: 1
 11230 ;; This function calls:
 11231 ;;		_I2C_Master_Wait
 11232 ;; This function is called by:
 11233 ;;		_main
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237     1BCC                     _I2C_Master_Read:	
 11238                           ;psect for function _I2C_Master_Read
 11239                           
 11240     1BCC                     l3522:	
 11241                           ;incstack = 0
 11242                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11243                           
 11244                           
 11245                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
 11246     1BCC  160A  158A  22EA  160A  158A  	fcall	_I2C_Master_Wait
 11247     1BD1                     l3524:
 11248                           
 11249                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
 11250     1BD1  1683               	bsf	3,5	;RP0=1, select bank1
 11251     1BD2  1303               	bcf	3,6	;RP1=0, select bank1
 11252     1BD3  1591               	bsf	17,3	;volatile
 11253                           
 11254                           ;I2C.c: 79:     I2C_Master_Wait();
 11255     1BD4  160A  158A  22EA  160A  158A  	fcall	_I2C_Master_Wait
 11256     1BD9                     l3526:
 11257                           
 11258                           ;I2C.c: 80:     temp = SSPBUF;
 11259     1BD9  1283               	bcf	3,5	;RP0=0, select bank0
 11260     1BDA  1303               	bcf	3,6	;RP1=0, select bank0
 11261     1BDB  0813               	movf	19,w	;volatile
 11262     1BDC  00F2               	movwf	??_I2C_Master_Read
 11263     1BDD  01F3               	clrf	??_I2C_Master_Read+1
 11264     1BDE  0872               	movf	??_I2C_Master_Read,w
 11265     1BDF  00F4               	movwf	I2C_Master_Read@temp
 11266     1BE0  0873               	movf	??_I2C_Master_Read+1,w
 11267     1BE1  00F5               	movwf	I2C_Master_Read@temp+1
 11268     1BE2                     l3528:
 11269                           
 11270                           ;I2C.c: 81:     I2C_Master_Wait();
 11271     1BE2  160A  158A  22EA  160A  158A  	fcall	_I2C_Master_Wait
 11272     1BE7                     l3530:
 11273                           
 11274                           ;I2C.c: 82:     if(a == 1){
 11275     1BE7  0370               	decf	I2C_Master_Read@a,w
 11276     1BE8  0471               	iorwf	I2C_Master_Read@a+1,w
 11277     1BE9  1D03               	btfss	3,2
 11278     1BEA  2BEC               	goto	u5801
 11279     1BEB  2BED               	goto	u5800
 11280     1BEC                     u5801:
 11281     1BEC  2BF1               	goto	l235
 11282     1BED                     u5800:
 11283     1BED                     l3532:
 11284                           
 11285                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
 11286     1BED  1683               	bsf	3,5	;RP0=1, select bank1
 11287     1BEE  1303               	bcf	3,6	;RP1=0, select bank1
 11288     1BEF  1291               	bcf	17,5	;volatile
 11289                           
 11290                           ;I2C.c: 84:     }else{
 11291     1BF0  2BF4               	goto	l236
 11292     1BF1                     l235:
 11293                           
 11294                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
 11295     1BF1  1683               	bsf	3,5	;RP0=1, select bank1
 11296     1BF2  1303               	bcf	3,6	;RP1=0, select bank1
 11297     1BF3  1691               	bsf	17,5	;volatile
 11298     1BF4                     l236:	
 11299                           ;I2C.c: 86:     }
 11300                           
 11301                           
 11302                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
 11303     1BF4  1611               	bsf	17,4	;volatile
 11304     1BF5                     l3534:
 11305                           
 11306                           ;I2C.c: 88:     return temp;
 11307     1BF5  0875               	movf	I2C_Master_Read@temp+1,w
 11308     1BF6  00F1               	movwf	?_I2C_Master_Read+1
 11309     1BF7  0874               	movf	I2C_Master_Read@temp,w
 11310     1BF8  00F0               	movwf	?_I2C_Master_Read
 11311     1BF9                     l237:
 11312     1BF9  0008               	return
 11313     1BFA                     __end_of_I2C_Master_Read:
 11314                           
 11315                           	psect	text38
 11316     1AEA                     __ptext38:	
 11317 ;; *************** function _I2C_Master_Wait *****************
 11318 ;; Defined at:
 11319 ;;		line 32 in file "I2C.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;		None
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;		None
 11324 ;; Return value:  Size  Location     Type
 11325 ;;                  1    wreg      void 
 11326 ;; Registers used:
 11327 ;;		wreg, status,2
 11328 ;; Tracked objects:
 11329 ;;		On entry : 0/0
 11330 ;;		On exit  : 0/0
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11333 ;;      Params:         0       0       0       0       0
 11334 ;;      Locals:         0       0       0       0       0
 11335 ;;      Temps:          0       0       0       0       0
 11336 ;;      Totals:         0       0       0       0       0
 11337 ;;Total ram usage:        0 bytes
 11338 ;; Hardware stack levels used: 1
 11339 ;; This function calls:
 11340 ;;		Nothing
 11341 ;; This function is called by:
 11342 ;;		_I2C_Master_Start
 11343 ;;		_I2C_Master_Stop
 11344 ;;		_I2C_Master_Write
 11345 ;;		_I2C_Master_Read
 11346 ;;		_I2C_Master_RepeatedStart
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350     1AEA                     _I2C_Master_Wait:	
 11351                           ;psect for function _I2C_Master_Wait
 11352                           
 11353     1AEA                     l3112:	
 11354                           ;incstack = 0
 11355                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11356                           
 11357     1AEA                     l217:	
 11358                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 11359                           
 11360     1AEA  1683               	bsf	3,5	;RP0=1, select bank1
 11361     1AEB  1303               	bcf	3,6	;RP1=0, select bank1
 11362     1AEC  1914               	btfsc	20,2	;volatile
 11363     1AED  2AEF               	goto	u4651
 11364     1AEE  2AF0               	goto	u4650
 11365     1AEF                     u4651:
 11366     1AEF  2AEA               	goto	l217
 11367     1AF0                     u4650:
 11368     1AF0                     l3114:
 11369     1AF0  0811               	movf	17,w	;volatile
 11370     1AF1  391F               	andlw	31
 11371     1AF2  1D03               	btfss	3,2
 11372     1AF3  2AF5               	goto	u4661
 11373     1AF4  2AF6               	goto	u4660
 11374     1AF5                     u4661:
 11375     1AF5  2AEA               	goto	l217
 11376     1AF6                     u4660:
 11377     1AF6                     l220:
 11378     1AF6  0008               	return
 11379     1AF7                     __end_of_I2C_Master_Wait:
 11380     007E                     btemp	set	126	;btemp
 11381     007E                     wtemp0	set	126
 11382                           
 11383                           	psect	idloc
 11384                           
 11385                           ;Config register IDLOC0 @ 0x2000
 11386                           ;	unspecified, using default values
 11387     2000                     	org	8192
 11388     2000  3FFF               	dw	16383
 11389                           
 11390                           ;Config register IDLOC1 @ 0x2001
 11391                           ;	unspecified, using default values
 11392     2001                     	org	8193
 11393     2001  3FFF               	dw	16383
 11394                           
 11395                           ;Config register IDLOC2 @ 0x2002
 11396                           ;	unspecified, using default values
 11397     2002                     	org	8194
 11398     2002  3FFF               	dw	16383
 11399                           
 11400                           ;Config register IDLOC3 @ 0x2003
 11401                           ;	unspecified, using default values
 11402     2003                     	org	8195
 11403     2003  3FFF               	dw	16383
 11404                           
 11405                           	psect	config
 11406                           
 11407                           ;Config register CONFIG1 @ 0x2007
 11408                           ;	Oscillator Selection bits
 11409                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11410                           ;	Watchdog Timer Enable bit
 11411                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11412                           ;	Power-up Timer Enable bit
 11413                           ;	PWRTE = OFF, PWRT disabled
 11414                           ;	RE3/MCLR pin function select bit
 11415                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11416                           ;	Code Protection bit
 11417                           ;	CP = OFF, Program memory code protection is disabled
 11418                           ;	Data Code Protection bit
 11419                           ;	CPD = OFF, Data memory code protection is disabled
 11420                           ;	Brown Out Reset Selection bits
 11421                           ;	BOREN = OFF, BOR disabled
 11422                           ;	Internal External Switchover bit
 11423                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11424                           ;	Fail-Safe Clock Monitor Enabled bit
 11425                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11426                           ;	Low Voltage Programming Enable bit
 11427                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11428                           ;	In-Circuit Debugger Mode bit
 11429                           ;	DEBUG = 0x1, unprogramme 11430     2007                     	org	8199
 11431     2007  20D4               	dw	8404
 11432                           
 11433                           ;Config register CONFIG2 @ 0x2008
 11434                           ;	Brown-out Reset Selection bit
 11435                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11436                           ;	Flash Program Memory Self Write Enable bits
 11437                           ;	WRT = OFF, Write protection off
 11438     2008                     	org	8200
 11439     2008  3FFF               	dw	16383

Data Sizes:
    Strings     10
    Constant    144
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     39      47
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 3
		 -> valADC(BANK1[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 5
		 -> valADC(BANK1[3]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _I2C_Master_Init->___lldiv
    ___fldiv->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _portsetup->_I2C_Master_Init
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   40833
                                             35 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                           ___xxtofl
                          _portsetup
                        _setupINTOSC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32170
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7864
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1516
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6327
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     767
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             49 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            0     0      0     716
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     420
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _portsetup
     _I2C_Master_Init
       ___lldiv
   _setupINTOSC
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      2F       7       58.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8B      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 10 00:12:59 2023

            ___fldiv@aexp 0057              ___fldiv@bexp 0056                         pc 0002  
            ___fldiv@sign 004F                        l80 1B2F                        l81 1B30  
                      l82 1B36                        l90 1B03                        l59 1B5B  
                      l84 1B37                        l76 1B1F                        l77 1B22  
                      l78 1B28                        l79 1B29                        l87 0023  
                      l96 1D6A                        l99 1EC2              ___awdiv@sign 0021  
                      fsr 0004       ___wmul@multiplicand 0072       __Umul8_16@word_mpld 0076  
                     l102 1C2C                       l220 1AF6                       l108 1CE0  
                     l214 1C64                       l223 1ACB                       l232 1ADE  
                     l217 1AEA                       l401 064D                       l235 1BF1  
                     l236 1BF4                       l180 1EF2                       l237 1BF9  
                     l229 1AD4                       l181 1EFE                       l421 1BA4  
                     l182 1F0A                       l342 15A7                       l183 1F15  
                     l415 07F1                       l600 00CE                       l185 1F21  
                     l177 1ECE                       l409 07AE                       l178 1EDA  
                     l610 081E                       l179 1EE6                       l419 1B8C  
                     l605 1D87                       l613 088A                       l349 0FFF  
                     l606 1DA3                       l614 08A3                       l622 1FFF  
                     l455 1F87                       l607 1DB8                       l632 1FFF  
                     l640 118C                       l368 021F                       l802 1220  
                     l618 1AE9                       l394 060F                       l804 139C  
                     l900 0931                       l636 11C9                       l572 1112  
                     l629 1FEA                       l637 113D                       l725 1D24  
                     l750 1686                       l590 0042                       l647 11BC  
                     l735 1C9E                       l824 1384                       l752 165F  
                     l593 009E                       l585 1E65                       l826 1392  
                     l818 1312                       l746 1603                       l842 0CA0  
                     l906 1B15                       l771 1773                       l675 1E0C  
                     l780 17D3                       l589 00DB                       l861 1BB9  
                     l854 0C94                       l767 174F                       l759 17FF  
                     l863 1BCB                       l792 1B7F                       l848 0C10  
                     l777 1795                       l788 17F5                       l892 0909  
                     l789 17FF                       l886 08C6                       l888 095B  
                     l899 0925                       _GIE 005F                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       fsr0 0004                       indf 0000  
            ___awmod@sign 0076              ___flmul@aexp 0036              ___flmul@bexp 0037  
            ___flmul@sign 0031              ___flmul@temp 003C              ___flmul@prod 0038  
            ___fltol@exp1 005A                      l3000 0AED                      l3010 0B94  
                    l3002 0B0A                      l3100 1C15                      l3020 0BE0  
                    l3012 0BBC                      l3004 0B35                      l3110 1C29  
                    l3102 1C19                      l3030 0BF5                      l3022 0BE1  
                    l3014 0BC5                      l3006 0B43                      l3112 1AEA  
                    l3104 1C1C                      l3200 1144                      l3040 0C1A  
                    l3032 0BF9                      l3024 0BEA                      l3016 0BD3  
                    l3008 0B6E                      l3114 1AF0                      l3106 1C22  
                    l3210 1173                      l3202 1153                      l3050 0C58  
                    l3042 0C28                      l3034 0C0D                      l3018 0BDC  
                    l3026 0BF0                      l3130 1564                      l3108 1C25  
                    l3300 1BA0                      l3212 117D                      l3204 1155  
                    l3060 0C8A                      l3052 0C63                      l3044 0C2C  
                    l3028 0BF4                      l3124 14B3                      l3116 13A0  
                    l3140 0CB1                      l3070 1C2D                      l3310 1DB5  
                    l3214 117E                      l3206 115C                      l3062 0C8E  
                    l3054 0C72                      l3046 0C45                      l3038 0C15  
                    l3126 14B9                      l3118 13A6                      l3134 0CA4  
                    l2600 1F79                      l3080 1C63                      l3072 1C31  
                    l3312 1DB7                      l3304 1D6B                      l3320 0832  
                    l3400 1B5C                      l3240 002F                      l3232 11B1  
                    l3224 1198                      l3216 1186                      l3208 1165  
                    l3064 0C8F                      l3056 0C7C                      l3048 0C4B  
                    l3152 0E28                      l3136 0CA8                      l3090 0020  
                    l3082 000B                      l2602 1F7F                      l3074 1C34  
                    l3306 1D7F                      l3330 08A0                      l3322 083A  
                    l3402 1B60                      l3410 08AE                      l3250 0043  
                    l3234 11C1                      l3218 1190                      l3226 11AA  
                    l3066 0C98                      l3058 0C7E                      l2610 10B1  
                    l3170 0FD3                      l3146 0D99                      l3138 0CAA  
                    l3084 000E                      l3500 1D5B                      l3092 1BFB  
                    l3076 1C61                      l3308 1D9B                      l3332 08A2  
                    l3324 083E                      l3316 0802                      l3340 1AE9  
                    l3420 08DA                      l3412 08BE                      l3260 006E  
                    l3252 004B                      l3244 0038                      l2700 1CFB  
                    l3180 1B12                      l2620 10C5                      l2612 10B6  
                    l3164 0F44                      l3148 0DA0                      l3156 0E55  
                    l3086 0014                      l3502 1D5E                      l3094 1C01  
                    l3510 1CBE                      l3078 1C62                      l3326 0862  
                    l3318 0816                      l3350 1F9C                      l3430 0910  
                    l3422 08E7                      l3414 08CE                      l3406 08A5  
                    l3270 00A2                      l3262 0080                      l3254 005C  
                    l3238 0024                      l2702 1D0C                      l2710 1D20  
                    l3182 1B14                      l3174 1B05                      l2630 10DB  
                    l2622 10C7                      l2614 10B8                      l2606 10AA  
                    l3166 0F4B                      l3158 0E5C                      l3520 1ADA  
                    l3088 0017                      l3504 1D64                      l3096 1C04  
                    l3512 1CC4                      l3328 0866                      l3336 1ADF  
                    l2800 1621                      l3360 1FBE                      l3352 1FAF  
                    l3344 1F88                      l3440 0949                      l3432 091B  
                    l3424 08EE                      l3408 08AA                      l3264 008E  
                    l3256 005E                      l3192 112D                      l2560 1BA8  
                    l2704 1D12                      l2720 1C75                      l3176 1B06  
                    l2640 10FE                      l2632 10DF                      l2624 10CD  
                    l2616 10BC                      l2608 10AD                      l3600 02C7  
                    l3530 1BE7                      l3522 1BCC                      l3514 1AC3  
                    l3098 1C12                      l3506 1C9F                      l3450 1EC4  
                    l3338 1AE7                      l2810 162B                      l2802 1623  
                    l3354 1FB0                      l3346 1F93                      l3290 1B80  
                    l3442 094E                      l3434 091F                      l3426 08F2  
                    l3418 08D7                      l3266 008F                      l3258 0065  
                    l3186 1113                      l2562 1BAF                      l2706 1D13  
                    l2730 1C94                      l2722 1C79                      l2714 1C65  
                    l3178 1B0C                      l2634 10F0                      l2626 10D0  
                    l2642 1104                      l2618 10C1                      l2650 1E0D  
                    l3610 0316                      l3602 02DA                      l3532 1BED  
                    l3524 1BD1                      l3516 1AC8                      l3540 1AD1  
                    l2580 1B34                      l2572 1B17                      l3508 1CA2  
                    l3460 1EF8                      l3452 1ECA                      l2820 1663  
                    l2812 162D                      l2804 1625                      l2740 15B1  
                    l3356 1FB8                      l3380 1DB9                      l3292 1B82  
                    l3444 0952                      l3436 0929                      l3428 0900  
                    l3284 00C3                      l3276 00AA                      l3268 0098  
                    l3188 1124                      l2564 1BB3                      l2708 1D1A  
                    l2724 1C7D                      l2716 1C6B                      l2732 1C9A  
                    l2644 1109                      l2636 10F6                      l2628 10D7  
                    l2660 1E1D                      l2652 1E0E                      l3700 06DD  
                    l3612 0361                      l3604 02ED                      l3620 03A6  
                    l3534 1BF5                      l3526 1BD9                      l3518 1AD5  
                    l2574 1B1B                      l2590 1F46                      l2582 1F22  
                    l3470 1B38                      l3462 1F04                      l3454 1ED4  
                    l2910 17CF                      l2902 179A                      l2830 167A  
                    l2822 166A                      l2806 1627                      l2814 162F  
                    l2750 15C8                      l2742 15B5                      l3374 1FDF  
                    l3366 1FC6                      l3358 1FBA                      l3390 1DE7  
                    l3382 1DC1                      l3294 1B86                      l3446 0953  
                    l3438 0933                      l3286 00D3                      l3278 00BC  
                    l3198 113E                      l2566 1BC2                      l2558 1BA6  
                    l2726 1C87                      l2718 1C6E                      l2646 110E  
                    l2638 10F7                      l2670 1E36                      l2662 1E22  
                    l2654 1E12                      l3710 0784                      l3702 0718  
                    l3630 044D                      l3622 03B5                      l3614 037A  
                    l3606 02F1                      l3550 01C8                      l3542 01B5  
                    l3528 1BE2                      l2576 1B26                      l3480 1E83  
                    l2592 1F4F                      l2584 1F32                      l3472 1B4E  
                    l3464 1F0F                      l3456 1EE0                      l2920 17EB  
                    l2912 17D8                      l2904 179F                      l2840 1698  
                    l2824 166C                      l2832 167E                      l2816 1630  
                    l2808 1629                      l2760 15DC                      l2752 15C9  
                    l2744 15B6                      l2736 15A8                      l3376 1FEF  
                    l3368 1FD8                      l3392 1DF5                      l3384 1DC4  
                    l3296 1B93                      l2568 1BC7                      l2728 1C8D  
                    l2672 1E3A                      l2664 1E28                      l2680 1E57  
                    l2656 1E17                      l3720 07A0                      l3712 0789  
                    l3704 0737                      l3640 04A6                      l3632 045C  
                    l3624 03FC                      l3616 0383                      l3608 02F7  
                    l3560 01DE                      l3552 01CA                      l3544 01B8  
                    l3538 1ACC                      l2578 1B2D                      l3482 1E89  
                    l3474 1E66                      l3490 1D38                      l3810 1279  
                    l3802 124F                      l2594 1F61                      l2586 1F35  
                    l3466 1F1A                      l3458 1EEC                      l2922 17EF  
                    l2914 17DD                      l2906 17AD                      l2850 16C0  
                    l2842 16AF                      l2834 168A                      l2826 1670  
                    l2818 1647                      l2770 15EB                      l2762 15DD  
                    l2746 15BB                      l2754 15CB                      l2738 15AD  
                    l3378 1FF4                      l3394 1DFE                      l3386 1DD1  
                    l3298 1B9A                      l2930 095C                      l2690 1CE3  
                    l2682 1E5C                      l2674 1E44                      l2666 1E2B  
                    l2658 1E19                      l3730 07C9                      l3722 07A8  
                    l3714 078D                      l3706 0741                      l3650 0550  
                    l3634 0477                      l3626 040B                      l3618 039E  
                    l3570 021D                      l3562 01F3                      l3554 01D6  
                    l3546 01BE                      l3484 1AF7                      l3476 1E6C  
                    l3492 1D3B                      l3820 1297                      l3812 127B  
                    l3804 1261                      l2596 1F6F                      l2588 1F42  
                    l3468 1F1E                      l2924 17F1                      l2916 17E5  
                    l2908 17B1                      l2860 16E9                      l2852 16C4  
                    l2844 16B3                      l2836 168F                      l2828 1671  
                    l2780 1609                      l2772 15F0                      l2764 15E1  
                    l2756 15D3                      l2748 15C0                      l3388 1DD5  
                    l3396 1E04                      l2940 096F                      l2932 0961  
                    l2692 1CE9                      l2684 1E61                      l2676 1E4A  
                    l2668 1E32                      l3732 07D7                      l3724 07B9  
                    l3716 0793                      l3708 077C                      l3652 0552  
                    l3644 04C5                      l3636 0480                      l3628 0426  
                    l3580 024D                      l3564 0206                      l3556 01D7  
                    l3548 01C3                      l3900 011C                      l3478 1E75  
                    l3494 1D41                      l3486 1D26                      l3814 1280  
                    l3822 12A0                      l3830 12C5                      l3806 1269  
                    l3750 11CF                      l2598 1F70                      l2926 17FA  
                    l2918 17EA                      l2870 1757                      l2862 1727  
                    l2854 16C5                      l2846 16B7                      l2790 1617  
                    l2782 160D                      l2774 15F8                      l2766 15E5  
                    l2758 15D6                      l2950 098B                      l2942 0974  
                    l2934 0965                      l2694 1CEC                      l2678 1E51  
                    l3726 07BA                      l3670 05AB                      l3662 058B  
                    l3638 0488                      l3646 04CE                      l3590 0295  
                    l3582 0251                      l3718 079A                      l3574 0221  
                    l3566 020A                      l3558 01DB                      l3910 01A5  
                    l3902 0121                      l3488 1D2B                      l3496 1D48  
                    l3840 12E2                      l3832 12CB                      l3824 12B2  
                    l3816 1292                      l3808 1271                      l3760 11E2  
                    l3752 11D3                      l2928 17FE                      l2880 1772  
                    l2872 175C                      l2864 172D                      l2856 16CE  
                    l2848 16BE                      l2792 1619                      l2784 1611  
                    l2776 15F9                      l2768 15E6                      l2960 099E  
                    l2952 098F                      l2944 097C                      l2936 0969  
                    l2696 1CF3                      l2688 1CE1                      l3728 07C9  
                    l3680 0622                      l3672 05E6                      l3664 0595  
                    l3648 0503                      l3592 0299                      l3584 025F  
                    l3576 023D                      l3568 021B                      l3736 07DD  
                    l3904 0130                      l3498 1D4E                      l3850 12F7  
                    l3842 12E3                      l3834 12D3                      l3826 12B3  
                    l3818 1296                      l3770 11FA                      l3762 11EA  
                    l3754 11D7                      l2882 1777                      l2890 1783  
                    l2866 1732                      l2858 16D3                      l2794 161B  
                    l2786 1613                      l2778 15FB                      l2970 09BA  
                    l2962 09A6                      l2954 0993                      l2946 097E  
                    l2938 096A                      l2698 1CF7                      l3690 0656  
                    l3682 0628                      l3674 0605                      l3666 05A1  
                    l3658 0554                      l3594 029D                      l3586 0263  
                    l3578 0249                      l3738 07ED                      l3906 018D  
                    l3860 131C                      l3852 12FB                      l3844 12EC  
                    l3836 12D5                      l3828 12C1                      l3780 120D  
                    l3772 11FE                      l3764 11EB                      l3756 11D8  
                    l3748 11CA                      l2884 177A                      l2876 1765  
                    l2868 1741                      l2892 1787                      l2796 161D  
                    l2788 1615                      l2980 09F9                      l2964 09A8  
                    l2956 0994                      l2948 0986                      l3692 065B  
                    l3684 0635                      l3676 0617                      l3668 05A6  
                    l3596 02B6                      l3588 027C                      l3908 019D  
                    l3870 135A                      l3862 132A                      l3854 130F  
                    l3838 12DE                      l3846 12F2                      l3790 1234  
                    l3782 1215                      l3774 1202                      l3758 11DD  
                    l3766 11ED                      l2894 1788                      l2886 177C  
                    l2878 176E                      l2798 161F                      l2990 0A80  
                    l2982 0A15                      l2974 09C3                      l2966 09B0  
                    l2958 0999                      l3694 0660                      l3686 0644  
                    l3678 061E                      l3598 02C1                      l3880 1388  
                    l3872 1368                      l3864 132E                      l3848 12F6  
                    l3792 1238                      l3784 1216                      l3776 1203  
                    l3768 11F5                      l2896 178C                      l2888 1781  
                    l2992 0A8E                      l2984 0A3F                      l2976 09D1  
                    l2968 09B5                      l3696 0664                      l3688 0649  
                    l3882 138C                      l3874 1377                      l3866 1347  
                    l3858 1317                      l3778 1208                      l3786 1218  
                    l2898 1792                      l2994 0AAB                      l2986 0A5B  
                    l2978 09DE                      l3698 0682                      l3890 00DC  
                    l3884 138E                      l3876 137B                      l3868 134D  
                    l3788 1228                      l3796 1241                      l2996 0AB9  
                    l2988 0A77                      l3892 00F9                      l3878 1383  
                    l3798 1246                      l2998 0AD6                      l3974 0235  
                    l3894 0102                      l3896 0107                      l3898 0110  
                    STR_1 10A0                      STR_2 10A5                      u4000 16B7  
                    u4001 16B6                      u4010 16C4                      u4011 16C3  
                    u4100 1772                      u4101 1771                      u4110 1777  
                    u4030 16E9                      u4111 1776                      u4031 16E8  
                    u3400 1B34                      u4200 17CF                      u4120 1781  
                    u5000 1190                      u3401 1B33                      u4201 17CE  
                    u4121 1780                      u4041 1700                      u4033 16E5  
                    u4025 16C7                      u5001 118F                      u3410 1F32  
                    u4210 17D8                      u4130 1787                      u4050 1714  
                    u4042 1701                      u5010 1197                      u3411 1F31  
                    u4211 17D7                      u4131 1786                      u4051 1715  
                    u4043 1706                      u5011 1196                      u4220 17DD  
                    u4140 178C                      u4060 1732                      u4052 171A  
                    u4044 1707                      u5100 0080                      u3340 1BB3  
                    u4300 0999                      u3500 10CD                      u4221 17DC  
                    u4141 178B                      u4061 1731                      u4053 171B  
                    u4045 170C                      u5101 007F                      u3341 1BB2  
                    u4301 0998                      u3501 10CC                      u3430 1F46  
                    u4230 17EA                      u4150 1792                      u4070 1757  
                    u4046 170D                      u5030 11A9                      u4310 099E  
                    u3431 1F45                      u4231 17E9                      u4151 1791  
                    u4071 1756                      u5031 11A8                      u4311 099D  
                    u4240 17EF                      u4160 1799                      u4080 175C  
                    u5200 1B86                      u5120 009E                      u5040 11B0  
                    u3360 1BC7                      u4320 09B5                      u3520 10DF  
                    u3600 1E28                      u6000 05A1                      u3425 1F37  
                    u4241 17EE                      u4161 1798                      u4081 175B  
                    u5201 1B85                      u5121 009D                      u5105 007C  
                    u5041 11AF                      u5025 1199                      u3361 1BC6  
                    u4401 0AC8                      u4321 09B4                      u3521 10DE  
                    u3601 1E27                      u6001 05A0                      u3370 1B1B  
                    u3450 1F61                      u4250 17FE                      u4170 179F  
                    u5130 00A2                      u4402 0ACF                      u4330 09BA  
                    u3371 1B1A                      u3451 1F60                      u4251 17FD  
                    u4171 179E                      u5131 00A1                      u5115 0091  
                    u3355 1BBA                      u4403 0AD6                      u4331 09B9  
                    u3515 10D1                      u3380 1B26                      u4180 17B1  
                    u5140 00A9                      u5060 11C1                      u4260 0969  
                    u3540 10F0                      u3620 1E3A                      u6100 07A0  
                    u6020 0616                      u3381 1B25                      u3445 1F48  
                    u5301 084D                      u4181 17B0                      u5141 00A8  
                    u5061 11C0                      u4421 0AFC                      u4341 0A07  
                    u4261 0968                      u3541 10EF                      u3621 1E39  
                    u6101 079F                      u6021 0615                      u3390 1B2D  
                    u3470 1F7F                      u5310 0866                      u5302 084E  
                    u4190 17C0                      u5230 1BA0                      u5070 002F  
                    u4510 0BE0                      u4422 0B03                      u4342 0A0E  
                    u4270 096F                      u3710 1D0C                      u3630 1E44  
                    u6110 07A8                      u6030 0635                      u3391 1B2C  
                    u3471 1F7E                      u3455 1F5D                      u5311 0865  
                    u5303 0853                      u4095 1767                      u5231 1B9F  
                    u5215 1B8D                      u5071 002E                      u5055 11B3  
                    u4511 0BDF                      u4431 0B27                      u4423 0B0A  
                    u4415 0AD8                      u4351 0A23                      u4343 0A15  
                    u4271 096E                      u3711 1D0B                      u3535 10E0  
                    u3631 1E43                      u3615 1E2C                      u6111 07A7  
                    u6031 0634                      u6015 05AE                      u6200 1208  
                    u5240 1D7F                      u5304 0854                      u3800 15B5  
                    u5400 1FD7                      u5160 00BB                      u5080 0041  
                    u4600 0C58                      u4432 0B2E                      u4352 0A2A  
                    u4280 0974                      u3560 1104                      u3480 10B1  
                    u6120 07B9                      u6040 0644                      u6201 1207  
                    u3465 1F71                      u5241 1D7E                      u5321 0875  
                    u5305 0859                      u3801 15B4                      u5401 1FD6  
                    u5225 1B94                      u5161 00BA                      u5081 0040  
                    u4601 0C57                      u4505 0BD5                      u4441 0B52  
                    u4433 0B35                      u4361 0A4D                      u4353 0A31  
                    u4281 0973                      u3705 1CFC                      u3561 1103  
                    u3545 10EC                      u3481 10B0                      u6121 07B8  
                    u6041 0643                      u6210 120D                      u5250 1D9B  
                    u5330 08A0                      u5322 0876                      u5306 085A  
                    u3810 15BB                      u5410 1FDE                      u5170 00C2  
                    u4610 0C72                      u4530 0BF4                      u4450 0B7A  
                    u4442 0B59                      u4362 0A54                      u4290 0993  
                    u3730 1D20                      u3570 1109                      u3490 10BC  
                    u3650 1E57                      u6130 07C9                      u6050 065B  
                    u6211 120C                      u5251 1D9A                      u5331 089F  
                    u5323 087B                      u4195 17BB                      u3811 15BA  
                    u5411 1FDD                      u5171 00C1                      u5155 00AB  
                    u4611 0C71                      u4531 0BF3                      u4443 0B60  
                    u4371 0A69                      u4363 0A5B                      u4291 0992  
                    u3731 1D1F                      u3715 1D08                      u3571 1108  
                    u3555 10F8                      u3491 10BB                      u3651 1E56  
                    u3635 1E40                      u6131 07C8                      u6051 065A  
                    u6035 0631                      _PEIE 005E                      u6300 12CB  
                    u6220 1228                      u5260 1DB5                      u5324 087C  
                    u5340 1AE7                      u3900 1652                      u3820 15C0  
                    u5500 1E04                      u4620 0C8E                      u4540 0BF9  
                    u4372 0A70                      u3740 1C6B                      u3660 1E5C  
                    u3580 1E12                      u6140 07D7                      u6301 12CA  
                    u6221 1227                      u5261 1DB4                      u5325 0881  
                    u5341 1AE6                      u3901 1650                      u3821 15BF  
                    u5501 1E03                      u4621 0C8D                      u4605 0C54  
                    u4541 0BF8                      u4525 0BE3                      u4461 0B86  
                    u4373 0A77                      u3725 1D14                      u3741 1C6A  
                    u3661 1E5B                      u3645 1E4B                      u3581 1E11  
                    u6141 07D6                      u6125 07B5                      u6045 0640  
                    u6310 12D3                      u6230 1246                      u4630 1C44  
                    u5326 0882                      u5270 0816                      u3910 1653  
                    u3830 15DC                      u5430 1FEF                      u5350 1F93  
                    u5510 08AA                      u5190 00D3                      u4550 0C0D  
                    u4470 0BA2                      u4462 0B8D                      u3670 1CE9  
                    u4710 14B9                      u3590 1E1D                      u6150 07ED  
                    u6311 12D2                      u6231 1245                      u5335 089C  
                    u5271 0815                      u3831 15DB                      u5431 1FEE  
                    u5351 1F92                      u5511 08A9                      u5191 00D2  
                    u5095 0067                      u4615 0C6E                      u4551 0C0C  
                    u4463 0B94                      u4455 0B75                      u4391 0A9D  
                    u3671 1CE8                      u4711 14B8                      u3591 1E1C  
                    u6151 07EC                      u6135 07C5                      u6400 132E  
                    u6240 1280                      u6160 11D7                      u5280 0832  
                    u3920 1663                      u3840 15E5                      u5440 1FF4  
                    u5360 1FAA                      u5600 0925                      u5520 08AE  
                    u4560 0C14                      u4392 0AA4                      u3760 1C7D  
                    u4800 0DA0                      u6080 0783                      u6401 132D  
                    u6241 127F                      u6161 11D6                      u5265 1DB1  
                    u5281 0831                      u3921 1662                      u3841 15E4  
                    u5441 1FF3                      u5425 1FE1                      u5601 0924  
                    u5521 08AD                      u5185 00C5                      u4561 0C13  
                    u4481 0BAE                      u4393 0AAB                      u4385 0A79  
                    u3761 1C7C                      u4705 1472                      u4801 0D9F  
                    u6081 0782                      u6065 06E0                      u4650 1AF0  
                    u6410 133D                      u6330 12E2                      u6170 11DD  
                    u5290 083E                      u3930 1670                      u3850 15EB  
                    u5370 1FBE                      u5450 1DC1                      u5610 0929  
                    u5530 08CE                      u4570 0C1A                      u4482 0BB5  
                    u3690 1CFB                      u3770 1C87                      u6090 0799  
                    u4651 1AEF                      u6331 12E1                      u6171 11DC  
                    u4635 1C3F                      u5291 083D                      u3931 166F  
                    u3851 15EA                      u5371 1FBD                      u5451 1DC0  
                    u5611 0928                      u5531 08CD                      u4571 0C19  
                    u4483 0BBC                      u4475 0B9D                      u3691 1CFA  
                    u3771 1C86                      u3755 1C6F                      u6091 0798  
                    u6075 0744                      u4660 1AF6                      u6420 135A  
                    u6180 11E2                      u5700 1F04                      u3860 15F0  
                    u5380 1FC5                      u5620 093E                      u4580 0C2C  
                    u4661 1AF5                      u4645 1C07                      u6421 1359  
                    u6325 12D7                      u6181 11E1                      u5701 1F03  
                    u3861 15EF                      u5381 1FC4                      u5365 1FA5  
                    u4581 0C2B                      u3685 1CED                      u4725 14D6  
                    u6430 1377                      u6350 12F6                      u6270 1296  
                    u6190 1202                      u5710 1F0F                      u3950 1686  
                    u3870 1609                      u5470 1DD5                      u5630 094E  
                    u5550 08ED                      u4590 0C3B                      u3790 1C9A  
                    u4670 13A6                      u4750 0CA8                      u6431 1376  
                    u6415 1338                      u6351 12F5                      u6271 1295  
                    u6255 1282                      u6191 1201                      u5711 1F0E  
                    u3951 1685                      u3871 1608                      u5471 1DD4  
                    u5631 094D                      u5551 08EC                      u4495 0BBE  
                    u3791 1C99                      u3775 1C83                      u4735 1523  
                    u4671 13A5                      u4815 0DB3                      u4751 0CA7  
                    u5800 1BED                      u6440 138C                      u6360 12FB  
                    u5720 1F1A                      u3960 168A                      u3880 160D  
                    u5480 1DE7                      u5640 0952                      u4920 1B0C  
                    u4840 0E5C                      u4760 0CB1                      u5801 1BEC  
                    u6441 138B                      u6425 1356                      u6361 12FA  
                    u6345 12E5                      u6265 128B                      u5721 1F19  
                    u3961 1689                      u3945 1673                      u3881 160C  
                    u5481 1DE6                      u5465 1DC6                      u5641 0951  
                    u5625 0939                      u5545 08DF                      u3785 1C8E  
                    u4745 156F                      u4921 1B0B                      u4905 0F9A  
                    u4841 0E5B                      u4825 0DEF                      u4761 0CB0  
                    u5730 1D2B                      u6370 130F                      u6290 12B2  
                    u5650 1ECA                      u3970 168F                      u3890 1647  
                    u5570 090F                      u4930 1B12                      u5810 01BE  
                    u6507 1E70                      u5731 1D2A                      u6435 1373  
                    u6371 130E                      u6291 12B1                      u5651 1EC9  
                    u3971 168E                      u3891 1646                      u5395 1FC7  
                    u5571 090E                      u4595 0C36                      u4931 1B11  
                    u4915 0FD6                      u4835 0E2B                      u5811 01BD  
                    u6380 1316                      u5660 1ED4                      u4940 1124  
                    u5900 039E                      u5820 01D6                      u6517 1E7F  
                    u6381 1315                      u6285 1299                      u5661 1ED3  
                    u3981 16A1                      u5485 1DE3                      u5565 0901  
                    u4941 1123                      u4685 13C3                      u5901 039D  
                    u5821 01D5                      u5750 1D4E                      u6390 131C  
                    u5670 1EE0                      u3990 16B3                      u3982 16A8  
                    u5590 091F                      u4950 113C                      u5910 03B5  
                    u5830 021A                      u6527 1E8D                      u5751 1D4D  
                    u6391 131B                      u6295 12AE                      u5671 1EDF  
                    u3991 16B2                      u3983 16AF                      u3895 1643  
                    u5495 1DF6                      u5591 091E                      u4951 113B  
                    u4695 141D                      u4855 0E7C                      u4775 0CD1  
                    u5911 03B4                      u5831 0219                      u5680 1EEC  
                    u4880 0F4B                      u5920 040B                      u5840 0249  
                    u6537 001B                      u5745 1D31                      u5681 1EEB  
                    u5585 0914                      u4881 0F4A                      u4865 0EB8  
                    u4785 0D0D                      u5921 040A                      u5841 0248  
                    u5770 1CAC                      u5690 1EF8                      u4970 1173  
                    u5930 0426                      u5850 024D                      u5691 1EF7  
                    u4971 1172                      u4875 0F03                      u4795 0D58  
                    u5931 0425                      u5915 03B1                      u5851 024C  
                    u5780 1CCE                      u5940 044D                      u5860 027C  
                    u5765 1D54                      u4965 115E                      u5941 044C  
                    u5925 0407                      u5861 027B                      u6477 0129  
                    u5790 1CE0                      u4990 118C                      u5950 045C  
                    u5870 02B6                      u6487 1C17                      u5791 1CDF  
                    u4991 118B                      u4975 116F                      u4895 0F5E  
                    u5951 045B                      u5871 02B5                      u5960 0477  
                    u5880 02F1                      u6497 1C27                      u4985 117F  
                    u5961 0476                      u5881 02F0                      u5890 037A  
                    u5955 0458                      u5891 0379                      u5980 058A  
                    u5981 0589                      u5990 0595                      u5991 0594  
                    u5975 0557                      u5985 0586         ?_Lcd_Write_String 0075  
                    _main 00DC                      btemp 007E                      start 0000  
      ??_Lcd_Write_String 0077           ___fldiv@new_exp 0050              _sprintf$1018 00AA  
         __end_of_Lcd_Cmd 0024          ?_I2C_Master_Init 0020          ?_I2C_Master_Read 0070  
        ?_I2C_Master_Wait 0070          ?_I2C_Master_Stop 0070             ___fltol@sign1 0059  
         __end_of___fladd 1800                     ?_main 0070           __end_of___fldiv 139D  
         __end_of___awdiv 1113           __end_of___flneg 1AEA           __end_of___awmod 1E66  
         __end_of___flmul 0CA1           __end_of___flsub 1B80           __end_of___fltol 2000  
                   _ANSEL 0188           __end_of___lldiv 1F88           ___awdiv@divisor 0077  
         __end_of___llmod 1E0D           __end_of___lwdiv 1D25           __end_of___lwmod 1C9F  
         ___awdiv@counter 0020                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088                     _SSPIE 0463                     _SSPIF 0063  
         __end_of_dpowers 10A0                     _scale 0CA1           __end_of_isdigit 1B16  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 07F2          __end_of_Lcd_Init 1EC3          __end_of_Lcd_Port 1B38  
         __initialization 07F2              __end_of_main 01B2                    ??_main 00C3  
       ?_I2C_Master_Start 0070         ?_I2C_Master_Write 0070        ??_I2C_Master_Start 0070  
      ??_I2C_Master_Write 0072          ___llmod@dividend 0074                    ?_scale 003E  
        ___awdiv@dividend 0079                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013          __end_of___xxtofl 095C  
        __end_of__powers_ 1044                    ___flge 0802                    ___fleq 1D6B  
               ??___fladd 005A                    ___wmul 1B80                 ??___fldiv 0046  
               ??___awdiv 007B                    _lecADC 00CB                 ??___flneg 0074  
               ??___awmod 0074                 ??___flmul 002C                 ??___flsub 007E  
               ??___fltol 0055                 ??___lldiv 0078                 ??___llmod 0078  
               ??___lwdiv 007A                 ??___lwmod 0074                    _conver 00C7  
                  _valADC 00CC                    _fround 139D          ___awdiv@quotient 0022  
         ___awmod@divisor 0070           ___awmod@counter 0075              ?_setupINTOSC 0070  
               ??_isdigit 0070                 ??_sprintf 00A5           Lcd_Set_Cursor@a 0076  
         Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077  
              ___flge@ff1 0070                ___flge@ff2 0074              ___xxtofl@arg 007A  
            ___xxtofl@exp 0079              ___xxtofl@val 0070                ___fleq@ff1 0070  
              ___fleq@ff2 0074   __end_of__initialization 07FC                ___flneg@f1 0070  
       __end_of_Lcd_Clear 1B04                ___fltol@f1 0051            __pcstackCOMMON 0070  
           __end_of_scale 1000            _Lcd_Set_Cursor 1D25                __div_to_l_ 0024  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070           __div_to_l_@exp1 0025  
         __div_to_l_@cntr 0024                   ??_scale 0042           __div_to_l_@quot 0020  
              __pbssBANK1 00C7             __div_to_l_@f1 0070             __div_to_l_@f2 0074  
       __end_of__Umul8_16 1BCC                __pmaintext 00DC                   ?___flge 0070  
                 ?___fleq 0070                   ?___wmul 0070                   ?_fround 003E  
  __end_of_Lcd_Set_Cursor 1D6B                 ?___xxtofl 0070                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                   _SSPCON2 0091                   _SSPSTAT 0094  
              __stringtab 1000            _Lcd_Write_Char 1BFA                   _Lcd_Cmd 000A  
       __end_of__npowers_ 1078                _scale$1017 004C                   ___fladd 15A8  
                 ___fldiv 11CA                   ___awdiv 10AA                   ___flneg 1ADF  
                 ___awmod 1E0D                   ___flmul 095C                   ___flsub 1B5C  
                 ___fltol 1F88                   ___lldiv 1F22                   ___llmod 1DB9  
                 ___lwdiv 1CE1                   ___lwmod 1C65           ?_Lcd_Set_Cursor 0074  
                 __ptext1 01B2                   __ptext2 0CA1                   __ptext3 1E0D  
                 __ptext4 10AA                   __ptext5 1B04                   __ptext6 139D  
                 __ptext7 1C65                   __ptext8 1CE1                   __ptext9 095C  
             ?__div_to_l_ 0070                   _dpowers 1078                   _isdigit 1B04  
              ??___xxtofl 0074          ___awmod@dividend 0072                   _sprintf 01B2  
  __end_of_Lcd_Write_Char 1C2D      end_of_initialization 07FC           ___lldiv@divisor 0070  
         ___lldiv@counter 007D          I2C_Master_Init@c 0020          I2C_Master_Read@a 0070  
               Lcd_Port@a 0070         __end_of_portsetup 1B5C            __tdiv_to_l_@f1 0070  
          __tdiv_to_l_@f2 0074             ??__tdiv_to_l_ 0078                 _PORTDbits 0008  
             ___fladd@grs 0065             ___xxtofl@sign 0078                 _TRISCbits 0087  
             ___fldiv@grs 0052               ___fldiv@rem 004B           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0075         Lcd_Write_String@i 007A               ___flmul@grs 0032  
               _Lcd_Clear 1AF7            __end_of___flge 08A4            __end_of___fleq 1DB9  
          __end_of___wmul 1BA5          _Lcd_Write_String 1C9F            __end_of_fround 15A8  
     start_initialization 07F2       __end_of__tdiv_to_l_ 11CA         ??_I2C_Master_Init 0024  
       ??_I2C_Master_Read 0072         ??_I2C_Master_Wait 0070         ??_I2C_Master_Stop 0070  
         ___llmod@divisor 0070           ___llmod@counter 0079                ?_Lcd_Clear 0070  
                ??___flge 0078                  ??___fleq 0078                  ??___wmul 0074  
               __Umul8_16 1BA5           Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073  
                ??_fround 0042             sprintf@tmpval 00B7                 ___fladd@a 0056  
               ___fladd@b 0052                fround@prec 0051                 ___fldiv@a 003E  
               ___fldiv@b 0042                 ___flmul@a 0028                 ___flmul@b 0024  
               ___flsub@a 0066                 ___flsub@b 006A                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0           setupINTOSC@IRCF 0070  
                ?_Lcd_Cmd 0070               sprintf@flag 00AF               sprintf@eexp 00B5  
             sprintf@fval 00BE               sprintf@prec 00BC          _I2C_Master_Start 1AC3  
        _I2C_Master_Write 1AD5          ___lwdiv@dividend 0078          ??_Lcd_Set_Cursor 0075  
                ?___fladd 0052                  ?___fldiv 003E                  ?___awdiv 0077  
                ?___flneg 0070                  ?___awmod 0070                  ?___flmul 0024  
                ?___flsub 0066                  ?___fltol 0051                  ?___lldiv 0070  
                ?___llmod 0070                 __npowers_ 1044                ?__Umul8_16 0070  
                ?___lwdiv 0076                  ?___lwmod 0070                 __pstrings 1000  
             __tdiv_to_l_ 1113              ??__div_to_l_ 0078                  ?_isdigit 0070  
        ___lwdiv@quotient 007B                  ?_sprintf 00A0            ___wmul@product 0074  
                Lcd_Cmd@a 0073        __end_of__div_to_l_ 00DC               ??_Lcd_Clear 0074  
             __stringbase 100F             ??_setupINTOSC 0070                 _portsetup 1B38  
       ___wmul@multiplier 0070          ??_Lcd_Write_Char 0071                  _Lcd_Init 1E66  
                _Lcd_Port 1B16       I2C_Master_Read@temp 0074  __end_of_Lcd_Write_String 1CE1  
             ??__Umul8_16 0072               _fround$1015 004D               _fround$1016 0049  
      __end_of__stringtab 1010                ?_portsetup 0070               _isdigit$815 0070  
              sprintf@val 00B1           _I2C_Master_Init 1C2D           _I2C_Master_Read 1BCC  
                ___xxtofl 08A4           _I2C_Master_Wait 1AEA           _I2C_Master_Stop 1ACC  
         ___lwdiv@divisor 0076           ___lwdiv@counter 007D                  __ptext10 1BA5  
                __ptext11 1113                  __ptext20 0802                  __ptext12 0024  
                __ptext21 1D6B                  __ptext13 08A4                  __ptext30 1E66  
                __ptext22 1EC3                  __ptext14 1B80                  __ptext31 1AF7  
                __ptext23 1B38                  __ptext15 1DB9                  __ptext32 000A  
                __ptext24 1C2D                  __ptext16 1F88                  __ptext33 1B16  
                __ptext25 1F22                  __ptext17 1B5C                  __ptext34 1AD5  
                __ptext26 11CA                  __ptext18 15A8                  __ptext35 1ACC  
                __ptext27 1C9F                  __ptext19 1ADF                  __ptext36 1AC3  
                __ptext28 1BFA                  __ptext37 1BCC                  __ptext29 1D25  
                __ptext38 1AEA       __end_of_setupINTOSC 1F22                  __powers_ 1010  
__end_of_I2C_Master_Start 1ACC  __end_of_I2C_Master_Write 1ADF                  isdigit@c 0071  
                scale@scl 0050        Lcd_Write_Char@temp 0072                 sprintf@ap 00AE  
        __tdiv_to_l_@exp1 0025          __tdiv_to_l_@cntr 0024                 sprintf@sp 00BB  
        __tdiv_to_l_@quot 0020          ___lwmod@dividend 0072          ___lldiv@dividend 0074  
               stringcode 100A                _OSCCONbits 008F   __end_of_I2C_Master_Init 1C65  
 __end_of_I2C_Master_Read 1BFA   __end_of_I2C_Master_Wait 1AF7   __end_of_I2C_Master_Stop 1AD5  
      Lcd_Set_Cursor@temp 0079              ?__tdiv_to_l_ 0070               ??_portsetup 007E  
  __Umul8_16@multiplicand 0070               _setupINTOSC 1EC3                  sprintf@c 00C2  
                sprintf@f 00A0          ___lldiv@quotient 0079         I2C_Master_Write@d 0070  
         ___lwmod@divisor 0070           ___lwmod@counter 0075                  stringdir 100A  
                stringtab 1000               _SSPCON2bits 0091             ___fladd@signs 0062  
            ___fladd@aexp 0063              ___fladd@bexp 0064      __Umul8_16@multiplier 0078  
       __Umul8_16@product 0074  
