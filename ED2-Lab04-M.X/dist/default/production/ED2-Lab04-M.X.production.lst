

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 10 11:02:00 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2
    45                           	psect	text35,local,class=CODE,merge=1,delta=2
    46                           	psect	text36,local,class=CODE,merge=1,delta=2
    47                           	psect	text37,local,class=CODE,merge=1,delta=2
    48                           	psect	text38,local,class=CODE,merge=1,delta=2
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52     0000                     
    53                           ; Version 2.40
    54                           ; Generated 17/11/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F887 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88     0000                     	;# 
    89     0001                     	;# 
    90     0002                     	;# 
    91     0003                     	;# 
    92     0004                     	;# 
    93     0005                     	;# 
    94     0006                     	;# 
    95     0007                     	;# 
    96     0008                     	;# 
    97     0009                     	;# 
    98     000A                     	;# 
    99     000B                     	;# 
   100     000C                     	;# 
   101     000D                     	;# 
   102     000E                     	;# 
   103     000E                     	;# 
   104     000F                     	;# 
   105     0010                     	;# 
   106     0011                     	;# 
   107     0012                     	;# 
   108     0013                     	;# 
   109     0014                     	;# 
   110     0015                     	;# 
   111     0015                     	;# 
   112     0016                     	;# 
   113     0017                     	;# 
   114     0018                     	;# 
   115     0019                     	;# 
   116     001A                     	;# 
   117     001B                     	;# 
   118     001B                     	;# 
   119     001C                     	;# 
   120     001D                     	;# 
   121     001E                     	;# 
   122     001F                     	;# 
   123     0081                     	;# 
   124     0085                     	;# 
   125     0086                     	;# 
   126     0087                     	;# 
   127     0088                     	;# 
   128     0089                     	;# 
   129     008C                     	;# 
   130     008D                     	;# 
   131     008E                     	;# 
   132     008F                     	;# 
   133     0090                     	;# 
   134     0091                     	;# 
   135     0092                     	;# 
   136     0093                     	;# 
   137     0093                     	;# 
   138     0093                     	;# 
   139     0094                     	;# 
   140     0095                     	;# 
   141     0096                     	;# 
   142     0097                     	;# 
   143     0098                     	;# 
   144     0099                     	;# 
   145     009A                     	;# 
   146     009B                     	;# 
   147     009C                     	;# 
   148     009D                     	;# 
   149     009E                     	;# 
   150     009F                     	;# 
   151     0105                     	;# 
   152     0107                     	;# 
   153     0108                     	;# 
   154     0109                     	;# 
   155     010C                     	;# 
   156     010C                     	;# 
   157     010D                     	;# 
   158     010E                     	;# 
   159     010F                     	;# 
   160     0185                     	;# 
   161     0187                     	;# 
   162     0188                     	;# 
   163     0189                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0000                     	;# 
   167     0001                     	;# 
   168     0002                     	;# 
   169     0003                     	;# 
   170     0004                     	;# 
   171     0005                     	;# 
   172     0006                     	;# 
   173     0007                     	;# 
   174     0008                     	;# 
   175     0009                     	;# 
   176     000A                     	;# 
   177     000B                     	;# 
   178     000C                     	;# 
   179     000D                     	;# 
   180     000E                     	;# 
   181     000E                     	;# 
   182     000F                     	;# 
   183     0010                     	;# 
   184     0011                     	;# 
   185     0012                     	;# 
   186     0013                     	;# 
   187     0014                     	;# 
   188     0015                     	;# 
   189     0015                     	;# 
   190     0016                     	;# 
   191     0017                     	;# 
   192     0018                     	;# 
   193     0019                     	;# 
   194     001A                     	;# 
   195     001B                     	;# 
   196     001B                     	;# 
   197     001C                     	;# 
   198     001D                     	;# 
   199     001E                     	;# 
   200     001F                     	;# 
   201     0081                     	;# 
   202     0085                     	;# 
   203     0086                     	;# 
   204     0087                     	;# 
   205     0088                     	;# 
   206     0089                     	;# 
   207     008C                     	;# 
   208     008D                     	;# 
   209     008E                     	;# 
   210     008F                     	;# 
   211     0090                     	;# 
   212     0091                     	;# 
   213     0092                     	;# 
   214     0093                     	;# 
   215     0093                     	;# 
   216     0093                     	;# 
   217     0094                     	;# 
   218     0095                     	;# 
   219     0096                     	;# 
   220     0097                     	;# 
   221     0098                     	;# 
   222     0099                     	;# 
   223     009A                     	;# 
   224     009B                     	;# 
   225     009C                     	;# 
   226     009D                     	;# 
   227     009E                     	;# 
   228     009F                     	;# 
   229     0105                     	;# 
   230     0107                     	;# 
   231     0108                     	;# 
   232     0109                     	;# 
   233     010C                     	;# 
   234     010C                     	;# 
   235     010D                     	;# 
   236     010E                     	;# 
   237     010F                     	;# 
   238     0185                     	;# 
   239     0187                     	;# 
   240     0188                     	;# 
   241     0189                     	;# 
   242     018C                     	;# 
   243     018D                     	;# 
   244     0000                     	;# 
   245     0001                     	;# 
   246     0002                     	;# 
   247     0003                     	;# 
   248     0004                     	;# 
   249     0005                     	;# 
   250     0006                     	;# 
   251     0007                     	;# 
   252     0008                     	;# 
   253     0009                     	;# 
   254     000A                     	;# 
   255     000B                     	;# 
   256     000C                     	;# 
   257     000D                     	;# 
   258     000E                     	;# 
   259     000E                     	;# 
   260     000F                     	;# 
   261     0010                     	;# 
   262     0011                     	;# 
   263     0012                     	;# 
   264     0013                     	;# 
   265     0014                     	;# 
   266     0015                     	;# 
   267     0015                     	;# 
   268     0016                     	;# 
   269     0017                     	;# 
   270     0018                     	;# 
   271     0019                     	;# 
   272     001A                     	;# 
   273     001B                     	;# 
   274     001B                     	;# 
   275     001C                     	;# 
   276     001D                     	;# 
   277     001E                     	;# 
   278     001F                     	;# 
   279     0081                     	;# 
   280     0085                     	;# 
   281     0086                     	;# 
   282     0087                     	;# 
   283     0088                     	;# 
   284     0089                     	;# 
   285     008C                     	;# 
   286     008D                     	;# 
   287     008E                     	;# 
   288     008F                     	;# 
   289     0090                     	;# 
   290     0091                     	;# 
   291     0092                     	;# 
   292     0093                     	;# 
   293     0093                     	;# 
   294     0093                     	;# 
   295     0094                     	;# 
   296     0095                     	;# 
   297     0096                     	;# 
   298     0097                     	;# 
   299     0098                     	;# 
   300     0099                     	;# 
   301     009A                     	;# 
   302     009B                     	;# 
   303     009C                     	;# 
   304     009D                     	;# 
   305     009E                     	;# 
   306     009F                     	;# 
   307     0105                     	;# 
   308     0107                     	;# 
   309     0108                     	;# 
   310     0109                     	;# 
   311     010C                     	;# 
   312     010C                     	;# 
   313     010D                     	;# 
   314     010E                     	;# 
   315     010F                     	;# 
   316     0185                     	;# 
   317     0187                     	;# 
   318     0188                     	;# 
   319     0189                     	;# 
   320     018C                     	;# 
   321     018D                     	;# 
   322     0000                     	;# 
   323     0001                     	;# 
   324     0002                     	;# 
   325     0003                     	;# 
   326     0004                     	;# 
   327     0005                     	;# 
   328     0006                     	;# 
   329     0007                     	;# 
   330     0008                     	;# 
   331     0009                     	;# 
   332     000A                     	;# 
   333     000B                     	;# 
   334     000C                     	;# 
   335     000D                     	;# 
   336     000E                     	;# 
   337     000E                     	;# 
   338     000F                     	;# 
   339     0010                     	;# 
   340     0011                     	;# 
   341     0012                     	;# 
   342     0013                     	;# 
   343     0014                     	;# 
   344     0015                     	;# 
   345     0015                     	;# 
   346     0016                     	;# 
   347     0017                     	;# 
   348     0018                     	;# 
   349     0019                     	;# 
   350     001A                     	;# 
   351     001B                     	;# 
   352     001B                     	;# 
   353     001C                     	;# 
   354     001D                     	;# 
   355     001E                     	;# 
   356     001F                     	;# 
   357     0081                     	;# 
   358     0085                     	;# 
   359     0086                     	;# 
   360     0087                     	;# 
   361     0088                     	;# 
   362     0089                     	;# 
   363     008C                     	;# 
   364     008D                     	;# 
   365     008E                     	;# 
   366     008F                     	;# 
   367     0090                     	;# 
   368     0091                     	;# 
   369     0092                     	;# 
   370     0093                     	;# 
   371     0093                     	;# 
   372     0093                     	;# 
   373     0094                     	;# 
   374     0095                     	;# 
   375     0096                     	;# 
   376     0097                     	;# 
   377     0098                     	;# 
   378     0099                     	;# 
   379     009A                     	;# 
   380     009B                     	;# 
   381     009C                     	;# 
   382     009D                     	;# 
   383     009E                     	;# 
   384     009F                     	;# 
   385     0105                     	;# 
   386     0107                     	;# 
   387     0108                     	;# 
   388     0109                     	;# 
   389     010C                     	;# 
   390     010C                     	;# 
   391     010D                     	;# 
   392     010E                     	;# 
   393     010F                     	;# 
   394     0185                     	;# 
   395     0187                     	;# 
   396     0188                     	;# 
   397     0189                     	;# 
   398     018C                     	;# 
   399     018D                     	;# 
   400     0000                     	;# 
   401     0001                     	;# 
   402     0002                     	;# 
   403     0003                     	;# 
   404     0004                     	;# 
   405     0005                     	;# 
   406     0006                     	;# 
   407     0007                     	;# 
   408     0008                     	;# 
   409     0009                     	;# 
   410     000A                     	;# 
   411     000B                     	;# 
   412     000C                     	;# 
   413     000D                     	;# 
   414     000E                     	;# 
   415     000E                     	;# 
   416     000F                     	;# 
   417     0010                     	;# 
   418     0011                     	;# 
   419     0012                     	;# 
   420     0013                     	;# 
   421     0014                     	;# 
   422     0015                     	;# 
   423     0015                     	;# 
   424     0016                     	;# 
   425     0017                     	;# 
   426     0018                     	;# 
   427     0019                     	;# 
   428     001A                     	;# 
   429     001B                     	;# 
   430     001B                     	;# 
   431     001C                     	;# 
   432     001D                     	;# 
   433     001E                     	;# 
   434     001F                     	;# 
   435     0081                     	;# 
   436     0085                     	;# 
   437     0086                     	;# 
   438     0087                     	;# 
   439     0088                     	;# 
   440     0089                     	;# 
   441     008C                     	;# 
   442     008D                     	;# 
   443     008E                     	;# 
   444     008F                     	;# 
   445     0090                     	;# 
   446     0091                     	;# 
   447     0092                     	;# 
   448     0093                     	;# 
   449     0093                     	;# 
   450     0093                     	;# 
   451     0094                     	;# 
   452     0095                     	;# 
   453     0096                     	;# 
   454     0097                     	;# 
   455     0098                     	;# 
   456     0099                     	;# 
   457     009A                     	;# 
   458     009B                     	;# 
   459     009C                     	;# 
   460     009D                     	;# 
   461     009E                     	;# 
   462     009F                     	;# 
   463     0105                     	;# 
   464     0107                     	;# 
   465     0108                     	;# 
   466     0109                     	;# 
   467     010C                     	;# 
   468     010C                     	;# 
   469     010D                     	;# 
   470     010E                     	;# 
   471     010F                     	;# 
   472     0185                     	;# 
   473     0187                     	;# 
   474     0188                     	;# 
   475     0189                     	;# 
   476     018C                     	;# 
   477     018D                     	;# 
   478     0000                     	;# 
   479     0001                     	;# 
   480     0002                     	;# 
   481     0003                     	;# 
   482     0004                     	;# 
   483     0005                     	;# 
   484     0006                     	;# 
   485     0007                     	;# 
   486     0008                     	;# 
   487     0009                     	;# 
   488     000A                     	;# 
   489     000B                     	;# 
   490     000C                     	;# 
   491     000D                     	;# 
   492     000E                     	;# 
   493     000E                     	;# 
   494     000F                     	;# 
   495     0010                     	;# 
   496     0011                     	;# 
   497     0012                     	;# 
   498     0013                     	;# 
   499     0014                     	;# 
   500     0015                     	;# 
   501     0015                     	;# 
   502     0016                     	;# 
   503     0017                     	;# 
   504     0018                     	;# 
   505     0019                     	;# 
   506     001A                     	;# 
   507     001B                     	;# 
   508     001B                     	;# 
   509     001C                     	;# 
   510     001D                     	;# 
   511     001E                     	;# 
   512     001F                     	;# 
   513     0081                     	;# 
   514     0085                     	;# 
   515     0086                     	;# 
   516     0087                     	;# 
   517     0088                     	;# 
   518     0089                     	;# 
   519     008C                     	;# 
   520     008D                     	;# 
   521     008E                     	;# 
   522     008F                     	;# 
   523     0090                     	;# 
   524     0091                     	;# 
   525     0092                     	;# 
   526     0093                     	;# 
   527     0093                     	;# 
   528     0093                     	;# 
   529     0094                     	;# 
   530     0095                     	;# 
   531     0096                     	;# 
   532     0097                     	;# 
   533     0098                     	;# 
   534     0099                     	;# 
   535     009A                     	;# 
   536     009B                     	;# 
   537     009C                     	;# 
   538     009D                     	;# 
   539     009E                     	;# 
   540     009F                     	;# 
   541     0105                     	;# 
   542     0107                     	;# 
   543     0108                     	;# 
   544     0109                     	;# 
   545     010C                     	;# 
   546     010C                     	;# 
   547     010D                     	;# 
   548     010E                     	;# 
   549     010F                     	;# 
   550     0185                     	;# 
   551     0187                     	;# 
   552     0188                     	;# 
   553     0189                     	;# 
   554     018C                     	;# 
   555     018D                     	;# 
   556                           
   557                           	psect	strings
   558     1000                     __pstrings:
   559     1000                     stringtab:
   560     1000                     __stringtab:
   561                           
   562                           ;	String table - string pointers are 1 byte each
   563     1000  1BFF               	btfsc	btemp+1,7
   564     1001  280A               	ljmp	stringcode
   565     1002  1383               	bcf	3,7
   566     1003  187F               	btfsc	btemp+1,0
   567     1004  1783               	bsf	3,7
   568     1005  0800               	movf	0,w
   569     1006  0A84               	incf	4,f
   570     1007  1903               	skipnz
   571     1008  0AFF               	incf	btemp+1,f
   572     1009  0008               	return
   573     100A                     stringcode:
   574     100A                     stringdir:
   575     100A  3010               	movlw	high stringdir
   576     100B  008A               	movwf	10
   577     100C  0804               	movf	4,w
   578     100D  0A84               	incf	4,f
   579     100E  0782               	addwf	2,f
   580     100F                     __stringbase:
   581     100F  3400               	retlw	0
   582     1010                     __end_of__stringtab:
   583     1010                     __powers_:
   584     1010  3400               	retlw	0
   585     1011  3400               	retlw	0
   586     1012  3480               	retlw	128
   587     1013  343F               	retlw	63
   588     1014  3400               	retlw	0
   589     1015  3400               	retlw	0
   590     1016  3420               	retlw	32
   591     1017  3441               	retlw	65
   592     1018  3400               	retlw	0
   593     1019  3400               	retlw	0
   594     101A  34C8               	retlw	200
   595     101B  3442               	retlw	66
   596     101C  3400               	retlw	0
   597     101D  3400               	retlw	0
   598     101E  347A               	retlw	122
   599     101F  3444               	retlw	68
   600     1020  3400               	retlw	0
   601     1021  3440               	retlw	64
   602     1022  341C               	retlw	28
   603     1023  3446               	retlw	70
   604     1024  3400               	retlw	0
   605     1025  3450               	retlw	80
   606     1026  34C3               	retlw	195
   607     1027  3447               	retlw	71
   608     1028  3400               	retlw	0
   609     1029  3424               	retlw	36
   610     102A  3474               	retlw	116
   611     102B  3449               	retlw	73
   612     102C  3480               	retlw	128
   613     102D  3496               	retlw	150
   614     102E  3418               	retlw	24
   615     102F  344B               	retlw	75
   616     1030  3420               	retlw	32
   617     1031  34BC               	retlw	188
   618     1032  34BE               	retlw	190
   619     1033  344C               	retlw	76
   620     1034  3428               	retlw	40
   621     1035  346B               	retlw	107
   622     1036  346E               	retlw	110
   623     1037  344E               	retlw	78
   624     1038  34F9               	retlw	249
   625     1039  3402               	retlw	2
   626     103A  3415               	retlw	21
   627     103B  3450               	retlw	80
   628     103C  34EC               	retlw	236
   629     103D  3478               	retlw	120
   630     103E  34AD               	retlw	173
   631     103F  3460               	retlw	96
   632     1040  34CA               	retlw	202
   633     1041  34F2               	retlw	242
   634     1042  3449               	retlw	73
   635     1043  3471               	retlw	113
   636     1044                     __end_of__powers_:
   637     1044                     __npowers_:
   638     1044  3400               	retlw	0
   639     1045  3400               	retlw	0
   640     1046  3480               	retlw	128
   641     1047  343F               	retlw	63
   642     1048  34CD               	retlw	205
   643     1049  34CC               	retlw	204
   644     104A  34CC               	retlw	204
   645     104B  343D               	retlw	61
   646     104C  340A               	retlw	10
   647     104D  34D7               	retlw	215
   648     104E  3423               	retlw	35
   649     104F  343C               	retlw	60
   650     1050  346F               	retlw	111
   651     1051  3412               	retlw	18
   652     1052  3483               	retlw	131
   653     1053  343A               	retlw	58
   654     1054  3417               	retlw	23
   655     1055  34B7               	retlw	183
   656     1056  34D1               	retlw	209
   657     1057  3438               	retlw	56
   658     1058  34AC               	retlw	172
   659     1059  34C5               	retlw	197
   660     105A  3427               	retlw	39
   661     105B  3437               	retlw	55
   662     105C  34BD               	retlw	189
   663     105D  3437               	retlw	55
   664     105E  3486               	retlw	134
   665     105F  3435               	retlw	53
   666     1060  3495               	retlw	149
   667     1061  34BF               	retlw	191
   668     1062  34D6               	retlw	214
   669     1063  3433               	retlw	51
   670     1064  3477               	retlw	119
   671     1065  34CC               	retlw	204
   672     1066  342B               	retlw	43
   673     1067  3432               	retlw	50
   674     1068  345F               	retlw	95
   675     1069  3470               	retlw	112
   676     106A  3489               	retlw	137
   677     106B  3430               	retlw	48
   678     106C  34FF               	retlw	255
   679     106D  34E6               	retlw	230
   680     106E  34DB               	retlw	219
   681     106F  342E               	retlw	46
   682     1070  3408               	retlw	8
   683     1071  34E5               	retlw	229
   684     1072  343C               	retlw	60
   685     1073  341E               	retlw	30
   686     1074  3460               	retlw	96
   687     1075  3442               	retlw	66
   688     1076  34A2               	retlw	162
   689     1077  340D               	retlw	13
   690     1078                     __end_of__npowers_:
   691     1078                     _dpowers:
   692     1078  3401               	retlw	1
   693     1079  3400               	retlw	0
   694     107A  3400               	retlw	0
   695     107B  3400               	retlw	0
   696     107C  340A               	retlw	10
   697     107D  3400               	retlw	0
   698     107E  3400               	retlw	0
   699     107F  3400               	retlw	0
   700     1080  3464               	retlw	100
   701     1081  3400               	retlw	0
   702     1082  3400               	retlw	0
   703     1083  3400               	retlw	0
   704     1084  34E8               	retlw	232
   705     1085  3403               	retlw	3
   706     1086  3400               	retlw	0
   707     1087  3400               	retlw	0
   708     1088  3410               	retlw	16
   709     1089  3427               	retlw	39
   710     108A  3400               	retlw	0
   711     108B  3400               	retlw	0
   712     108C  34A0               	retlw	160
   713     108D  3486               	retlw	134
   714     108E  3401               	retlw	1
   715     108F  3400               	retlw	0
   716     1090  3440               	retlw	64
   717     1091  3442               	retlw	66
   718     1092  340F               	retlw	15
   719     1093  3400               	retlw	0
   720     1094  3480               	retlw	128
   721     1095  3496               	retlw	150
   722     1096  3498               	retlw	152
   723     1097  3400               	retlw	0
   724     1098  3400               	retlw	0
   725     1099  34E1               	retlw	225
   726     109A  34F5               	retlw	245
   727     109B  3405               	retlw	5
   728     109C  3400               	retlw	0
   729     109D  34CA               	retlw	202
   730     109E  349A               	retlw	154
   731     109F  343B               	retlw	59
   732     10A0                     __end_of_dpowers:
   733     0013                     _SSPBUF	set	19
   734     0014                     _SSPCON	set	20
   735     0008                     _PORTDbits	set	8
   736     0006                     _PORTB	set	6
   737     0008                     _PORTD	set	8
   738     0005                     _PORTA	set	5
   739     0063                     _SSPIF	set	99
   740     005E                     _PEIE	set	94
   741     005F                     _GIE	set	95
   742     0043                     _RD3	set	67
   743     0047                     _RD7	set	71
   744     0046                     _RD6	set	70
   745     0045                     _RD5	set	69
   746     0044                     _RD4	set	68
   747     0091                     _SSPCON2bits	set	145
   748     0087                     _TRISCbits	set	135
   749     0094                     _SSPSTAT	set	148
   750     0093                     _SSPADD	set	147
   751     0091                     _SSPCON2	set	145
   752     008F                     _OSCCONbits	set	143
   753     0086                     _TRISB	set	134
   754     0088                     _TRISD	set	136
   755     0085                     _TRISA	set	133
   756     0463                     _SSPIE	set	1123
   757     043C                     _TRISC4	set	1084
   758     043B                     _TRISC3	set	1083
   759     0189                     _ANSELH	set	393
   760     0188                     _ANSEL	set	392
   761     10A0                     STR_2:
   762     10A0  3420               	retlw	32	;' '
   763     10A1  3420               	retlw	32	;' '
   764     10A2  3420               	retlw	32	;' '
   765     10A3  3420               	retlw	32	;' '
   766     10A4  3456               	retlw	86	;'V'
   767     10A5  3400               	retlw	0
   768     10A6                     STR_1:
   769     10A6  3453               	retlw	83	;'S'
   770     10A7  3431               	retlw	49	;'1'
   771     10A8  343A               	retlw	58	;':'
   772     10A9  3420               	retlw	32	;' '
   773     10AA  3400               	retlw	0
   774     10AB                     STR_3:
   775     10AB  3425               	retlw	37	;'%'
   776     10AC  342E               	retlw	46	;'.'
   777     10AD  3432               	retlw	50	;'2'
   778     10AE  3466               	retlw	102	;'f'
   779     10AF  3400               	retlw	0
   780                           
   781                           	psect	cinit
   782     07F2                     start_initialization:	
   783                           ; #config settings
   784                           
   785     07F2                     __initialization:
   786                           
   787                           ; Clear objects allocated to BANK1
   788     07F2  1683               	bsf	3,5	;RP0=1, select bank1
   789     07F3  1303               	bcf	3,6	;RP1=0, select bank1
   790     07F4  01C7               	clrf	__pbssBANK1& (0+127)
   791     07F5  01C8               	clrf	(__pbssBANK1+1)& (0+127)
   792     07F6  01C9               	clrf	(__pbssBANK1+2)& (0+127)
   793     07F7  01CA               	clrf	(__pbssBANK1+3)& (0+127)
   794     07F8  01CB               	clrf	(__pbssBANK1+4)& (0+127)
   795     07F9  01CC               	clrf	(__pbssBANK1+5)& (0+127)
   796     07FA  01CD               	clrf	(__pbssBANK1+6)& (0+127)
   797     07FB  01CE               	clrf	(__pbssBANK1+7)& (0+127)
   798     07FC                     end_of_initialization:	
   799                           ;End of C runtime variable initialization code
   800                           
   801     07FC                     __end_of__initialization:
   802     07FC  0183               	clrf	3
   803     07FD  120A  118A  28CB   	ljmp	_main	;jump to C main() function
   804                           
   805                           	psect	bssBANK1
   806     00C7                     __pbssBANK1:
   807     00C7                     _conver:
   808     00C7                     	ds	4
   809     00CB                     _lecADC:
   810     00CB                     	ds	1
   811     00CC                     _valADC:
   812     00CC                     	ds	3
   813                           
   814                           	psect	cstackBANK1
   815     00A0                     __pcstackBANK1:
   816     00A0                     ?_sprintf:
   817     00A0                     sprintf@f:	
   818                           ; 2 bytes @ 0x0
   819                           
   820                           
   821                           ; 1 bytes @ 0x0
   822     00A0                     	ds	5
   823     00A5                     ??_sprintf:
   824                           
   825                           ; 1 bytes @ 0x5
   826     00A5                     	ds	5
   827     00AA                     _sprintf$1019:
   828                           
   829                           ; 4 bytes @ 0xA
   830     00AA                     	ds	4
   831     00AE                     sprintf@ap:
   832                           
   833                           ; 1 bytes @ 0xE
   834     00AE                     	ds	1
   835     00AF                     sprintf@flag:
   836                           
   837                           ; 2 bytes @ 0xF
   838     00AF                     	ds	2
   839     00B1                     sprintf@val:
   840                           
   841                           ; 4 bytes @ 0x11
   842     00B1                     	ds	4
   843     00B5                     sprintf@eexp:
   844                           
   845                           ; 2 bytes @ 0x15
   846     00B5                     	ds	2
   847     00B7                     sprintf@tmpval:
   848                           
   849                           ; 4 bytes @ 0x17
   850     00B7                     	ds	4
   851     00BB                     sprintf@sp:
   852                           
   853                           ; 1 bytes @ 0x1B
   854     00BB                     	ds	1
   855     00BC                     sprintf@prec:
   856                           
   857                           ; 2 bytes @ 0x1C
   858     00BC                     	ds	2
   859     00BE                     sprintf@fval:
   860                           
   861                           ; 4 bytes @ 0x1E
   862     00BE                     	ds	4
   863     00C2                     sprintf@c:
   864                           
   865                           ; 1 bytes @ 0x22
   866     00C2                     	ds	1
   867     00C3                     ??_main:
   868                           
   869                           ; 1 bytes @ 0x23
   870     00C3                     	ds	4
   871                           
   872                           	psect	cstackCOMMON
   873     0070                     __pcstackCOMMON:
   874     0070                     ?_isdigit:
   875     0070                     ?___fleq:	
   876                           ; 1 bit 
   877                           
   878     0070                     ?___flge:	
   879                           ; 1 bit 
   880                           
   881     0070                     ?_setupINTOSC:	
   882                           ; 1 bit 
   883                           
   884     0070                     ??_setupINTOSC:	
   885                           ; 1 bytes @ 0x0
   886                           
   887     0070                     ?_portsetup:	
   888                           ; 1 bytes @ 0x0
   889                           
   890     0070                     ?_Lcd_Init:	
   891                           ; 1 bytes @ 0x0
   892                           
   893     0070                     ?_Lcd_Clear:	
   894                           ; 1 bytes @ 0x0
   895                           
   896     0070                     ?_I2C_Master_Start:	
   897                           ; 1 bytes @ 0x0
   898                           
   899     0070                     ??_I2C_Master_Start:	
   900                           ; 1 bytes @ 0x0
   901                           
   902     0070                     ?_I2C_Master_Write:	
   903                           ; 1 bytes @ 0x0
   904                           
   905     0070                     ?_I2C_Master_Stop:	
   906                           ; 1 bytes @ 0x0
   907                           
   908     0070                     ??_I2C_Master_Stop:	
   909                           ; 1 bytes @ 0x0
   910                           
   911     0070                     ??_isdigit:	
   912                           ; 1 bytes @ 0x0
   913                           
   914     0070                     ?_main:	
   915                           ; 1 bytes @ 0x0
   916                           
   917     0070                     ?_Lcd_Port:	
   918                           ; 1 bytes @ 0x0
   919                           
   920     0070                     ??_Lcd_Port:	
   921                           ; 1 bytes @ 0x0
   922                           
   923     0070                     ?_Lcd_Cmd:	
   924                           ; 1 bytes @ 0x0
   925                           
   926     0070                     ?_Lcd_Write_Char:	
   927                           ; 1 bytes @ 0x0
   928                           
   929     0070                     ?_I2C_Master_Wait:	
   930                           ; 1 bytes @ 0x0
   931                           
   932     0070                     ??_I2C_Master_Wait:	
   933                           ; 1 bytes @ 0x0
   934                           
   935     0070                     ?_I2C_Master_Read:	
   936                           ; 1 bytes @ 0x0
   937                           
   938     0070                     ?__Umul8_16:	
   939                           ; 2 bytes @ 0x0
   940                           
   941     0070                     ?___wmul:	
   942                           ; 2 bytes @ 0x0
   943                           
   944     0070                     ?___awmod:	
   945                           ; 2 bytes @ 0x0
   946                           
   947     0070                     ?___lwmod:	
   948                           ; 2 bytes @ 0x0
   949                           
   950     0070                     ?__tdiv_to_l_:	
   951                           ; 2 bytes @ 0x0
   952                           
   953     0070                     ?__div_to_l_:	
   954                           ; 4 bytes @ 0x0
   955                           
   956     0070                     ?___lldiv:	
   957                           ; 4 bytes @ 0x0
   958                           
   959     0070                     ?___flneg:	
   960                           ; 4 bytes @ 0x0
   961                           
   962     0070                     ?___llmod:	
   963                           ; 4 bytes @ 0x0
   964                           
   965     0070                     ?___xxtofl:	
   966                           ; 4 bytes @ 0x0
   967                           
   968     0070                     Lcd_Port@a:	
   969                           ; 4 bytes @ 0x0
   970                           
   971     0070                     setupINTOSC@IRCF:	
   972                           ; 1 bytes @ 0x0
   973                           
   974     0070                     __Umul8_16@multiplicand:	
   975                           ; 1 bytes @ 0x0
   976                           
   977     0070                     _isdigit$816:	
   978                           ; 1 bytes @ 0x0
   979                           
   980     0070                     I2C_Master_Write@d:	
   981                           ; 1 bytes @ 0x0
   982                           
   983     0070                     I2C_Master_Read@a:	
   984                           ; 2 bytes @ 0x0
   985                           
   986     0070                     ___wmul@multiplier:	
   987                           ; 2 bytes @ 0x0
   988                           
   989     0070                     ___awmod@divisor:	
   990                           ; 2 bytes @ 0x0
   991                           
   992     0070                     ___lwmod@divisor:	
   993                           ; 2 bytes @ 0x0
   994                           
   995     0070                     ___lldiv@divisor:	
   996                           ; 2 bytes @ 0x0
   997                           
   998     0070                     __div_to_l_@f1:	
   999                           ; 4 bytes @ 0x0
  1000                           
  1001     0070                     ___fleq@ff1:	
  1002                           ; 4 bytes @ 0x0
  1003                           
  1004     0070                     ___flge@ff1:	
  1005                           ; 4 bytes @ 0x0
  1006                           
  1007     0070                     ___flneg@f1:	
  1008                           ; 4 bytes @ 0x0
  1009                           
  1010     0070                     __tdiv_to_l_@f1:	
  1011                           ; 4 bytes @ 0x0
  1012                           
  1013     0070                     ___llmod@divisor:	
  1014                           ; 4 bytes @ 0x0
  1015                           
  1016     0070                     ___xxtofl@val:	
  1017                           ; 4 bytes @ 0x0
  1018                           
  1019                           
  1020                           ; 4 bytes @ 0x0
  1021     0070                     	ds	1
  1022     0071                     ??_Lcd_Cmd:
  1023     0071                     ??_Lcd_Write_Char:	
  1024                           ; 1 bytes @ 0x1
  1025                           
  1026     0071                     isdigit@c:	
  1027                           ; 1 bytes @ 0x1
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0x1
  1031     0071                     	ds	1
  1032     0072                     ??_I2C_Master_Write:
  1033     0072                     ??_I2C_Master_Read:	
  1034                           ; 1 bytes @ 0x2
  1035                           
  1036     0072                     ??__Umul8_16:	
  1037                           ; 1 bytes @ 0x2
  1038                           
  1039     0072                     Lcd_Write_Char@temp:	
  1040                           ; 1 bytes @ 0x2
  1041                           
  1042     0072                     ___wmul@multiplicand:	
  1043                           ; 1 bytes @ 0x2
  1044                           
  1045     0072                     ___awmod@dividend:	
  1046                           ; 2 bytes @ 0x2
  1047                           
  1048     0072                     ___lwmod@dividend:	
  1049                           ; 2 bytes @ 0x2
  1050                           
  1051                           
  1052                           ; 2 bytes @ 0x2
  1053     0072                     	ds	1
  1054     0073                     Lcd_Cmd@a:
  1055     0073                     Lcd_Write_Char@y:	
  1056                           ; 1 bytes @ 0x3
  1057                           
  1058                           
  1059                           ; 1 bytes @ 0x3
  1060     0073                     	ds	1
  1061     0074                     ??_Lcd_Init:
  1062     0074                     ??_Lcd_Clear:	
  1063                           ; 1 bytes @ 0x4
  1064                           
  1065     0074                     ?_Lcd_Set_Cursor:	
  1066                           ; 1 bytes @ 0x4
  1067                           
  1068     0074                     ??___wmul:	
  1069                           ; 1 bytes @ 0x4
  1070                           
  1071     0074                     ??___awmod:	
  1072                           ; 1 bytes @ 0x4
  1073                           
  1074     0074                     ??___flneg:	
  1075                           ; 1 bytes @ 0x4
  1076                           
  1077     0074                     ??___lwmod:	
  1078                           ; 1 bytes @ 0x4
  1079                           
  1080     0074                     ??___xxtofl:	
  1081                           ; 1 bytes @ 0x4
  1082                           
  1083     0074                     Lcd_Set_Cursor@b:	
  1084                           ; 1 bytes @ 0x4
  1085                           
  1086     0074                     Lcd_Write_Char@a:	
  1087                           ; 1 bytes @ 0x4
  1088                           
  1089     0074                     I2C_Master_Read@temp:	
  1090                           ; 1 bytes @ 0x4
  1091                           
  1092     0074                     ___wmul@product:	
  1093                           ; 2 bytes @ 0x4
  1094                           
  1095     0074                     __Umul8_16@product:	
  1096                           ; 2 bytes @ 0x4
  1097                           
  1098     0074                     ___lldiv@dividend:	
  1099                           ; 2 bytes @ 0x4
  1100                           
  1101     0074                     __div_to_l_@f2:	
  1102                           ; 4 bytes @ 0x4
  1103                           
  1104     0074                     ___fleq@ff2:	
  1105                           ; 4 bytes @ 0x4
  1106                           
  1107     0074                     ___flge@ff2:	
  1108                           ; 4 bytes @ 0x4
  1109                           
  1110     0074                     __tdiv_to_l_@f2:	
  1111                           ; 4 bytes @ 0x4
  1112                           
  1113     0074                     ___llmod@dividend:	
  1114                           ; 4 bytes @ 0x4
  1115                           
  1116                           
  1117                           ; 4 bytes @ 0x4
  1118     0074                     	ds	1
  1119     0075                     ??_Lcd_Set_Cursor:
  1120     0075                     ?_Lcd_Write_String:	
  1121                           ; 1 bytes @ 0x5
  1122                           
  1123     0075                     ___awmod@counter:	
  1124                           ; 1 bytes @ 0x5
  1125                           
  1126     0075                     ___lwmod@counter:	
  1127                           ; 1 bytes @ 0x5
  1128                           
  1129     0075                     Lcd_Write_String@a:	
  1130                           ; 1 bytes @ 0x5
  1131                           
  1132                           
  1133                           ; 2 bytes @ 0x5
  1134     0075                     	ds	1
  1135     0076                     ?___lwdiv:
  1136     0076                     Lcd_Set_Cursor@a:	
  1137                           ; 2 bytes @ 0x6
  1138                           
  1139     0076                     ___awmod@sign:	
  1140                           ; 1 bytes @ 0x6
  1141                           
  1142     0076                     ___lwdiv@divisor:	
  1143                           ; 1 bytes @ 0x6
  1144                           
  1145     0076                     __Umul8_16@word_mpld:	
  1146                           ; 2 bytes @ 0x6
  1147                           
  1148                           
  1149                           ; 2 bytes @ 0x6
  1150     0076                     	ds	1
  1151     0077                     ??_Lcd_Write_String:
  1152     0077                     ?___awdiv:	
  1153                           ; 1 bytes @ 0x7
  1154                           
  1155     0077                     Lcd_Set_Cursor@z:	
  1156                           ; 2 bytes @ 0x7
  1157                           
  1158     0077                     ___awdiv@divisor:	
  1159                           ; 1 bytes @ 0x7
  1160                           
  1161                           
  1162                           ; 2 bytes @ 0x7
  1163     0077                     	ds	1
  1164     0078                     ??__tdiv_to_l_:
  1165     0078                     ??__div_to_l_:	
  1166                           ; 1 bytes @ 0x8
  1167                           
  1168     0078                     ??___lldiv:	
  1169                           ; 1 bytes @ 0x8
  1170                           
  1171     0078                     ??___fleq:	
  1172                           ; 1 bytes @ 0x8
  1173                           
  1174     0078                     ??___flge:	
  1175                           ; 1 bytes @ 0x8
  1176                           
  1177     0078                     ??___llmod:	
  1178                           ; 1 bytes @ 0x8
  1179                           
  1180     0078                     Lcd_Set_Cursor@y:	
  1181                           ; 1 bytes @ 0x8
  1182                           
  1183     0078                     __Umul8_16@multiplier:	
  1184                           ; 1 bytes @ 0x8
  1185                           
  1186     0078                     ___xxtofl@sign:	
  1187                           ; 1 bytes @ 0x8
  1188                           
  1189     0078                     ___lwdiv@dividend:	
  1190                           ; 1 bytes @ 0x8
  1191                           
  1192                           
  1193                           ; 2 bytes @ 0x8
  1194     0078                     	ds	1
  1195     0079                     Lcd_Set_Cursor@temp:
  1196     0079                     ___llmod@counter:	
  1197                           ; 1 bytes @ 0x9
  1198                           
  1199     0079                     ___xxtofl@exp:	
  1200                           ; 1 bytes @ 0x9
  1201                           
  1202     0079                     ___awdiv@dividend:	
  1203                           ; 1 bytes @ 0x9
  1204                           
  1205     0079                     ___lldiv@quotient:	
  1206                           ; 2 bytes @ 0x9
  1207                           
  1208                           
  1209                           ; 4 bytes @ 0x9
  1210     0079                     	ds	1
  1211     007A                     ??___lwdiv:
  1212     007A                     Lcd_Write_String@i:	
  1213                           ; 1 bytes @ 0xA
  1214                           
  1215     007A                     ___xxtofl@arg:	
  1216                           ; 2 bytes @ 0xA
  1217                           
  1218                           
  1219                           ; 4 bytes @ 0xA
  1220     007A                     	ds	1
  1221     007B                     ??___awdiv:
  1222     007B                     ___lwdiv@quotient:	
  1223                           ; 1 bytes @ 0xB
  1224                           
  1225                           
  1226                           ; 2 bytes @ 0xB
  1227     007B                     	ds	2
  1228     007D                     ___lldiv@counter:
  1229     007D                     ___lwdiv@counter:	
  1230                           ; 1 bytes @ 0xD
  1231                           
  1232                           
  1233                           ; 1 bytes @ 0xD
  1234     007D                     	ds	1
  1235     007E                     ??_portsetup:
  1236     007E                     ??___flsub:	
  1237                           ; 1 bytes @ 0xE
  1238                           
  1239                           
  1240                           	psect	cstackBANK0
  1241     0020                     __pcstackBANK0:	
  1242                           ; 1 bytes @ 0xE
  1243                           
  1244     0020                     ?_I2C_Master_Init:
  1245     0020                     ___awdiv@counter:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248     0020                     I2C_Master_Init@c:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251     0020                     __div_to_l_@quot:	
  1252                           ; 4 bytes @ 0x0
  1253                           
  1254     0020                     __tdiv_to_l_@quot:	
  1255                           ; 4 bytes @ 0x0
  1256                           
  1257                           
  1258                           ; 4 bytes @ 0x0
  1259     0020                     	ds	1
  1260     0021                     ___awdiv@sign:
  1261                           
  1262                           ; 1 bytes @ 0x1
  1263     0021                     	ds	1
  1264     0022                     ___awdiv@quotient:
  1265                           
  1266                           ; 2 bytes @ 0x2
  1267     0022                     	ds	2
  1268     0024                     ??_I2C_Master_Init:
  1269     0024                     ?___flmul:	
  1270                           ; 1 bytes @ 0x4
  1271                           
  1272     0024                     __div_to_l_@cntr:	
  1273                           ; 4 bytes @ 0x4
  1274                           
  1275     0024                     __tdiv_to_l_@cntr:	
  1276                           ; 1 bytes @ 0x4
  1277                           
  1278     0024                     ___flmul@b:	
  1279                           ; 1 bytes @ 0x4
  1280                           
  1281                           
  1282                           ; 4 bytes @ 0x4
  1283     0024                     	ds	1
  1284     0025                     __div_to_l_@exp1:
  1285     0025                     __tdiv_to_l_@exp1:	
  1286                           ; 1 bytes @ 0x5
  1287                           
  1288                           
  1289                           ; 1 bytes @ 0x5
  1290     0025                     	ds	3
  1291     0028                     ___flmul@a:
  1292                           
  1293                           ; 4 bytes @ 0x8
  1294     0028                     	ds	4
  1295     002C                     ??___flmul:
  1296                           
  1297                           ; 1 bytes @ 0xC
  1298     002C                     	ds	5
  1299     0031                     ___flmul@sign:
  1300                           
  1301                           ; 1 bytes @ 0x11
  1302     0031                     	ds	1
  1303     0032                     ___flmul@grs:
  1304                           
  1305                           ; 4 bytes @ 0x12
  1306     0032                     	ds	4
  1307     0036                     ___flmul@aexp:
  1308                           
  1309                           ; 1 bytes @ 0x16
  1310     0036                     	ds	1
  1311     0037                     ___flmul@bexp:
  1312                           
  1313                           ; 1 bytes @ 0x17
  1314     0037                     	ds	1
  1315     0038                     ___flmul@prod:
  1316                           
  1317                           ; 4 bytes @ 0x18
  1318     0038                     	ds	4
  1319     003C                     ___flmul@temp:
  1320                           
  1321                           ; 2 bytes @ 0x1C
  1322     003C                     	ds	2
  1323     003E                     ?_fround:
  1324     003E                     ?_scale:	
  1325                           ; 4 bytes @ 0x1E
  1326                           
  1327     003E                     ?___fldiv:	
  1328                           ; 4 bytes @ 0x1E
  1329                           
  1330     003E                     ___fldiv@a:	
  1331                           ; 4 bytes @ 0x1E
  1332                           
  1333                           
  1334                           ; 4 bytes @ 0x1E
  1335     003E                     	ds	4
  1336     0042                     ??_fround:
  1337     0042                     ??_scale:	
  1338                           ; 1 bytes @ 0x22
  1339                           
  1340     0042                     ___fldiv@b:	
  1341                           ; 1 bytes @ 0x22
  1342                           
  1343                           
  1344                           ; 4 bytes @ 0x22
  1345     0042                     	ds	4
  1346     0046                     ??___fldiv:
  1347                           
  1348                           ; 1 bytes @ 0x26
  1349     0046                     	ds	3
  1350     0049                     _fround$1017:
  1351                           
  1352                           ; 4 bytes @ 0x29
  1353     0049                     	ds	2
  1354     004B                     ___fldiv@rem:
  1355                           
  1356                           ; 4 bytes @ 0x2B
  1357     004B                     	ds	1
  1358     004C                     _scale$1018:
  1359                           
  1360                           ; 4 bytes @ 0x2C
  1361     004C                     	ds	1
  1362     004D                     _fround$1016:
  1363                           
  1364                           ; 4 bytes @ 0x2D
  1365     004D                     	ds	2
  1366     004F                     ___fldiv@sign:
  1367                           
  1368                           ; 1 bytes @ 0x2F
  1369     004F                     	ds	1
  1370     0050                     scale@scl:
  1371     0050                     ___fldiv@new_exp:	
  1372                           ; 1 bytes @ 0x30
  1373                           
  1374                           
  1375                           ; 2 bytes @ 0x30
  1376     0050                     	ds	1
  1377     0051                     ?___fltol:
  1378     0051                     fround@prec:	
  1379                           ; 4 bytes @ 0x31
  1380                           
  1381     0051                     ___fltol@f1:	
  1382                           ; 1 bytes @ 0x31
  1383                           
  1384                           
  1385                           ; 4 bytes @ 0x31
  1386     0051                     	ds	1
  1387     0052                     ?___fladd:
  1388     0052                     ___fladd@b:	
  1389                           ; 4 bytes @ 0x32
  1390                           
  1391     0052                     ___fldiv@grs:	
  1392                           ; 4 bytes @ 0x32
  1393                           
  1394                           
  1395                           ; 4 bytes @ 0x32
  1396     0052                     	ds	3
  1397     0055                     ??___fltol:
  1398                           
  1399                           ; 1 bytes @ 0x35
  1400     0055                     	ds	1
  1401     0056                     ___fldiv@bexp:
  1402     0056                     ___fladd@a:	
  1403                           ; 1 bytes @ 0x36
  1404                           
  1405                           
  1406                           ; 4 bytes @ 0x36
  1407     0056                     	ds	1
  1408     0057                     ___fldiv@aexp:
  1409                           
  1410                           ; 1 bytes @ 0x37
  1411     0057                     	ds	2
  1412     0059                     ___fltol@sign1:
  1413                           
  1414                           ; 1 bytes @ 0x39
  1415     0059                     	ds	1
  1416     005A                     ??___fladd:
  1417     005A                     ___fltol@exp1:	
  1418                           ; 1 bytes @ 0x3A
  1419                           
  1420                           
  1421                           ; 1 bytes @ 0x3A
  1422     005A                     	ds	8
  1423     0062                     ___fladd@signs:
  1424                           
  1425                           ; 1 bytes @ 0x42
  1426     0062                     	ds	1
  1427     0063                     ___fladd@aexp:
  1428                           
  1429                           ; 1 bytes @ 0x43
  1430     0063                     	ds	1
  1431     0064                     ___fladd@bexp:
  1432                           
  1433                           ; 1 bytes @ 0x44
  1434     0064                     	ds	1
  1435     0065                     ___fladd@grs:
  1436                           
  1437                           ; 1 bytes @ 0x45
  1438     0065                     	ds	1
  1439     0066                     ?___flsub:
  1440     0066                     ___flsub@a:	
  1441                           ; 4 bytes @ 0x46
  1442                           
  1443                           
  1444                           ; 4 bytes @ 0x46
  1445     0066                     	ds	4
  1446     006A                     ___flsub@b:
  1447                           
  1448                           ; 4 bytes @ 0x4A
  1449     006A                     	ds	4
  1450                           
  1451                           	psect	maintext
  1452     00CB                     __pmaintext:	
  1453 ;;
  1454 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1455 ;;
  1456 ;; *************** function _main *****************
  1457 ;; Defined at:
  1458 ;;		line 54 in file "main.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : B00/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1472 ;;      Params:         0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0
  1474 ;;      Temps:          0       0       4       0       0
  1475 ;;      Totals:         0       0       4       0       0
  1476 ;;Total ram usage:        4 bytes
  1477 ;; Hardware stack levels required when called: 4
  1478 ;; This function calls:
  1479 ;;		_I2C_Master_Read
  1480 ;;		_I2C_Master_Start
  1481 ;;		_I2C_Master_Stop
  1482 ;;		_I2C_Master_Write
  1483 ;;		_Lcd_Clear
  1484 ;;		_Lcd_Init
  1485 ;;		_Lcd_Set_Cursor
  1486 ;;		_Lcd_Write_String
  1487 ;;		___fldiv
  1488 ;;		___flmul
  1489 ;;		___xxtofl
  1490 ;;		_portsetup
  1491 ;;		_setupINTOSC
  1492 ;;		_sprintf
  1493 ;; This function is called by:
  1494 ;;		Startup code after reset
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498     00CB                     _main:	
  1499                           ;psect for function _main
  1500                           
  1501     00CB                     l3892:	
  1502                           ;incstack = 0
  1503                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1504                           
  1505                           
  1506                           ;main.c: 55:     setupINTOSC(7);
  1507     00CB  3007               	movlw	7
  1508     00CC  160A  118A  20B4  120A  118A  	fcall	_setupINTOSC
  1509                           
  1510                           ;main.c: 56:     portsetup();
  1511     00D1  160A  158A  232E  120A  118A  	fcall	_portsetup
  1512                           
  1513                           ;main.c: 57:     Lcd_Init();
  1514     00D6  160A  158A  265C  120A  118A  	fcall	_Lcd_Init
  1515                           
  1516                           ;main.c: 58:     Lcd_Clear();
  1517     00DB  120A  118A  2006  120A  118A  	fcall	_Lcd_Clear
  1518                           
  1519                           ;main.c: 59:     Lcd_Set_Cursor(1,2);
  1520     00E0  3002               	movlw	2
  1521     00E1  00F4               	movwf	Lcd_Set_Cursor@b
  1522     00E2  3001               	movlw	1
  1523     00E3  160A  158A  251B  120A  118A  	fcall	_Lcd_Set_Cursor
  1524     00E8                     l3894:
  1525                           
  1526                           ;main.c: 60:     Lcd_Write_String("S1: ");
  1527     00E8  3097               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1528     00E9  00F5               	movwf	Lcd_Write_String@a
  1529     00EA  3080               	movlw	128
  1530     00EB  00F6               	movwf	Lcd_Write_String@a+1
  1531     00EC  160A  158A  2495  120A  118A  	fcall	_Lcd_Write_String
  1532     00F1                     l3896:
  1533                           
  1534                           ;main.c: 61:     Lcd_Set_Cursor(2,1);
  1535     00F1  01F4               	clrf	Lcd_Set_Cursor@b
  1536     00F2  0AF4               	incf	Lcd_Set_Cursor@b,f
  1537     00F3  3002               	movlw	2
  1538     00F4  160A  158A  251B  120A  118A  	fcall	_Lcd_Set_Cursor
  1539                           
  1540                           ;main.c: 62:     Lcd_Write_String("    V");
  1541     00F9  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1542     00FA  00F5               	movwf	Lcd_Write_String@a
  1543     00FB  3080               	movlw	128
  1544     00FC  00F6               	movwf	Lcd_Write_String@a+1
  1545     00FD  160A  158A  2495  120A  118A  	fcall	_Lcd_Write_String
  1546     0102                     l3898:
  1547                           
  1548                           ;main.c: 66:         I2C_Master_Start();
  1549     0102  160A  158A  22AC  120A  118A  	fcall	_I2C_Master_Start
  1550     0107                     l3900:
  1551                           
  1552                           ;main.c: 67:         I2C_Master_Write(0x11);
  1553     0107  3011               	movlw	17
  1554     0108  00F0               	movwf	I2C_Master_Write@d
  1555     0109  3000               	movlw	0
  1556     010A  00F1               	movwf	I2C_Master_Write@d+1
  1557     010B  160A  158A  22BE  120A  118A  	fcall	_I2C_Master_Write
  1558     0110                     l3902:
  1559                           
  1560                           ;main.c: 68:         lecADC = I2C_Master_Read(0);
  1561     0110  3000               	movlw	0
  1562     0111  00F0               	movwf	I2C_Master_Read@a
  1563     0112  00F1               	movwf	I2C_Master_Read@a+1
  1564     0113  160A  158A  23C2  120A  118A  	fcall	_I2C_Master_Read
  1565     0118  0870               	movf	?_I2C_Master_Read,w
  1566     0119  1683               	bsf	3,5	;RP0=1, select bank1
  1567     011A  1303               	bcf	3,6	;RP1=0, select bank1
  1568     011B  00CB               	movwf	_lecADC^(0+128)
  1569     011C                     l3904:
  1570                           
  1571                           ;main.c: 69:         I2C_Master_Stop();
  1572     011C  160A  158A  22B5  120A  118A  	fcall	_I2C_Master_Stop
  1573     0121                     l3906:
  1574                           
  1575                           ;main.c: 70:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1576     0121  3003               	movlw	3
  1577     0122  1683               	bsf	3,5	;RP0=1, select bank1
  1578     0123  1303               	bcf	3,6	;RP1=0, select bank1
  1579     0124  00C5               	movwf	(??_main^(0+128)+2)
  1580     0125  3008               	movlw	8
  1581     0126  00C4               	movwf	(??_main^(0+128)+1)
  1582     0127  3076               	movlw	118
  1583     0128  00C3               	movwf	??_main^(0+128)
  1584     0129                     u6477:
  1585     0129  0BC3               	decfsz	??_main^(0+128),f
  1586     012A  2929               	goto	u6477
  1587     012B  0BC4               	decfsz	(??_main^(0+128)+1),f
  1588     012C  2929               	goto	u6477
  1589     012D  0BC5               	decfsz	(??_main^(0+128)+2),f
  1590     012E  2929               	goto	u6477
  1591     012F  0000               	nop
  1592     0130                     l3908:
  1593                           
  1594                           ;main.c: 72:         conver = (lecADC*5.0)/255;
  1595     0130  3043               	movlw	67
  1596     0131  1283               	bcf	3,5	;RP0=0, select bank0
  1597     0132  1303               	bcf	3,6	;RP1=0, select bank0
  1598     0133  00C1               	movwf	___fldiv@a+3
  1599     0134  307F               	movlw	127
  1600     0135  00C0               	movwf	___fldiv@a+2
  1601     0136  3000               	movlw	0
  1602     0137  00BF               	movwf	___fldiv@a+1
  1603     0138  3000               	movlw	0
  1604     0139  00BE               	movwf	___fldiv@a
  1605     013A  3040               	movlw	64
  1606     013B  00A7               	movwf	___flmul@b+3
  1607     013C  30A0               	movlw	160
  1608     013D  00A6               	movwf	___flmul@b+2
  1609     013E  3000               	movlw	0
  1610     013F  00A5               	movwf	___flmul@b+1
  1611     0140  3000               	movlw	0
  1612     0141  00A4               	movwf	___flmul@b
  1613     0142  1683               	bsf	3,5	;RP0=1, select bank1
  1614     0143  1303               	bcf	3,6	;RP1=0, select bank1
  1615     0144  084B               	movf	_lecADC^(0+128),w
  1616     0145  00C3               	movwf	??_main^(0+128)
  1617     0146  01C4               	clrf	(??_main^(0+128)+1)
  1618     0147  01C5               	clrf	(??_main^(0+128)+2)
  1619     0148  01C6               	clrf	(??_main^(0+128)+3)
  1620     0149  0846               	movf	(??_main+3)^(0+128),w
  1621     014A  00F3               	movwf	___xxtofl@val+3
  1622     014B  0845               	movf	(??_main+2)^(0+128),w
  1623     014C  00F2               	movwf	___xxtofl@val+2
  1624     014D  0844               	movf	(??_main+1)^(0+128),w
  1625     014E  00F1               	movwf	___xxtofl@val+1
  1626     014F  0843               	movf	??_main^(0+128),w
  1627     0150  00F0               	movwf	___xxtofl@val
  1628     0151  3001               	movlw	1
  1629     0152  120A  158A  20A4  120A  118A  	fcall	___xxtofl
  1630     0157  0873               	movf	?___xxtofl+3,w
  1631     0158  1283               	bcf	3,5	;RP0=0, select bank0
  1632     0159  1303               	bcf	3,6	;RP1=0, select bank0
  1633     015A  00AB               	movwf	___flmul@a+3
  1634     015B  0872               	movf	?___xxtofl+2,w
  1635     015C  00AA               	movwf	___flmul@a+2
  1636     015D  0871               	movf	?___xxtofl+1,w
  1637     015E  00A9               	movwf	___flmul@a+1
  1638     015F  0870               	movf	?___xxtofl,w
  1639     0160  00A8               	movwf	___flmul@a
  1640     0161  120A  158A  215C  120A  118A  	fcall	___flmul
  1641     0166  1283               	bcf	3,5	;RP0=0, select bank0
  1642     0167  1303               	bcf	3,6	;RP1=0, select bank0
  1643     0168  0827               	movf	?___flmul+3,w
  1644     0169  00C5               	movwf	___fldiv@b+3
  1645     016A  0826               	movf	?___flmul+2,w
  1646     016B  00C4               	movwf	___fldiv@b+2
  1647     016C  0825               	movf	?___flmul+1,w
  1648     016D  00C3               	movwf	___fldiv@b+1
  1649     016E  0824               	movf	?___flmul,w
  1650     016F  00C2               	movwf	___fldiv@b
  1651     0170  160A  118A  21CA  120A  118A  	fcall	___fldiv
  1652     0175  1283               	bcf	3,5	;RP0=0, select bank0
  1653     0176  1303               	bcf	3,6	;RP1=0, select bank0
  1654     0177  0841               	movf	?___fldiv+3,w
  1655     0178  1683               	bsf	3,5	;RP0=1, select bank1
  1656     0179  1303               	bcf	3,6	;RP1=0, select bank1
  1657     017A  00CA               	movwf	(_conver+3)^(0+128)
  1658     017B  1283               	bcf	3,5	;RP0=0, select bank0
  1659     017C  1303               	bcf	3,6	;RP1=0, select bank0
  1660     017D  0840               	movf	?___fldiv+2,w
  1661     017E  1683               	bsf	3,5	;RP0=1, select bank1
  1662     017F  1303               	bcf	3,6	;RP1=0, select bank1
  1663     0180  00C9               	movwf	(_conver+2)^(0+128)
  1664     0181  1283               	bcf	3,5	;RP0=0, select bank0
  1665     0182  1303               	bcf	3,6	;RP1=0, select bank0
  1666     0183  083F               	movf	?___fldiv+1,w
  1667     0184  1683               	bsf	3,5	;RP0=1, select bank1
  1668     0185  1303               	bcf	3,6	;RP1=0, select bank1
  1669     0186  00C8               	movwf	(_conver+1)^(0+128)
  1670     0187  1283               	bcf	3,5	;RP0=0, select bank0
  1671     0188  1303               	bcf	3,6	;RP1=0, select bank0
  1672     0189  083E               	movf	?___fldiv,w
  1673     018A  1683               	bsf	3,5	;RP0=1, select bank1
  1674     018B  1303               	bcf	3,6	;RP1=0, select bank1
  1675     018C  00C7               	movwf	_conver^(0+128)
  1676     018D                     l3910:
  1677                           
  1678                           ;main.c: 73:         sprintf(valADC, "%.2f", conver);
  1679     018D  309C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1680     018E  00A0               	movwf	sprintf@f^(0+128)
  1681     018F  084A               	movf	(_conver+3)^(0+128),w
  1682     0190  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1683     0191  0849               	movf	(_conver+2)^(0+128),w
  1684     0192  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1685     0193  0848               	movf	(_conver+1)^(0+128),w
  1686     0194  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1687     0195  0847               	movf	_conver^(0+128),w
  1688     0196  00A1               	movwf	(?_sprintf^(0+128)+1)
  1689     0197  30CC               	movlw	(low (_valADC| 0))& (0+255)
  1690     0198  120A  118A  21B2  120A  118A  	fcall	_sprintf
  1691     019D                     l3912:
  1692                           
  1693                           ;main.c: 74:         Lcd_Set_Cursor(2,1);
  1694     019D  01F4               	clrf	Lcd_Set_Cursor@b
  1695     019E  0AF4               	incf	Lcd_Set_Cursor@b,f
  1696     019F  3002               	movlw	2
  1697     01A0  160A  158A  251B  120A  118A  	fcall	_Lcd_Set_Cursor
  1698     01A5                     l3914:
  1699                           
  1700                           ;main.c: 75:         Lcd_Write_String(valADC);
  1701     01A5  30CC               	movlw	(low (_valADC| 0))& (0+255)
  1702     01A6  00F5               	movwf	Lcd_Write_String@a
  1703     01A7  3000               	movlw	0
  1704     01A8  00F6               	movwf	Lcd_Write_String@a+1
  1705     01A9  160A  158A  2495  120A  118A  	fcall	_Lcd_Write_String
  1706     01AE  2902               	goto	l3898
  1707     01AF  120A  118A  2800   	ljmp	start
  1708     01B2                     __end_of_main:
  1709                           
  1710                           	psect	text1
  1711     01B2                     __ptext1:	
  1712 ;; *************** function _sprintf *****************
  1713 ;; Defined at:
  1714 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  sp              1    wreg     PTR unsigned char 
  1717 ;;		 -> valADC(3), 
  1718 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1719 ;;		 -> STR_3(5), 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1722 ;;		 -> valADC(3), 
  1723 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1724 ;;  tmpval          4   23[BANK1 ] struct .
  1725 ;;  val             4   17[BANK1 ] unsigned long 
  1726 ;;  prec            2   28[BANK1 ] int 
  1727 ;;  eexp            2   21[BANK1 ] int 
  1728 ;;  flag            2   15[BANK1 ] unsigned short 
  1729 ;;  cp              2    0        PTR const unsigned char 
  1730 ;;  len             2    0        unsigned int 
  1731 ;;  width           2    0        int 
  1732 ;;  c               1   34[BANK1 ] unsigned char 
  1733 ;;  ap              1   14[BANK1 ] PTR void [1]
  1734 ;;		 -> ?_sprintf(2), 
  1735 ;;  d               1    0        unsigned char 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  2    0[BANK1 ] int 
  1738 ;; Registers used:
  1739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1745 ;;      Params:         0       0       5       0       0
  1746 ;;      Locals:         0       0      25       0       0
  1747 ;;      Temps:          0       0       5       0       0
  1748 ;;      Totals:         0       0      35       0       0
  1749 ;;Total ram usage:       35 bytes
  1750 ;; Hardware stack levels used: 1
  1751 ;; Hardware stack levels required when called: 3
  1752 ;; This function calls:
  1753 ;;		___awdiv
  1754 ;;		___fladd
  1755 ;;		___fleq
  1756 ;;		___flge
  1757 ;;		___flmul
  1758 ;;		___flneg
  1759 ;;		___flsub
  1760 ;;		___fltol
  1761 ;;		___lldiv
  1762 ;;		___llmod
  1763 ;;		___wmul
  1764 ;;		___xxtofl
  1765 ;;		__div_to_l_
  1766 ;;		__tdiv_to_l_
  1767 ;;		_fround
  1768 ;;		_isdigit
  1769 ;;		_scale
  1770 ;; This function is called by:
  1771 ;;		_main
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775     01B2                     _sprintf:	
  1776                           ;psect for function _sprintf
  1777                           
  1778                           
  1779                           ;incstack = 0
  1780                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1781                           ;sprintf@sp stored from wreg
  1782     01B2  1683               	bsf	3,5	;RP0=1, select bank1
  1783     01B3  1303               	bcf	3,6	;RP1=0, select bank1
  1784     01B4  00BB               	movwf	sprintf@sp^(0+128)
  1785     01B5                     l3544:
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1788     01B5  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1789     01B6  00AE               	movwf	sprintf@ap^(0+128)
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1792     01B7  2FDD               	goto	l3738
  1793     01B8                     l3546:
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1796     01B8  3025               	movlw	37
  1797     01B9  0642               	xorwf	sprintf@c^(0+128),w
  1798     01BA  1903               	btfsc	3,2
  1799     01BB  29BD               	goto	u5811
  1800     01BC  29BE               	goto	u5810
  1801     01BD                     u5811:
  1802     01BD  29C8               	goto	l3552
  1803     01BE                     u5810:
  1804     01BE                     l3548:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1807     01BE  083B               	movf	sprintf@sp^(0+128),w
  1808     01BF  0084               	movwf	4
  1809     01C0  0842               	movf	sprintf@c^(0+128),w
  1810     01C1  1383               	bcf	3,7	;select IRP bank0
  1811     01C2  0080               	movwf	0
  1812     01C3                     l3550:
  1813     01C3  3001               	movlw	1
  1814     01C4  00A5               	movwf	??_sprintf^(0+128)
  1815     01C5  0825               	movf	??_sprintf^(0+128),w
  1816     01C6  07BB               	addwf	sprintf@sp^(0+128),f
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1819     01C7  2FDD               	goto	l3738
  1820     01C8                     l3552:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1823     01C8  01AF               	clrf	sprintf@flag^(0+128)
  1824     01C9  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1825     01CA                     l3554:
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1828     01CA  0820               	movf	sprintf@f^(0+128),w
  1829     01CB  0084               	movwf	4
  1830     01CC  160A  118A  200A  120A  118A  	fcall	stringdir
  1831     01D1  3A2E               	xorlw	46
  1832     01D2  1D03               	skipz
  1833     01D3  29D5               	goto	u5821
  1834     01D4  29D6               	goto	u5820
  1835     01D5                     u5821:
  1836     01D5  2A1B               	goto	l3570
  1837     01D6                     u5820:
  1838     01D6                     l3556:
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1841     01D6  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1842     01D7                     l3558:
  1843                           
  1844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  1845     01D7  3001               	movlw	1
  1846     01D8  00A5               	movwf	??_sprintf^(0+128)
  1847     01D9  0825               	movf	??_sprintf^(0+128),w
  1848     01DA  07A0               	addwf	sprintf@f^(0+128),f
  1849     01DB                     l3560:
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1852     01DB  01BC               	clrf	sprintf@prec^(0+128)
  1853     01DC  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1854                           
  1855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1856     01DD  2A0A               	goto	l3568
  1857     01DE                     l3562:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1860     01DE  300A               	movlw	10
  1861     01DF  00F0               	movwf	___wmul@multiplier
  1862     01E0  3000               	movlw	0
  1863     01E1  00F1               	movwf	___wmul@multiplier+1
  1864     01E2  1683               	bsf	3,5	;RP0=1, select bank1
  1865     01E3  1303               	bcf	3,6	;RP1=0, select bank1
  1866     01E4  083D               	movf	(sprintf@prec+1)^(0+128),w
  1867     01E5  00F3               	movwf	___wmul@multiplicand+1
  1868     01E6  083C               	movf	sprintf@prec^(0+128),w
  1869     01E7  00F2               	movwf	___wmul@multiplicand
  1870     01E8  160A  158A  2376  120A  118A  	fcall	___wmul
  1871     01ED  0871               	movf	?___wmul+1,w
  1872     01EE  1683               	bsf	3,5	;RP0=1, select bank1
  1873     01EF  1303               	bcf	3,6	;RP1=0, select bank1
  1874     01F0  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1875     01F1  0870               	movf	?___wmul,w
  1876     01F2  00BC               	movwf	sprintf@prec^(0+128)
  1877     01F3                     l3564:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1880     01F3  0820               	movf	sprintf@f^(0+128),w
  1881     01F4  0084               	movwf	4
  1882     01F5  160A  118A  200A  120A  118A  	fcall	stringdir
  1883     01FA  3ED0               	addlw	208
  1884     01FB  00A5               	movwf	??_sprintf^(0+128)
  1885     01FC  30FF               	movlw	255
  1886     01FD  1803               	skipnc
  1887     01FE  3000               	movlw	0
  1888     01FF  00A6               	movwf	(??_sprintf^(0+128)+1)
  1889     0200  0825               	movf	??_sprintf^(0+128),w
  1890     0201  07BC               	addwf	sprintf@prec^(0+128),f
  1891     0202  1803               	skipnc
  1892     0203  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  1893     0204  0826               	movf	(??_sprintf+1)^(0+128),w
  1894     0205  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  1895     0206                     l3566:
  1896     0206  3001               	movlw	1
  1897     0207  00A5               	movwf	??_sprintf^(0+128)
  1898     0208  0825               	movf	??_sprintf^(0+128),w
  1899     0209  07A0               	addwf	sprintf@f^(0+128),f
  1900     020A                     l3568:
  1901                           
  1902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1903     020A  0820               	movf	sprintf@f^(0+128),w
  1904     020B  0084               	movwf	4
  1905     020C  160A  118A  200A  120A  118A  	fcall	stringdir
  1906     0211  160A  158A  22E0  120A  118A  	fcall	_isdigit
  1907     0216  1803               	btfsc	3,0
  1908     0217  2A19               	goto	u5831
  1909     0218  2A1A               	goto	u5830
  1910     0219                     u5831:
  1911     0219  29DE               	goto	l3562
  1912     021A                     u5830:
  1913     021A  2A21               	goto	l3576
  1914     021B                     l3570:
  1915                           
  1916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1917     021B  01BC               	clrf	sprintf@prec^(0+128)
  1918     021C  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1919     021D                     l3572:
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1922     021D  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1923     021E  2A21               	goto	l3576
  1924     021F                     l368:	
  1925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1926                           
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1929     021F  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  1932     0220  2A3D               	goto	l3578
  1933     0221                     l3576:
  1934     0221  3001               	movlw	1
  1935     0222  1683               	bsf	3,5	;RP0=1, select bank1
  1936     0223  1303               	bcf	3,6	;RP1=0, select bank1
  1937     0224  07A0               	addwf	sprintf@f^(0+128),f
  1938     0225  30FF               	movlw	-1
  1939     0226  0720               	addwf	sprintf@f^(0+128),w
  1940     0227  0084               	movwf	4
  1941     0228  160A  118A  200A  120A  118A  	fcall	stringdir
  1942     022D  00C2               	movwf	sprintf@c^(0+128)
  1943     022E  00A5               	movwf	??_sprintf^(0+128)
  1944     022F  01A6               	clrf	(??_sprintf^(0+128)+1)
  1945                           
  1946                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1947                           ; Switch size 1, requested type "simple"
  1948                           ; Number of cases is 1, Range of values is 0 to 0
  1949                           ; switch strategies available:
  1950                           ; Name         Instructions Cycles
  1951                           ; simple_byte            4     3 (average)
  1952                           ; direct_byte           11     8 (fixed)
  1953                           ; jumptable            260     6 (fixed)
  1954                           ;	Chosen strategy is simple_byte
  1955     0230  0826               	movf	(??_sprintf+1)^(0+128),w
  1956     0231  3A00               	xorlw	0	; case 0
  1957     0232  1903               	skipnz
  1958     0233  2A35               	goto	l3978
  1959     0234  2FDD               	goto	l3738
  1960     0235                     l3978:
  1961                           
  1962                           ; Switch size 1, requested type "simple"
  1963                           ; Number of cases is 2, Range of values is 0 to 102
  1964                           ; switch strategies available:
  1965                           ; Name         Instructions Cycles
  1966                           ; simple_byte            7     4 (average)
  1967                           ; jumptable            260     6 (fixed)
  1968                           ;	Chosen strategy is simple_byte
  1969     0235  0825               	movf	??_sprintf^(0+128),w
  1970     0236  3A00               	xorlw	0	; case 0
  1971     0237  1903               	skipnz
  1972     0238  2FED               	goto	l3740
  1973     0239  3A66               	xorlw	102	; case 102
  1974     023A  1903               	skipnz
  1975     023B  2A1F               	goto	l368
  1976     023C  2FDD               	goto	l3738
  1977     023D                     l3578:
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1980     023D  3000               	movlw	0
  1981     023E  052F               	andwf	sprintf@flag^(0+128),w
  1982     023F  00A5               	movwf	??_sprintf^(0+128)
  1983     0240  3007               	movlw	7
  1984     0241  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1985     0242  00A6               	movwf	(??_sprintf+1)^(0+128)
  1986     0243  0825               	movf	??_sprintf^(0+128),w
  1987     0244  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1988     0245  1903               	btfsc	3,2
  1989     0246  2A48               	goto	u5841
  1990     0247  2A49               	goto	u5840
  1991     0248                     u5841:
  1992     0248  2F9A               	goto	l3720
  1993     0249                     u5840:
  1994     0249                     l3580:
  1995                           
  1996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1997     0249  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  1998     024A  2A4C               	goto	u5851
  1999     024B  2A4D               	goto	u5850
  2000     024C                     u5851:
  2001     024C  2A51               	goto	l3584
  2002     024D                     u5850:
  2003     024D                     l3582:
  2004                           
  2005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2006     024D  3006               	movlw	6
  2007     024E  00BC               	movwf	sprintf@prec^(0+128)
  2008     024F  3000               	movlw	0
  2009     0250  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2010     0251                     l3584:
  2011                           
  2012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2013     0251  082E               	movf	sprintf@ap^(0+128),w
  2014     0252  0084               	movwf	4
  2015     0253  1383               	bcf	3,7	;select IRP bank0
  2016     0254  0800               	movf	0,w
  2017     0255  00BE               	movwf	sprintf@fval^(0+128)
  2018     0256  0A84               	incf	4,f
  2019     0257  0800               	movf	0,w
  2020     0258  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2021     0259  0A84               	incf	4,f
  2022     025A  0800               	movf	0,w
  2023     025B  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2024     025C  0A84               	incf	4,f
  2025     025D  0800               	movf	0,w
  2026     025E  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2027     025F                     l3586:
  2028     025F  3004               	movlw	4
  2029     0260  00A5               	movwf	??_sprintf^(0+128)
  2030     0261  0825               	movf	??_sprintf^(0+128),w
  2031     0262  07AE               	addwf	sprintf@ap^(0+128),f
  2032     0263                     l3588:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2035     0263  0841               	movf	(sprintf@fval+3)^(0+128),w
  2036     0264  00F3               	movwf	___flge@ff1+3
  2037     0265  0840               	movf	(sprintf@fval+2)^(0+128),w
  2038     0266  00F2               	movwf	___flge@ff1+2
  2039     0267  083F               	movf	(sprintf@fval+1)^(0+128),w
  2040     0268  00F1               	movwf	___flge@ff1+1
  2041     0269  083E               	movf	sprintf@fval^(0+128),w
  2042     026A  00F0               	movwf	___flge@ff1
  2043     026B  3000               	movlw	0
  2044     026C  00F7               	movwf	___flge@ff2+3
  2045     026D  3000               	movlw	0
  2046     026E  00F6               	movwf	___flge@ff2+2
  2047     026F  3000               	movlw	0
  2048     0270  00F5               	movwf	___flge@ff2+1
  2049     0271  3000               	movlw	0
  2050     0272  00F4               	movwf	___flge@ff2
  2051     0273  120A  158A  2002  120A  118A  	fcall	___flge
  2052     0278  1803               	btfsc	3,0
  2053     0279  2A7B               	goto	u5861
  2054     027A  2A7C               	goto	u5860
  2055     027B                     u5861:
  2056     027B  2A99               	goto	l3594
  2057     027C                     u5860:
  2058     027C                     l3590:
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2061     027C  1683               	bsf	3,5	;RP0=1, select bank1
  2062     027D  1303               	bcf	3,6	;RP1=0, select bank1
  2063     027E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2064     027F  00F3               	movwf	___flneg@f1+3
  2065     0280  0840               	movf	(sprintf@fval+2)^(0+128),w
  2066     0281  00F2               	movwf	___flneg@f1+2
  2067     0282  083F               	movf	(sprintf@fval+1)^(0+128),w
  2068     0283  00F1               	movwf	___flneg@f1+1
  2069     0284  083E               	movf	sprintf@fval^(0+128),w
  2070     0285  00F0               	movwf	___flneg@f1
  2071     0286  160A  158A  22C8  120A  118A  	fcall	___flneg
  2072     028B  0873               	movf	?___flneg+3,w
  2073     028C  1683               	bsf	3,5	;RP0=1, select bank1
  2074     028D  1303               	bcf	3,6	;RP1=0, select bank1
  2075     028E  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2076     028F  0872               	movf	?___flneg+2,w
  2077     0290  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2078     0291  0871               	movf	?___flneg+1,w
  2079     0292  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2080     0293  0870               	movf	?___flneg,w
  2081     0294  00BE               	movwf	sprintf@fval^(0+128)
  2082     0295                     l3592:
  2083                           
  2084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2085     0295  3003               	movlw	3
  2086     0296  04AF               	iorwf	sprintf@flag^(0+128),f
  2087     0297  3000               	movlw	0
  2088     0298  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2089     0299                     l3594:
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2092     0299  1683               	bsf	3,5	;RP0=1, select bank1
  2093     029A  1303               	bcf	3,6	;RP1=0, select bank1
  2094     029B  01B5               	clrf	sprintf@eexp^(0+128)
  2095     029C  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2096     029D                     l3596:
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2099     029D  0841               	movf	(sprintf@fval+3)^(0+128),w
  2100     029E  00F3               	movwf	___fleq@ff1+3
  2101     029F  0840               	movf	(sprintf@fval+2)^(0+128),w
  2102     02A0  00F2               	movwf	___fleq@ff1+2
  2103     02A1  083F               	movf	(sprintf@fval+1)^(0+128),w
  2104     02A2  00F1               	movwf	___fleq@ff1+1
  2105     02A3  083E               	movf	sprintf@fval^(0+128),w
  2106     02A4  00F0               	movwf	___fleq@ff1
  2107     02A5  3000               	movlw	0
  2108     02A6  00F7               	movwf	___fleq@ff2+3
  2109     02A7  3000               	movlw	0
  2110     02A8  00F6               	movwf	___fleq@ff2+2
  2111     02A9  3000               	movlw	0
  2112     02AA  00F5               	movwf	___fleq@ff2+1
  2113     02AB  3000               	movlw	0
  2114     02AC  00F4               	movwf	___fleq@ff2
  2115     02AD  160A  158A  2561  120A  118A  	fcall	___fleq
  2116     02B2  1803               	btfsc	3,0
  2117     02B3  2AB5               	goto	u5871
  2118     02B4  2AB6               	goto	u5870
  2119     02B5                     u5871:
  2120     02B5  2BA6               	goto	l3622
  2121     02B6                     u5870:
  2122     02B6                     l3598:
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2125     02B6  1003               	clrc
  2126     02B7  1683               	bsf	3,5	;RP0=1, select bank1
  2127     02B8  1303               	bcf	3,6	;RP1=0, select bank1
  2128     02B9  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2129     02BA  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2130     02BB  3E82               	addlw	130
  2131     02BC  00B5               	movwf	sprintf@eexp^(0+128)
  2132     02BD  30FF               	movlw	255
  2133     02BE  1803               	skipnc
  2134     02BF  3000               	movlw	0
  2135     02C0  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  2136     02C1                     l3600:
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2139     02C1  30FF               	movlw	255
  2140     02C2  07B5               	addwf	sprintf@eexp^(0+128),f
  2141     02C3  1803               	skipnc
  2142     02C4  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2143     02C5  30FF               	movlw	255
  2144     02C6  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2145     02C7                     l3602:
  2146                           
  2147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2148     02C7  3003               	movlw	3
  2149     02C8  00F0               	movwf	___wmul@multiplier
  2150     02C9  3000               	movlw	0
  2151     02CA  00F1               	movwf	___wmul@multiplier+1
  2152     02CB  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2153     02CC  00F3               	movwf	___wmul@multiplicand+1
  2154     02CD  0835               	movf	sprintf@eexp^(0+128),w
  2155     02CE  00F2               	movwf	___wmul@multiplicand
  2156     02CF  160A  158A  2376  120A  118A  	fcall	___wmul
  2157     02D4  0871               	movf	?___wmul+1,w
  2158     02D5  1683               	bsf	3,5	;RP0=1, select bank1
  2159     02D6  1303               	bcf	3,6	;RP1=0, select bank1
  2160     02D7  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2161     02D8  0870               	movf	?___wmul,w
  2162     02D9  00B5               	movwf	sprintf@eexp^(0+128)
  2163     02DA                     l3604:
  2164                           
  2165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2166     02DA  300A               	movlw	10
  2167     02DB  00F7               	movwf	___awdiv@divisor
  2168     02DC  3000               	movlw	0
  2169     02DD  00F8               	movwf	___awdiv@divisor+1
  2170     02DE  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2171     02DF  00FA               	movwf	___awdiv@dividend+1
  2172     02E0  0835               	movf	sprintf@eexp^(0+128),w
  2173     02E1  00F9               	movwf	___awdiv@dividend
  2174     02E2  160A  158A  271F  120A  118A  	fcall	___awdiv
  2175     02E7  0878               	movf	?___awdiv+1,w
  2176     02E8  1683               	bsf	3,5	;RP0=1, select bank1
  2177     02E9  1303               	bcf	3,6	;RP1=0, select bank1
  2178     02EA  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2179     02EB  0877               	movf	?___awdiv,w
  2180     02EC  00B5               	movwf	sprintf@eexp^(0+128)
  2181     02ED                     l3606:
  2182                           
  2183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2184     02ED  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  2185     02EE  2AF0               	goto	u5881
  2186     02EF  2AF1               	goto	u5880
  2187     02F0                     u5881:
  2188     02F0  2AF7               	goto	l3610
  2189     02F1                     u5880:
  2190     02F1                     l3608:
  2191                           
  2192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2193     02F1  30FF               	movlw	255
  2194     02F2  07B5               	addwf	sprintf@eexp^(0+128),f
  2195     02F3  1803               	skipnc
  2196     02F4  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2197     02F5  30FF               	movlw	255
  2198     02F6  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2199     02F7                     l3610:
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2202     02F7  0335               	decf	sprintf@eexp^(0+128),w
  2203     02F8  3AFF               	xorlw	255
  2204     02F9  120A  158A  24A1  120A  118A  	fcall	_scale
  2205     02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2206     02FF  1303               	bcf	3,6	;RP1=0, select bank0
  2207     0300  0841               	movf	?_scale+3,w
  2208     0301  1683               	bsf	3,5	;RP0=1, select bank1
  2209     0302  1303               	bcf	3,6	;RP1=0, select bank1
  2210     0303  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2211     0304  1283               	bcf	3,5	;RP0=0, select bank0
  2212     0305  1303               	bcf	3,6	;RP1=0, select bank0
  2213     0306  0840               	movf	?_scale+2,w
  2214     0307  1683               	bsf	3,5	;RP0=1, select bank1
  2215     0308  1303               	bcf	3,6	;RP1=0, select bank1
  2216     0309  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2217     030A  1283               	bcf	3,5	;RP0=0, select bank0
  2218     030B  1303               	bcf	3,6	;RP1=0, select bank0
  2219     030C  083F               	movf	?_scale+1,w
  2220     030D  1683               	bsf	3,5	;RP0=1, select bank1
  2221     030E  1303               	bcf	3,6	;RP1=0, select bank1
  2222     030F  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2223     0310  1283               	bcf	3,5	;RP0=0, select bank0
  2224     0311  1303               	bcf	3,6	;RP1=0, select bank0
  2225     0312  083E               	movf	?_scale,w
  2226     0313  1683               	bsf	3,5	;RP0=1, select bank1
  2227     0314  1303               	bcf	3,6	;RP1=0, select bank1
  2228     0315  00B7               	movwf	sprintf@tmpval^(0+128)
  2229     0316                     l3612:
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2232     0316  0841               	movf	(sprintf@fval+3)^(0+128),w
  2233     0317  1283               	bcf	3,5	;RP0=0, select bank0
  2234     0318  1303               	bcf	3,6	;RP1=0, select bank0
  2235     0319  00A7               	movwf	___flmul@b+3
  2236     031A  1683               	bsf	3,5	;RP0=1, select bank1
  2237     031B  1303               	bcf	3,6	;RP1=0, select bank1
  2238     031C  0840               	movf	(sprintf@fval+2)^(0+128),w
  2239     031D  1283               	bcf	3,5	;RP0=0, select bank0
  2240     031E  1303               	bcf	3,6	;RP1=0, select bank0
  2241     031F  00A6               	movwf	___flmul@b+2
  2242     0320  1683               	bsf	3,5	;RP0=1, select bank1
  2243     0321  1303               	bcf	3,6	;RP1=0, select bank1
  2244     0322  083F               	movf	(sprintf@fval+1)^(0+128),w
  2245     0323  1283               	bcf	3,5	;RP0=0, select bank0
  2246     0324  1303               	bcf	3,6	;RP1=0, select bank0
  2247     0325  00A5               	movwf	___flmul@b+1
  2248     0326  1683               	bsf	3,5	;RP0=1, select bank1
  2249     0327  1303               	bcf	3,6	;RP1=0, select bank1
  2250     0328  083E               	movf	sprintf@fval^(0+128),w
  2251     0329  1283               	bcf	3,5	;RP0=0, select bank0
  2252     032A  1303               	bcf	3,6	;RP1=0, select bank0
  2253     032B  00A4               	movwf	___flmul@b
  2254     032C  1683               	bsf	3,5	;RP0=1, select bank1
  2255     032D  1303               	bcf	3,6	;RP1=0, select bank1
  2256     032E  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2257     032F  1283               	bcf	3,5	;RP0=0, select bank0
  2258     0330  1303               	bcf	3,6	;RP1=0, select bank0
  2259     0331  00AB               	movwf	___flmul@a+3
  2260     0332  1683               	bsf	3,5	;RP0=1, select bank1
  2261     0333  1303               	bcf	3,6	;RP1=0, select bank1
  2262     0334  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2263     0335  1283               	bcf	3,5	;RP0=0, select bank0
  2264     0336  1303               	bcf	3,6	;RP1=0, select bank0
  2265     0337  00AA               	movwf	___flmul@a+2
  2266     0338  1683               	bsf	3,5	;RP0=1, select bank1
  2267     0339  1303               	bcf	3,6	;RP1=0, select bank1
  2268     033A  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2269     033B  1283               	bcf	3,5	;RP0=0, select bank0
  2270     033C  1303               	bcf	3,6	;RP1=0, select bank0
  2271     033D  00A9               	movwf	___flmul@a+1
  2272     033E  1683               	bsf	3,5	;RP0=1, select bank1
  2273     033F  1303               	bcf	3,6	;RP1=0, select bank1
  2274     0340  0837               	movf	sprintf@tmpval^(0+128),w
  2275     0341  1283               	bcf	3,5	;RP0=0, select bank0
  2276     0342  1303               	bcf	3,6	;RP1=0, select bank0
  2277     0343  00A8               	movwf	___flmul@a
  2278     0344  120A  158A  215C  120A  118A  	fcall	___flmul
  2279     0349  1283               	bcf	3,5	;RP0=0, select bank0
  2280     034A  1303               	bcf	3,6	;RP1=0, select bank0
  2281     034B  0827               	movf	?___flmul+3,w
  2282     034C  1683               	bsf	3,5	;RP0=1, select bank1
  2283     034D  1303               	bcf	3,6	;RP1=0, select bank1
  2284     034E  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2285     034F  1283               	bcf	3,5	;RP0=0, select bank0
  2286     0350  1303               	bcf	3,6	;RP1=0, select bank0
  2287     0351  0826               	movf	?___flmul+2,w
  2288     0352  1683               	bsf	3,5	;RP0=1, select bank1
  2289     0353  1303               	bcf	3,6	;RP1=0, select bank1
  2290     0354  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2291     0355  1283               	bcf	3,5	;RP0=0, select bank0
  2292     0356  1303               	bcf	3,6	;RP1=0, select bank0
  2293     0357  0825               	movf	?___flmul+1,w
  2294     0358  1683               	bsf	3,5	;RP0=1, select bank1
  2295     0359  1303               	bcf	3,6	;RP1=0, select bank1
  2296     035A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2297     035B  1283               	bcf	3,5	;RP0=0, select bank0
  2298     035C  1303               	bcf	3,6	;RP1=0, select bank0
  2299     035D  0824               	movf	?___flmul,w
  2300     035E  1683               	bsf	3,5	;RP0=1, select bank1
  2301     035F  1303               	bcf	3,6	;RP1=0, select bank1
  2302     0360  00B7               	movwf	sprintf@tmpval^(0+128)
  2303     0361                     l3614:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2306     0361  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2307     0362  00F3               	movwf	___flge@ff1+3
  2308     0363  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2309     0364  00F2               	movwf	___flge@ff1+2
  2310     0365  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2311     0366  00F1               	movwf	___flge@ff1+1
  2312     0367  0837               	movf	sprintf@tmpval^(0+128),w
  2313     0368  00F0               	movwf	___flge@ff1
  2314     0369  303F               	movlw	63
  2315     036A  00F7               	movwf	___flge@ff2+3
  2316     036B  3080               	movlw	128
  2317     036C  00F6               	movwf	___flge@ff2+2
  2318     036D  3000               	movlw	0
  2319     036E  00F5               	movwf	___flge@ff2+1
  2320     036F  3000               	movlw	0
  2321     0370  00F4               	movwf	___flge@ff2
  2322     0371  120A  158A  2002  120A  118A  	fcall	___flge
  2323     0376  1803               	btfsc	3,0
  2324     0377  2B79               	goto	u5891
  2325     0378  2B7A               	goto	u5890
  2326     0379                     u5891:
  2327     0379  2B83               	goto	l3618
  2328     037A                     u5890:
  2329     037A                     l3616:
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2332     037A  30FF               	movlw	255
  2333     037B  1683               	bsf	3,5	;RP0=1, select bank1
  2334     037C  1303               	bcf	3,6	;RP1=0, select bank1
  2335     037D  07B5               	addwf	sprintf@eexp^(0+128),f
  2336     037E  1803               	skipnc
  2337     037F  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2338     0380  30FF               	movlw	255
  2339     0381  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2340     0382  2BA6               	goto	l3622
  2341     0383                     l3618:
  2342     0383  1683               	bsf	3,5	;RP0=1, select bank1
  2343     0384  1303               	bcf	3,6	;RP1=0, select bank1
  2344     0385  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2345     0386  00F3               	movwf	___flge@ff1+3
  2346     0387  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2347     0388  00F2               	movwf	___flge@ff1+2
  2348     0389  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2349     038A  00F1               	movwf	___flge@ff1+1
  2350     038B  0837               	movf	sprintf@tmpval^(0+128),w
  2351     038C  00F0               	movwf	___flge@ff1
  2352     038D  3041               	movlw	65
  2353     038E  00F7               	movwf	___flge@ff2+3
  2354     038F  3020               	movlw	32
  2355     0390  00F6               	movwf	___flge@ff2+2
  2356     0391  3000               	movlw	0
  2357     0392  00F5               	movwf	___flge@ff2+1
  2358     0393  3000               	movlw	0
  2359     0394  00F4               	movwf	___flge@ff2
  2360     0395  120A  158A  2002  120A  118A  	fcall	___flge
  2361     039A  1C03               	btfss	3,0
  2362     039B  2B9D               	goto	u5901
  2363     039C  2B9E               	goto	u5900
  2364     039D                     u5901:
  2365     039D  2BA6               	goto	l3622
  2366     039E                     u5900:
  2367     039E                     l3620:
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2370     039E  3001               	movlw	1
  2371     039F  1683               	bsf	3,5	;RP0=1, select bank1
  2372     03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2373     03A1  07B5               	addwf	sprintf@eexp^(0+128),f
  2374     03A2  1803               	skipnc
  2375     03A3  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2376     03A4  3000               	movlw	0
  2377     03A5  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2378     03A6                     l3622:
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2381     03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2382     03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2383     03A8  083D               	movf	(sprintf@prec+1)^(0+128),w
  2384     03A9  3A80               	xorlw	128
  2385     03AA  00FF               	movwf	btemp+1
  2386     03AB  3080               	movlw	128
  2387     03AC  027F               	subwf	btemp+1,w
  2388     03AD  1D03               	skipz
  2389     03AE  2BB1               	goto	u5915
  2390     03AF  300D               	movlw	13
  2391     03B0  023C               	subwf	sprintf@prec^(0+128),w
  2392     03B1                     u5915:
  2393     03B1  1803               	skipnc
  2394     03B2  2BB4               	goto	u5911
  2395     03B3  2BB5               	goto	u5910
  2396     03B4                     u5911:
  2397     03B4  2BFC               	goto	l3626
  2398     03B5                     u5910:
  2399     03B5                     l3624:
  2400                           
  2401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2402     03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2403     03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2404     03B7  083C               	movf	sprintf@prec^(0+128),w
  2405     03B8  160A  118A  239D  120A  118A  	fcall	_fround
  2406     03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2407     03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2408     03BF  0841               	movf	?_fround+3,w
  2409     03C0  00D5               	movwf	___fladd@b+3
  2410     03C1  0840               	movf	?_fround+2,w
  2411     03C2  00D4               	movwf	___fladd@b+2
  2412     03C3  083F               	movf	?_fround+1,w
  2413     03C4  00D3               	movwf	___fladd@b+1
  2414     03C5  083E               	movf	?_fround,w
  2415     03C6  00D2               	movwf	___fladd@b
  2416     03C7  1683               	bsf	3,5	;RP0=1, select bank1
  2417     03C8  1303               	bcf	3,6	;RP1=0, select bank1
  2418     03C9  0841               	movf	(sprintf@fval+3)^(0+128),w
  2419     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2420     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2421     03CC  00D9               	movwf	___fladd@a+3
  2422     03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2423     03CE  1303               	bcf	3,6	;RP1=0, select bank1
  2424     03CF  0840               	movf	(sprintf@fval+2)^(0+128),w
  2425     03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2426     03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2427     03D2  00D8               	movwf	___fladd@a+2
  2428     03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2429     03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2430     03D5  083F               	movf	(sprintf@fval+1)^(0+128),w
  2431     03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2432     03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2433     03D8  00D7               	movwf	___fladd@a+1
  2434     03D9  1683               	bsf	3,5	;RP0=1, select bank1
  2435     03DA  1303               	bcf	3,6	;RP1=0, select bank1
  2436     03DB  083E               	movf	sprintf@fval^(0+128),w
  2437     03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2438     03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2439     03DE  00D6               	movwf	___fladd@a
  2440     03DF  160A  118A  25A8  120A  118A  	fcall	___fladd
  2441     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2442     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2443     03E6  0855               	movf	?___fladd+3,w
  2444     03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2445     03E8  1303               	bcf	3,6	;RP1=0, select bank1
  2446     03E9  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2447     03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2448     03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2449     03EC  0854               	movf	?___fladd+2,w
  2450     03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2451     03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2452     03EF  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2453     03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2454     03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2455     03F2  0853               	movf	?___fladd+1,w
  2456     03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2457     03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2458     03F5  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2459     03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2460     03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2461     03F8  0852               	movf	?___fladd,w
  2462     03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2463     03FA  1303               	bcf	3,6	;RP1=0, select bank1
  2464     03FB  00BE               	movwf	sprintf@fval^(0+128)
  2465     03FC                     l3626:
  2466                           
  2467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2468     03FC  1683               	bsf	3,5	;RP0=1, select bank1
  2469     03FD  1303               	bcf	3,6	;RP1=0, select bank1
  2470     03FE  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2471     03FF  3A80               	xorlw	128
  2472     0400  00FF               	movwf	btemp+1
  2473     0401  3080               	movlw	128
  2474     0402  027F               	subwf	btemp+1,w
  2475     0403  1D03               	skipz
  2476     0404  2C07               	goto	u5925
  2477     0405  300A               	movlw	10
  2478     0406  0235               	subwf	sprintf@eexp^(0+128),w
  2479     0407                     u5925:
  2480     0407  1803               	skipnc
  2481     0408  2C0A               	goto	u5921
  2482     0409  2C0B               	goto	u5920
  2483     040A                     u5921:
  2484     040A  2C5C               	goto	l3634
  2485     040B                     u5920:
  2486     040B                     l3628:
  2487     040B  1683               	bsf	3,5	;RP0=1, select bank1
  2488     040C  1303               	bcf	3,6	;RP1=0, select bank1
  2489     040D  0841               	movf	(sprintf@fval+3)^(0+128),w
  2490     040E  00F3               	movwf	___fleq@ff1+3
  2491     040F  0840               	movf	(sprintf@fval+2)^(0+128),w
  2492     0410  00F2               	movwf	___fleq@ff1+2
  2493     0411  083F               	movf	(sprintf@fval+1)^(0+128),w
  2494     0412  00F1               	movwf	___fleq@ff1+1
  2495     0413  083E               	movf	sprintf@fval^(0+128),w
  2496     0414  00F0               	movwf	___fleq@ff1
  2497     0415  3000               	movlw	0
  2498     0416  00F7               	movwf	___fleq@ff2+3
  2499     0417  3000               	movlw	0
  2500     0418  00F6               	movwf	___fleq@ff2+2
  2501     0419  3000               	movlw	0
  2502     041A  00F5               	movwf	___fleq@ff2+1
  2503     041B  3000               	movlw	0
  2504     041C  00F4               	movwf	___fleq@ff2
  2505     041D  160A  158A  2561  120A  118A  	fcall	___fleq
  2506     0422  1803               	btfsc	3,0
  2507     0423  2C25               	goto	u5931
  2508     0424  2C26               	goto	u5930
  2509     0425                     u5931:
  2510     0425  2CCE               	goto	l3648
  2511     0426                     u5930:
  2512     0426                     l3630:
  2513     0426  1683               	bsf	3,5	;RP0=1, select bank1
  2514     0427  1303               	bcf	3,6	;RP1=0, select bank1
  2515     0428  0841               	movf	(sprintf@fval+3)^(0+128),w
  2516     0429  1283               	bcf	3,5	;RP0=0, select bank0
  2517     042A  1303               	bcf	3,6	;RP1=0, select bank0
  2518     042B  00D4               	movwf	___fltol@f1+3
  2519     042C  1683               	bsf	3,5	;RP0=1, select bank1
  2520     042D  1303               	bcf	3,6	;RP1=0, select bank1
  2521     042E  0840               	movf	(sprintf@fval+2)^(0+128),w
  2522     042F  1283               	bcf	3,5	;RP0=0, select bank0
  2523     0430  1303               	bcf	3,6	;RP1=0, select bank0
  2524     0431  00D3               	movwf	___fltol@f1+2
  2525     0432  1683               	bsf	3,5	;RP0=1, select bank1
  2526     0433  1303               	bcf	3,6	;RP1=0, select bank1
  2527     0434  083F               	movf	(sprintf@fval+1)^(0+128),w
  2528     0435  1283               	bcf	3,5	;RP0=0, select bank0
  2529     0436  1303               	bcf	3,6	;RP1=0, select bank0
  2530     0437  00D2               	movwf	___fltol@f1+1
  2531     0438  1683               	bsf	3,5	;RP0=1, select bank1
  2532     0439  1303               	bcf	3,6	;RP1=0, select bank1
  2533     043A  083E               	movf	sprintf@fval^(0+128),w
  2534     043B  1283               	bcf	3,5	;RP0=0, select bank0
  2535     043C  1303               	bcf	3,6	;RP1=0, select bank0
  2536     043D  00D1               	movwf	___fltol@f1
  2537     043E  160A  158A  2788  120A  118A  	fcall	___fltol
  2538     0443  1283               	bcf	3,5	;RP0=0, select bank0
  2539     0444  1303               	bcf	3,6	;RP1=0, select bank0
  2540     0445  0854               	movf	?___fltol+3,w
  2541     0446  0453               	iorwf	?___fltol+2,w
  2542     0447  0452               	iorwf	?___fltol+1,w
  2543     0448  0451               	iorwf	?___fltol,w
  2544     0449  1D03               	skipz
  2545     044A  2C4C               	goto	u5941
  2546     044B  2C4D               	goto	u5940
  2547     044C                     u5941:
  2548     044C  2CCE               	goto	l3648
  2549     044D                     u5940:
  2550     044D                     l3632:
  2551     044D  1683               	bsf	3,5	;RP0=1, select bank1
  2552     044E  1303               	bcf	3,6	;RP1=0, select bank1
  2553     044F  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2554     0450  3A80               	xorlw	128
  2555     0451  00FF               	movwf	btemp+1
  2556     0452  3080               	movlw	128
  2557     0453  027F               	subwf	btemp+1,w
  2558     0454  1D03               	skipz
  2559     0455  2C58               	goto	u5955
  2560     0456  3002               	movlw	2
  2561     0457  0235               	subwf	sprintf@eexp^(0+128),w
  2562     0458                     u5955:
  2563     0458  1C03               	skipc
  2564     0459  2C5B               	goto	u5951
  2565     045A  2C5C               	goto	u5950
  2566     045B                     u5951:
  2567     045B  2CCE               	goto	l3648
  2568     045C                     u5950:
  2569     045C                     l3634:
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2572     045C  1683               	bsf	3,5	;RP0=1, select bank1
  2573     045D  1303               	bcf	3,6	;RP1=0, select bank1
  2574     045E  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2575     045F  00F3               	movwf	___flge@ff1+3
  2576     0460  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2577     0461  00F2               	movwf	___flge@ff1+2
  2578     0462  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2579     0463  00F1               	movwf	___flge@ff1+1
  2580     0464  0837               	movf	sprintf@tmpval^(0+128),w
  2581     0465  00F0               	movwf	___flge@ff1
  2582     0466  3040               	movlw	64
  2583     0467  00F7               	movwf	___flge@ff2+3
  2584     0468  3089               	movlw	137
  2585     0469  00F6               	movwf	___flge@ff2+2
  2586     046A  3070               	movlw	112
  2587     046B  00F5               	movwf	___flge@ff2+1
  2588     046C  305F               	movlw	95
  2589     046D  00F4               	movwf	___flge@ff2
  2590     046E  120A  158A  2002  120A  118A  	fcall	___flge
  2591     0473  1803               	btfsc	3,0
  2592     0474  2C76               	goto	u5961
  2593     0475  2C77               	goto	u5960
  2594     0476                     u5961:
  2595     0476  2C80               	goto	l3638
  2596     0477                     u5960:
  2597     0477                     l3636:
  2598                           
  2599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2600     0477  30F7               	movlw	247
  2601     0478  1683               	bsf	3,5	;RP0=1, select bank1
  2602     0479  1303               	bcf	3,6	;RP1=0, select bank1
  2603     047A  07B5               	addwf	sprintf@eexp^(0+128),f
  2604     047B  1803               	skipnc
  2605     047C  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2606     047D  30FF               	movlw	255
  2607     047E  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2610     047F  2C88               	goto	l3640
  2611     0480                     l3638:
  2612                           
  2613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2614     0480  30F8               	movlw	248
  2615     0481  1683               	bsf	3,5	;RP0=1, select bank1
  2616     0482  1303               	bcf	3,6	;RP1=0, select bank1
  2617     0483  07B5               	addwf	sprintf@eexp^(0+128),f
  2618     0484  1803               	skipnc
  2619     0485  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2620     0486  30FF               	movlw	255
  2621     0487  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2622     0488                     l3640:
  2623                           
  2624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2625     0488  0835               	movf	sprintf@eexp^(0+128),w
  2626     0489  120A  158A  24A1  120A  118A  	fcall	_scale
  2627     048E  1283               	bcf	3,5	;RP0=0, select bank0
  2628     048F  1303               	bcf	3,6	;RP1=0, select bank0
  2629     0490  0841               	movf	?_scale+3,w
  2630     0491  1683               	bsf	3,5	;RP0=1, select bank1
  2631     0492  1303               	bcf	3,6	;RP1=0, select bank1
  2632     0493  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2633     0494  1283               	bcf	3,5	;RP0=0, select bank0
  2634     0495  1303               	bcf	3,6	;RP1=0, select bank0
  2635     0496  0840               	movf	?_scale+2,w
  2636     0497  1683               	bsf	3,5	;RP0=1, select bank1
  2637     0498  1303               	bcf	3,6	;RP1=0, select bank1
  2638     0499  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2639     049A  1283               	bcf	3,5	;RP0=0, select bank0
  2640     049B  1303               	bcf	3,6	;RP1=0, select bank0
  2641     049C  083F               	movf	?_scale+1,w
  2642     049D  1683               	bsf	3,5	;RP0=1, select bank1
  2643     049E  1303               	bcf	3,6	;RP1=0, select bank1
  2644     049F  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2645     04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2646     04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2647     04A2  083E               	movf	?_scale,w
  2648     04A3  1683               	bsf	3,5	;RP0=1, select bank1
  2649     04A4  1303               	bcf	3,6	;RP1=0, select bank1
  2650     04A5  00B7               	movwf	sprintf@tmpval^(0+128)
  2651     04A6                     l3642:
  2652     04A6  0841               	movf	(sprintf@fval+3)^(0+128),w
  2653     04A7  00F3               	movwf	__div_to_l_@f1+3
  2654     04A8  0840               	movf	(sprintf@fval+2)^(0+128),w
  2655     04A9  00F2               	movwf	__div_to_l_@f1+2
  2656     04AA  083F               	movf	(sprintf@fval+1)^(0+128),w
  2657     04AB  00F1               	movwf	__div_to_l_@f1+1
  2658     04AC  083E               	movf	sprintf@fval^(0+128),w
  2659     04AD  00F0               	movwf	__div_to_l_@f1
  2660     04AE  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2661     04AF  00F7               	movwf	__div_to_l_@f2+3
  2662     04B0  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2663     04B1  00F6               	movwf	__div_to_l_@f2+2
  2664     04B2  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2665     04B3  00F5               	movwf	__div_to_l_@f2+1
  2666     04B4  0837               	movf	sprintf@tmpval^(0+128),w
  2667     04B5  00F4               	movwf	__div_to_l_@f2
  2668     04B6  120A  118A  2013  120A  118A  	fcall	__div_to_l_
  2669     04BB  0873               	movf	?__div_to_l_+3,w
  2670     04BC  1683               	bsf	3,5	;RP0=1, select bank1
  2671     04BD  1303               	bcf	3,6	;RP1=0, select bank1
  2672     04BE  00B4               	movwf	(sprintf@val+3)^(0+128)
  2673     04BF  0872               	movf	?__div_to_l_+2,w
  2674     04C0  00B3               	movwf	(sprintf@val+2)^(0+128)
  2675     04C1  0871               	movf	?__div_to_l_+1,w
  2676     04C2  00B2               	movwf	(sprintf@val+1)^(0+128)
  2677     04C3  0870               	movf	?__div_to_l_,w
  2678     04C4  00B1               	movwf	sprintf@val^(0+128)
  2679     04C5                     l3646:
  2680                           
  2681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2682     04C5  3000               	movlw	0
  2683     04C6  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2684     04C7  3000               	movlw	0
  2685     04C8  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2686     04C9  3000               	movlw	0
  2687     04CA  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2688     04CB  3000               	movlw	0
  2689     04CC  00BE               	movwf	sprintf@fval^(0+128)
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2692     04CD  2D52               	goto	l3654
  2693     04CE                     l3648:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2696     04CE  1683               	bsf	3,5	;RP0=1, select bank1
  2697     04CF  1303               	bcf	3,6	;RP1=0, select bank1
  2698     04D0  0841               	movf	(sprintf@fval+3)^(0+128),w
  2699     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2700     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2701     04D3  00D4               	movwf	___fltol@f1+3
  2702     04D4  1683               	bsf	3,5	;RP0=1, select bank1
  2703     04D5  1303               	bcf	3,6	;RP1=0, select bank1
  2704     04D6  0840               	movf	(sprintf@fval+2)^(0+128),w
  2705     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2706     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2707     04D9  00D3               	movwf	___fltol@f1+2
  2708     04DA  1683               	bsf	3,5	;RP0=1, select bank1
  2709     04DB  1303               	bcf	3,6	;RP1=0, select bank1
  2710     04DC  083F               	movf	(sprintf@fval+1)^(0+128),w
  2711     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2712     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2713     04DF  00D2               	movwf	___fltol@f1+1
  2714     04E0  1683               	bsf	3,5	;RP0=1, select bank1
  2715     04E1  1303               	bcf	3,6	;RP1=0, select bank1
  2716     04E2  083E               	movf	sprintf@fval^(0+128),w
  2717     04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2718     04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2719     04E5  00D1               	movwf	___fltol@f1
  2720     04E6  160A  158A  2788  120A  118A  	fcall	___fltol
  2721     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2722     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2723     04ED  0854               	movf	?___fltol+3,w
  2724     04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2725     04EF  1303               	bcf	3,6	;RP1=0, select bank1
  2726     04F0  00B4               	movwf	(sprintf@val+3)^(0+128)
  2727     04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2728     04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2729     04F3  0853               	movf	?___fltol+2,w
  2730     04F4  1683               	bsf	3,5	;RP0=1, select bank1
  2731     04F5  1303               	bcf	3,6	;RP1=0, select bank1
  2732     04F6  00B3               	movwf	(sprintf@val+2)^(0+128)
  2733     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2734     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2735     04F9  0852               	movf	?___fltol+1,w
  2736     04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2737     04FB  1303               	bcf	3,6	;RP1=0, select bank1
  2738     04FC  00B2               	movwf	(sprintf@val+1)^(0+128)
  2739     04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2740     04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2741     04FF  0851               	movf	?___fltol,w
  2742     0500  1683               	bsf	3,5	;RP0=1, select bank1
  2743     0501  1303               	bcf	3,6	;RP1=0, select bank1
  2744     0502  00B1               	movwf	sprintf@val^(0+128)
  2745     0503                     l3650:
  2746                           
  2747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2748     0503  0834               	movf	(sprintf@val+3)^(0+128),w
  2749     0504  00F3               	movwf	___xxtofl@val+3
  2750     0505  0833               	movf	(sprintf@val+2)^(0+128),w
  2751     0506  00F2               	movwf	___xxtofl@val+2
  2752     0507  0832               	movf	(sprintf@val+1)^(0+128),w
  2753     0508  00F1               	movwf	___xxtofl@val+1
  2754     0509  0831               	movf	sprintf@val^(0+128),w
  2755     050A  00F0               	movwf	___xxtofl@val
  2756     050B  3000               	movlw	0
  2757     050C  120A  158A  20A4  120A  118A  	fcall	___xxtofl
  2758     0511  0873               	movf	?___xxtofl+3,w
  2759     0512  1283               	bcf	3,5	;RP0=0, select bank0
  2760     0513  1303               	bcf	3,6	;RP1=0, select bank0
  2761     0514  00E9               	movwf	___flsub@a+3
  2762     0515  0872               	movf	?___xxtofl+2,w
  2763     0516  00E8               	movwf	___flsub@a+2
  2764     0517  0871               	movf	?___xxtofl+1,w
  2765     0518  00E7               	movwf	___flsub@a+1
  2766     0519  0870               	movf	?___xxtofl,w
  2767     051A  00E6               	movwf	___flsub@a
  2768     051B  1683               	bsf	3,5	;RP0=1, select bank1
  2769     051C  1303               	bcf	3,6	;RP1=0, select bank1
  2770     051D  0841               	movf	(sprintf@fval+3)^(0+128),w
  2771     051E  1283               	bcf	3,5	;RP0=0, select bank0
  2772     051F  1303               	bcf	3,6	;RP1=0, select bank0
  2773     0520  00ED               	movwf	___flsub@b+3
  2774     0521  1683               	bsf	3,5	;RP0=1, select bank1
  2775     0522  1303               	bcf	3,6	;RP1=0, select bank1
  2776     0523  0840               	movf	(sprintf@fval+2)^(0+128),w
  2777     0524  1283               	bcf	3,5	;RP0=0, select bank0
  2778     0525  1303               	bcf	3,6	;RP1=0, select bank0
  2779     0526  00EC               	movwf	___flsub@b+2
  2780     0527  1683               	bsf	3,5	;RP0=1, select bank1
  2781     0528  1303               	bcf	3,6	;RP1=0, select bank1
  2782     0529  083F               	movf	(sprintf@fval+1)^(0+128),w
  2783     052A  1283               	bcf	3,5	;RP0=0, select bank0
  2784     052B  1303               	bcf	3,6	;RP1=0, select bank0
  2785     052C  00EB               	movwf	___flsub@b+1
  2786     052D  1683               	bsf	3,5	;RP0=1, select bank1
  2787     052E  1303               	bcf	3,6	;RP1=0, select bank1
  2788     052F  083E               	movf	sprintf@fval^(0+128),w
  2789     0530  1283               	bcf	3,5	;RP0=0, select bank0
  2790     0531  1303               	bcf	3,6	;RP1=0, select bank0
  2791     0532  00EA               	movwf	___flsub@b
  2792     0533  160A  158A  2352  120A  118A  	fcall	___flsub
  2793     0538  1283               	bcf	3,5	;RP0=0, select bank0
  2794     0539  1303               	bcf	3,6	;RP1=0, select bank0
  2795     053A  0869               	movf	?___flsub+3,w
  2796     053B  1683               	bsf	3,5	;RP0=1, select bank1
  2797     053C  1303               	bcf	3,6	;RP1=0, select bank1
  2798     053D  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2799     053E  1283               	bcf	3,5	;RP0=0, select bank0
  2800     053F  1303               	bcf	3,6	;RP1=0, select bank0
  2801     0540  0868               	movf	?___flsub+2,w
  2802     0541  1683               	bsf	3,5	;RP0=1, select bank1
  2803     0542  1303               	bcf	3,6	;RP1=0, select bank1
  2804     0543  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2805     0544  1283               	bcf	3,5	;RP0=0, select bank0
  2806     0545  1303               	bcf	3,6	;RP1=0, select bank0
  2807     0546  0867               	movf	?___flsub+1,w
  2808     0547  1683               	bsf	3,5	;RP0=1, select bank1
  2809     0548  1303               	bcf	3,6	;RP1=0, select bank1
  2810     0549  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2811     054A  1283               	bcf	3,5	;RP0=0, select bank0
  2812     054B  1303               	bcf	3,6	;RP1=0, select bank0
  2813     054C  0866               	movf	?___flsub,w
  2814     054D  1683               	bsf	3,5	;RP0=1, select bank1
  2815     054E  1303               	bcf	3,6	;RP1=0, select bank1
  2816     054F  00BE               	movwf	sprintf@fval^(0+128)
  2817     0550                     l3652:
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2820     0550  01B5               	clrf	sprintf@eexp^(0+128)
  2821     0551  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2822     0552                     l3654:
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2825     0552  01C2               	clrf	sprintf@c^(0+128)
  2826     0553  0AC2               	incf	sprintf@c^(0+128),f
  2827     0554                     l3660:
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2830     0554  0842               	movf	sprintf@c^(0+128),w
  2831     0555  00A5               	movwf	??_sprintf^(0+128)
  2832     0556  3001               	movlw	1
  2833     0557                     u5975:
  2834     0557  1003               	clrc
  2835     0558  0DA5               	rlf	??_sprintf^(0+128),f
  2836     0559  3EFF               	addlw	-1
  2837     055A  1D03               	skipz
  2838     055B  2D57               	goto	u5975
  2839     055C  1003               	clrc
  2840     055D  0D25               	rlf	??_sprintf^(0+128),w
  2841     055E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2842     055F  0084               	movwf	4
  2843     0560  160A  118A  200A  120A  118A  	fcall	stringdir
  2844     0565  00A6               	movwf	(??_sprintf+1)^(0+128)
  2845     0566  160A  118A  200A  120A  118A  	fcall	stringdir
  2846     056B  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2847     056C  160A  118A  200A  120A  118A  	fcall	stringdir
  2848     0571  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2849     0572  160A  118A  200A  120A  118A  	fcall	stringdir
  2850     0577  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2851     0578  0829               	movf	(??_sprintf+4)^(0+128),w
  2852     0579  0234               	subwf	(sprintf@val+3)^(0+128),w
  2853     057A  1D03               	skipz
  2854     057B  2D86               	goto	u5985
  2855     057C  0828               	movf	(??_sprintf+3)^(0+128),w
  2856     057D  0233               	subwf	(sprintf@val+2)^(0+128),w
  2857     057E  1D03               	skipz
  2858     057F  2D86               	goto	u5985
  2859     0580  0827               	movf	(??_sprintf+2)^(0+128),w
  2860     0581  0232               	subwf	(sprintf@val+1)^(0+128),w
  2861     0582  1D03               	skipz
  2862     0583  2D86               	goto	u5985
  2863     0584  0826               	movf	(??_sprintf+1)^(0+128),w
  2864     0585  0231               	subwf	sprintf@val^(0+128),w
  2865     0586                     u5985:
  2866     0586  1803               	skipnc
  2867     0587  2D89               	goto	u5981
  2868     0588  2D8A               	goto	u5980
  2869     0589                     u5981:
  2870     0589  2D8B               	goto	l3664
  2871     058A                     u5980:
  2872     058A  2D95               	goto	l3666
  2873     058B                     l3664:
  2874     058B  3001               	movlw	1
  2875     058C  00A5               	movwf	??_sprintf^(0+128)
  2876     058D  0825               	movf	??_sprintf^(0+128),w
  2877     058E  07C2               	addwf	sprintf@c^(0+128),f
  2878     058F  300A               	movlw	10
  2879     0590  0642               	xorwf	sprintf@c^(0+128),w
  2880     0591  1D03               	btfss	3,2
  2881     0592  2D94               	goto	u5991
  2882     0593  2D95               	goto	u5990
  2883     0594                     u5991:
  2884     0594  2D54               	goto	l3660
  2885     0595                     u5990:
  2886     0595                     l3666:
  2887                           
  2888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2889     0595  3003               	movlw	3
  2890     0596  052F               	andwf	sprintf@flag^(0+128),w
  2891     0597  00A5               	movwf	??_sprintf^(0+128)
  2892     0598  3000               	movlw	0
  2893     0599  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2894     059A  00A6               	movwf	(??_sprintf+1)^(0+128)
  2895     059B  0825               	movf	??_sprintf^(0+128),w
  2896     059C  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2897     059D  1903               	btfsc	3,2
  2898     059E  2DA0               	goto	u6001
  2899     059F  2DA1               	goto	u6000
  2900     05A0                     u6001:
  2901     05A0  2E0F               	goto	l394
  2902     05A1                     u6000:
  2903     05A1                     l3668:
  2904                           
  2905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2906     05A1  083B               	movf	sprintf@sp^(0+128),w
  2907     05A2  0084               	movwf	4
  2908     05A3  302D               	movlw	45
  2909     05A4  1383               	bcf	3,7	;select IRP bank0
  2910     05A5  0080               	movwf	0
  2911     05A6                     l3670:
  2912     05A6  3001               	movlw	1
  2913     05A7  00A5               	movwf	??_sprintf^(0+128)
  2914     05A8  0825               	movf	??_sprintf^(0+128),w
  2915     05A9  07BB               	addwf	sprintf@sp^(0+128),f
  2916     05AA  2E0F               	goto	l394
  2917     05AB                     l3672:
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2920     05AB  0842               	movf	sprintf@c^(0+128),w
  2921     05AC  00A5               	movwf	??_sprintf^(0+128)
  2922     05AD  3001               	movlw	1
  2923     05AE                     u6015:
  2924     05AE  1003               	clrc
  2925     05AF  0DA5               	rlf	??_sprintf^(0+128),f
  2926     05B0  3EFF               	addlw	-1
  2927     05B1  1D03               	skipz
  2928     05B2  2DAE               	goto	u6015
  2929     05B3  1003               	clrc
  2930     05B4  0D25               	rlf	??_sprintf^(0+128),w
  2931     05B5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2932     05B6  0084               	movwf	4
  2933     05B7  160A  118A  200A  120A  118A  	fcall	stringdir
  2934     05BC  00F0               	movwf	___lldiv@divisor
  2935     05BD  160A  118A  200A  120A  118A  	fcall	stringdir
  2936     05C2  00F1               	movwf	___lldiv@divisor+1
  2937     05C3  160A  118A  200A  120A  118A  	fcall	stringdir
  2938     05C8  00F2               	movwf	___lldiv@divisor+2
  2939     05C9  160A  118A  200A  120A  118A  	fcall	stringdir
  2940     05CE  00F3               	movwf	___lldiv@divisor+3
  2941     05CF  0834               	movf	(sprintf@val+3)^(0+128),w
  2942     05D0  00F7               	movwf	___lldiv@dividend+3
  2943     05D1  0833               	movf	(sprintf@val+2)^(0+128),w
  2944     05D2  00F6               	movwf	___lldiv@dividend+2
  2945     05D3  0832               	movf	(sprintf@val+1)^(0+128),w
  2946     05D4  00F5               	movwf	___lldiv@dividend+1
  2947     05D5  0831               	movf	sprintf@val^(0+128),w
  2948     05D6  00F4               	movwf	___lldiv@dividend
  2949     05D7  160A  158A  26B9  120A  118A  	fcall	___lldiv
  2950     05DC  0873               	movf	?___lldiv+3,w
  2951     05DD  1683               	bsf	3,5	;RP0=1, select bank1
  2952     05DE  1303               	bcf	3,6	;RP1=0, select bank1
  2953     05DF  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2954     05E0  0872               	movf	?___lldiv+2,w
  2955     05E1  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2956     05E2  0871               	movf	?___lldiv+1,w
  2957     05E3  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2958     05E4  0870               	movf	?___lldiv,w
  2959     05E5  00B7               	movwf	sprintf@tmpval^(0+128)
  2960     05E6                     l3674:
  2961                           
  2962                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2963     05E6  3000               	movlw	0
  2964     05E7  00F3               	movwf	___llmod@divisor+3
  2965     05E8  3000               	movlw	0
  2966     05E9  00F2               	movwf	___llmod@divisor+2
  2967     05EA  3000               	movlw	0
  2968     05EB  00F1               	movwf	___llmod@divisor+1
  2969     05EC  300A               	movlw	10
  2970     05ED  00F0               	movwf	___llmod@divisor
  2971     05EE  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2972     05EF  00F7               	movwf	___llmod@dividend+3
  2973     05F0  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2974     05F1  00F6               	movwf	___llmod@dividend+2
  2975     05F2  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2976     05F3  00F5               	movwf	___llmod@dividend+1
  2977     05F4  0837               	movf	sprintf@tmpval^(0+128),w
  2978     05F5  00F4               	movwf	___llmod@dividend
  2979     05F6  160A  158A  25AF  120A  118A  	fcall	___llmod
  2980     05FB  0873               	movf	?___llmod+3,w
  2981     05FC  1683               	bsf	3,5	;RP0=1, select bank1
  2982     05FD  1303               	bcf	3,6	;RP1=0, select bank1
  2983     05FE  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2984     05FF  0872               	movf	?___llmod+2,w
  2985     0600  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2986     0601  0871               	movf	?___llmod+1,w
  2987     0602  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2988     0603  0870               	movf	?___llmod,w
  2989     0604  00B7               	movwf	sprintf@tmpval^(0+128)
  2990     0605                     l3676:
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2993     0605  083B               	movf	sprintf@sp^(0+128),w
  2994     0606  0084               	movwf	4
  2995     0607  0837               	movf	sprintf@tmpval^(0+128),w
  2996     0608  3E30               	addlw	48
  2997     0609  1383               	bcf	3,7	;select IRP bank0
  2998     060A  0080               	movwf	0
  2999     060B  3001               	movlw	1
  3000     060C  00A5               	movwf	??_sprintf^(0+128)
  3001     060D  0825               	movf	??_sprintf^(0+128),w
  3002     060E  07BB               	addwf	sprintf@sp^(0+128),f
  3003     060F                     l394:	
  3004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  3005                           
  3006                           
  3007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3008     060F  3001               	movlw	1
  3009     0610  02C2               	subwf	sprintf@c^(0+128),f
  3010     0611  0A42               	incf	sprintf@c^(0+128),w
  3011     0612  1D03               	btfss	3,2
  3012     0613  2E15               	goto	u6021
  3013     0614  2E16               	goto	u6020
  3014     0615                     u6021:
  3015     0615  2DAB               	goto	l3672
  3016     0616                     u6020:
  3017     0616  2E28               	goto	l3684
  3018     0617                     l3678:
  3019                           
  3020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3021     0617  1683               	bsf	3,5	;RP0=1, select bank1
  3022     0618  1303               	bcf	3,6	;RP1=0, select bank1
  3023     0619  083B               	movf	sprintf@sp^(0+128),w
  3024     061A  0084               	movwf	4
  3025     061B  3030               	movlw	48
  3026     061C  1383               	bcf	3,7	;select IRP bank0
  3027     061D  0080               	movwf	0
  3028     061E                     l3680:
  3029     061E  3001               	movlw	1
  3030     061F  00A5               	movwf	??_sprintf^(0+128)
  3031     0620  0825               	movf	??_sprintf^(0+128),w
  3032     0621  07BB               	addwf	sprintf@sp^(0+128),f
  3033     0622                     l3682:
  3034                           
  3035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3036     0622  30FF               	movlw	255
  3037     0623  07B5               	addwf	sprintf@eexp^(0+128),f
  3038     0624  1803               	skipnc
  3039     0625  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3040     0626  30FF               	movlw	255
  3041     0627  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3042     0628                     l3684:
  3043                           
  3044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3045     0628  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3046     0629  3A80               	xorlw	128
  3047     062A  00FF               	movwf	btemp+1
  3048     062B  3080               	movlw	128
  3049     062C  027F               	subwf	btemp+1,w
  3050     062D  1D03               	skipz
  3051     062E  2E31               	goto	u6035
  3052     062F  3001               	movlw	1
  3053     0630  0235               	subwf	sprintf@eexp^(0+128),w
  3054     0631                     u6035:
  3055     0631  1803               	skipnc
  3056     0632  2E34               	goto	u6031
  3057     0633  2E35               	goto	u6030
  3058     0634                     u6031:
  3059     0634  2E17               	goto	l3678
  3060     0635                     u6030:
  3061     0635                     l3686:
  3062                           
  3063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3064     0635  1683               	bsf	3,5	;RP0=1, select bank1
  3065     0636  1303               	bcf	3,6	;RP1=0, select bank1
  3066     0637  083D               	movf	(sprintf@prec+1)^(0+128),w
  3067     0638  3A80               	xorlw	128
  3068     0639  00FF               	movwf	btemp+1
  3069     063A  3080               	movlw	128
  3070     063B  027F               	subwf	btemp+1,w
  3071     063C  1D03               	skipz
  3072     063D  2E40               	goto	u6045
  3073     063E  3009               	movlw	9
  3074     063F  023C               	subwf	sprintf@prec^(0+128),w
  3075     0640                     u6045:
  3076     0640  1C03               	skipc
  3077     0641  2E43               	goto	u6041
  3078     0642  2E44               	goto	u6040
  3079     0643                     u6041:
  3080     0643  2E49               	goto	l3690
  3081     0644                     u6040:
  3082     0644                     l3688:
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3085     0644  3008               	movlw	8
  3086     0645  1683               	bsf	3,5	;RP0=1, select bank1
  3087     0646  1303               	bcf	3,6	;RP1=0, select bank1
  3088     0647  00C2               	movwf	sprintf@c^(0+128)
  3089     0648  2E4D               	goto	l401
  3090     0649                     l3690:
  3091                           
  3092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3093     0649  1683               	bsf	3,5	;RP0=1, select bank1
  3094     064A  1303               	bcf	3,6	;RP1=0, select bank1
  3095     064B  083C               	movf	sprintf@prec^(0+128),w
  3096     064C  00C2               	movwf	sprintf@c^(0+128)
  3097     064D                     l401:
  3098                           
  3099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3100     064D  0842               	movf	sprintf@c^(0+128),w
  3101     064E  00A5               	movwf	??_sprintf^(0+128)
  3102     064F  01A6               	clrf	(??_sprintf^(0+128)+1)
  3103     0650  0825               	movf	??_sprintf^(0+128),w
  3104     0651  02BC               	subwf	sprintf@prec^(0+128),f
  3105     0652  0826               	movf	(??_sprintf+1)^(0+128),w
  3106     0653  1C03               	skipc
  3107     0654  03BD               	decf	(sprintf@prec+1)^(0+128),f
  3108     0655  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  3109     0656                     l3692:
  3110                           
  3111                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3112     0656  0842               	movf	sprintf@c^(0+128),w
  3113     0657  1903               	btfsc	3,2
  3114     0658  2E5A               	goto	u6051
  3115     0659  2E5B               	goto	u6050
  3116     065A                     u6051:
  3117     065A  2E64               	goto	l3698
  3118     065B                     u6050:
  3119     065B                     l3694:
  3120                           
  3121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3122     065B  083B               	movf	sprintf@sp^(0+128),w
  3123     065C  0084               	movwf	4
  3124     065D  302E               	movlw	46
  3125     065E  1383               	bcf	3,7	;select IRP bank0
  3126     065F  0080               	movwf	0
  3127     0660                     l3696:
  3128     0660  3001               	movlw	1
  3129     0661  00A5               	movwf	??_sprintf^(0+128)
  3130     0662  0825               	movf	??_sprintf^(0+128),w
  3131     0663  07BB               	addwf	sprintf@sp^(0+128),f
  3132     0664                     l3698:
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3135     0664  0842               	movf	sprintf@c^(0+128),w
  3136     0665  120A  158A  24A1  120A  118A  	fcall	_scale
  3137     066A  1283               	bcf	3,5	;RP0=0, select bank0
  3138     066B  1303               	bcf	3,6	;RP1=0, select bank0
  3139     066C  0841               	movf	?_scale+3,w
  3140     066D  1683               	bsf	3,5	;RP0=1, select bank1
  3141     066E  1303               	bcf	3,6	;RP1=0, select bank1
  3142     066F  00AD               	movwf	(_sprintf$1019+3)^(0+128)
  3143     0670  1283               	bcf	3,5	;RP0=0, select bank0
  3144     0671  1303               	bcf	3,6	;RP1=0, select bank0
  3145     0672  0840               	movf	?_scale+2,w
  3146     0673  1683               	bsf	3,5	;RP0=1, select bank1
  3147     0674  1303               	bcf	3,6	;RP1=0, select bank1
  3148     0675  00AC               	movwf	(_sprintf$1019+2)^(0+128)
  3149     0676  1283               	bcf	3,5	;RP0=0, select bank0
  3150     0677  1303               	bcf	3,6	;RP1=0, select bank0
  3151     0678  083F               	movf	?_scale+1,w
  3152     0679  1683               	bsf	3,5	;RP0=1, select bank1
  3153     067A  1303               	bcf	3,6	;RP1=0, select bank1
  3154     067B  00AB               	movwf	(_sprintf$1019+1)^(0+128)
  3155     067C  1283               	bcf	3,5	;RP0=0, select bank0
  3156     067D  1303               	bcf	3,6	;RP1=0, select bank0
  3157     067E  083E               	movf	?_scale,w
  3158     067F  1683               	bsf	3,5	;RP0=1, select bank1
  3159     0680  1303               	bcf	3,6	;RP1=0, select bank1
  3160     0681  00AA               	movwf	_sprintf$1019^(0+128)
  3161     0682                     l3700:
  3162                           
  3163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3164     0682  082D               	movf	(_sprintf$1019+3)^(0+128),w
  3165     0683  1283               	bcf	3,5	;RP0=0, select bank0
  3166     0684  1303               	bcf	3,6	;RP1=0, select bank0
  3167     0685  00AB               	movwf	___flmul@a+3
  3168     0686  1683               	bsf	3,5	;RP0=1, select bank1
  3169     0687  1303               	bcf	3,6	;RP1=0, select bank1
  3170     0688  082C               	movf	(_sprintf$1019+2)^(0+128),w
  3171     0689  1283               	bcf	3,5	;RP0=0, select bank0
  3172     068A  1303               	bcf	3,6	;RP1=0, select bank0
  3173     068B  00AA               	movwf	___flmul@a+2
  3174     068C  1683               	bsf	3,5	;RP0=1, select bank1
  3175     068D  1303               	bcf	3,6	;RP1=0, select bank1
  3176     068E  082B               	movf	(_sprintf$1019+1)^(0+128),w
  3177     068F  1283               	bcf	3,5	;RP0=0, select bank0
  3178     0690  1303               	bcf	3,6	;RP1=0, select bank0
  3179     0691  00A9               	movwf	___flmul@a+1
  3180     0692  1683               	bsf	3,5	;RP0=1, select bank1
  3181     0693  1303               	bcf	3,6	;RP1=0, select bank1
  3182     0694  082A               	movf	_sprintf$1019^(0+128),w
  3183     0695  1283               	bcf	3,5	;RP0=0, select bank0
  3184     0696  1303               	bcf	3,6	;RP1=0, select bank0
  3185     0697  00A8               	movwf	___flmul@a
  3186     0698  1683               	bsf	3,5	;RP0=1, select bank1
  3187     0699  1303               	bcf	3,6	;RP1=0, select bank1
  3188     069A  0841               	movf	(sprintf@fval+3)^(0+128),w
  3189     069B  1283               	bcf	3,5	;RP0=0, select bank0
  3190     069C  1303               	bcf	3,6	;RP1=0, select bank0
  3191     069D  00A7               	movwf	___flmul@b+3
  3192     069E  1683               	bsf	3,5	;RP0=1, select bank1
  3193     069F  1303               	bcf	3,6	;RP1=0, select bank1
  3194     06A0  0840               	movf	(sprintf@fval+2)^(0+128),w
  3195     06A1  1283               	bcf	3,5	;RP0=0, select bank0
  3196     06A2  1303               	bcf	3,6	;RP1=0, select bank0
  3197     06A3  00A6               	movwf	___flmul@b+2
  3198     06A4  1683               	bsf	3,5	;RP0=1, select bank1
  3199     06A5  1303               	bcf	3,6	;RP1=0, select bank1
  3200     06A6  083F               	movf	(sprintf@fval+1)^(0+128),w
  3201     06A7  1283               	bcf	3,5	;RP0=0, select bank0
  3202     06A8  1303               	bcf	3,6	;RP1=0, select bank0
  3203     06A9  00A5               	movwf	___flmul@b+1
  3204     06AA  1683               	bsf	3,5	;RP0=1, select bank1
  3205     06AB  1303               	bcf	3,6	;RP1=0, select bank1
  3206     06AC  083E               	movf	sprintf@fval^(0+128),w
  3207     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3208     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3209     06AF  00A4               	movwf	___flmul@b
  3210     06B0  120A  158A  215C  120A  118A  	fcall	___flmul
  3211     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  3212     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  3213     06B7  0827               	movf	?___flmul+3,w
  3214     06B8  00D4               	movwf	___fltol@f1+3
  3215     06B9  0826               	movf	?___flmul+2,w
  3216     06BA  00D3               	movwf	___fltol@f1+2
  3217     06BB  0825               	movf	?___flmul+1,w
  3218     06BC  00D2               	movwf	___fltol@f1+1
  3219     06BD  0824               	movf	?___flmul,w
  3220     06BE  00D1               	movwf	___fltol@f1
  3221     06BF  160A  158A  2788  120A  118A  	fcall	___fltol
  3222     06C4  1283               	bcf	3,5	;RP0=0, select bank0
  3223     06C5  1303               	bcf	3,6	;RP1=0, select bank0
  3224     06C6  0854               	movf	?___fltol+3,w
  3225     06C7  1683               	bsf	3,5	;RP0=1, select bank1
  3226     06C8  1303               	bcf	3,6	;RP1=0, select bank1
  3227     06C9  00B4               	movwf	(sprintf@val+3)^(0+128)
  3228     06CA  1283               	bcf	3,5	;RP0=0, select bank0
  3229     06CB  1303               	bcf	3,6	;RP1=0, select bank0
  3230     06CC  0853               	movf	?___fltol+2,w
  3231     06CD  1683               	bsf	3,5	;RP0=1, select bank1
  3232     06CE  1303               	bcf	3,6	;RP1=0, select bank1
  3233     06CF  00B3               	movwf	(sprintf@val+2)^(0+128)
  3234     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  3235     06D1  1303               	bcf	3,6	;RP1=0, select bank0
  3236     06D2  0852               	movf	?___fltol+1,w
  3237     06D3  1683               	bsf	3,5	;RP0=1, select bank1
  3238     06D4  1303               	bcf	3,6	;RP1=0, select bank1
  3239     06D5  00B2               	movwf	(sprintf@val+1)^(0+128)
  3240     06D6  1283               	bcf	3,5	;RP0=0, select bank0
  3241     06D7  1303               	bcf	3,6	;RP1=0, select bank0
  3242     06D8  0851               	movf	?___fltol,w
  3243     06D9  1683               	bsf	3,5	;RP0=1, select bank1
  3244     06DA  1303               	bcf	3,6	;RP1=0, select bank1
  3245     06DB  00B1               	movwf	sprintf@val^(0+128)
  3246                           
  3247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3248     06DC  2F7C               	goto	l3710
  3249     06DD                     l3702:
  3250                           
  3251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3252     06DD  0842               	movf	sprintf@c^(0+128),w
  3253     06DE  00A5               	movwf	??_sprintf^(0+128)
  3254     06DF  3001               	movlw	1
  3255     06E0                     u6065:
  3256     06E0  1003               	clrc
  3257     06E1  0DA5               	rlf	??_sprintf^(0+128),f
  3258     06E2  3EFF               	addlw	-1
  3259     06E3  1D03               	skipz
  3260     06E4  2EE0               	goto	u6065
  3261     06E5  1003               	clrc
  3262     06E6  0D25               	rlf	??_sprintf^(0+128),w
  3263     06E7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3264     06E8  0084               	movwf	4
  3265     06E9  160A  118A  200A  120A  118A  	fcall	stringdir
  3266     06EE  00F0               	movwf	___lldiv@divisor
  3267     06EF  160A  118A  200A  120A  118A  	fcall	stringdir
  3268     06F4  00F1               	movwf	___lldiv@divisor+1
  3269     06F5  160A  118A  200A  120A  118A  	fcall	stringdir
  3270     06FA  00F2               	movwf	___lldiv@divisor+2
  3271     06FB  160A  118A  200A  120A  118A  	fcall	stringdir
  3272     0700  00F3               	movwf	___lldiv@divisor+3
  3273     0701  0834               	movf	(sprintf@val+3)^(0+128),w
  3274     0702  00F7               	movwf	___lldiv@dividend+3
  3275     0703  0833               	movf	(sprintf@val+2)^(0+128),w
  3276     0704  00F6               	movwf	___lldiv@dividend+2
  3277     0705  0832               	movf	(sprintf@val+1)^(0+128),w
  3278     0706  00F5               	movwf	___lldiv@dividend+1
  3279     0707  0831               	movf	sprintf@val^(0+128),w
  3280     0708  00F4               	movwf	___lldiv@dividend
  3281     0709  160A  158A  26B9  120A  118A  	fcall	___lldiv
  3282     070E  0873               	movf	?___lldiv+3,w
  3283     070F  1683               	bsf	3,5	;RP0=1, select bank1
  3284     0710  1303               	bcf	3,6	;RP1=0, select bank1
  3285     0711  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3286     0712  0872               	movf	?___lldiv+2,w
  3287     0713  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3288     0714  0871               	movf	?___lldiv+1,w
  3289     0715  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3290     0716  0870               	movf	?___lldiv,w
  3291     0717  00B7               	movwf	sprintf@tmpval^(0+128)
  3292     0718                     l3704:
  3293                           
  3294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3295     0718  3000               	movlw	0
  3296     0719  00F3               	movwf	___llmod@divisor+3
  3297     071A  3000               	movlw	0
  3298     071B  00F2               	movwf	___llmod@divisor+2
  3299     071C  3000               	movlw	0
  3300     071D  00F1               	movwf	___llmod@divisor+1
  3301     071E  300A               	movlw	10
  3302     071F  00F0               	movwf	___llmod@divisor
  3303     0720  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3304     0721  00F7               	movwf	___llmod@dividend+3
  3305     0722  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3306     0723  00F6               	movwf	___llmod@dividend+2
  3307     0724  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3308     0725  00F5               	movwf	___llmod@dividend+1
  3309     0726  0837               	movf	sprintf@tmpval^(0+128),w
  3310     0727  00F4               	movwf	___llmod@dividend
  3311     0728  160A  158A  25AF  120A  118A  	fcall	___llmod
  3312     072D  0873               	movf	?___llmod+3,w
  3313     072E  1683               	bsf	3,5	;RP0=1, select bank1
  3314     072F  1303               	bcf	3,6	;RP1=0, select bank1
  3315     0730  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3316     0731  0872               	movf	?___llmod+2,w
  3317     0732  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3318     0733  0871               	movf	?___llmod+1,w
  3319     0734  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3320     0735  0870               	movf	?___llmod,w
  3321     0736  00B7               	movwf	sprintf@tmpval^(0+128)
  3322     0737                     l3706:
  3323                           
  3324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3325     0737  083B               	movf	sprintf@sp^(0+128),w
  3326     0738  0084               	movwf	4
  3327     0739  0837               	movf	sprintf@tmpval^(0+128),w
  3328     073A  3E30               	addlw	48
  3329     073B  1383               	bcf	3,7	;select IRP bank0
  3330     073C  0080               	movwf	0
  3331     073D  3001               	movlw	1
  3332     073E  00A5               	movwf	??_sprintf^(0+128)
  3333     073F  0825               	movf	??_sprintf^(0+128),w
  3334     0740  07BB               	addwf	sprintf@sp^(0+128),f
  3335     0741                     l3708:
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3338     0741  0842               	movf	sprintf@c^(0+128),w
  3339     0742  00A5               	movwf	??_sprintf^(0+128)
  3340     0743  3001               	movlw	1
  3341     0744                     u6075:
  3342     0744  1003               	clrc
  3343     0745  0DA5               	rlf	??_sprintf^(0+128),f
  3344     0746  3EFF               	addlw	-1
  3345     0747  1D03               	skipz
  3346     0748  2F44               	goto	u6075
  3347     0749  1003               	clrc
  3348     074A  0D25               	rlf	??_sprintf^(0+128),w
  3349     074B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3350     074C  0084               	movwf	4
  3351     074D  160A  118A  200A  120A  118A  	fcall	stringdir
  3352     0752  00F0               	movwf	___llmod@divisor
  3353     0753  160A  118A  200A  120A  118A  	fcall	stringdir
  3354     0758  00F1               	movwf	___llmod@divisor+1
  3355     0759  160A  118A  200A  120A  118A  	fcall	stringdir
  3356     075E  00F2               	movwf	___llmod@divisor+2
  3357     075F  160A  118A  200A  120A  118A  	fcall	stringdir
  3358     0764  00F3               	movwf	___llmod@divisor+3
  3359     0765  0834               	movf	(sprintf@val+3)^(0+128),w
  3360     0766  00F7               	movwf	___llmod@dividend+3
  3361     0767  0833               	movf	(sprintf@val+2)^(0+128),w
  3362     0768  00F6               	movwf	___llmod@dividend+2
  3363     0769  0832               	movf	(sprintf@val+1)^(0+128),w
  3364     076A  00F5               	movwf	___llmod@dividend+1
  3365     076B  0831               	movf	sprintf@val^(0+128),w
  3366     076C  00F4               	movwf	___llmod@dividend
  3367     076D  160A  158A  25AF  120A  118A  	fcall	___llmod
  3368     0772  0873               	movf	?___llmod+3,w
  3369     0773  1683               	bsf	3,5	;RP0=1, select bank1
  3370     0774  1303               	bcf	3,6	;RP1=0, select bank1
  3371     0775  00B4               	movwf	(sprintf@val+3)^(0+128)
  3372     0776  0872               	movf	?___llmod+2,w
  3373     0777  00B3               	movwf	(sprintf@val+2)^(0+128)
  3374     0778  0871               	movf	?___llmod+1,w
  3375     0779  00B2               	movwf	(sprintf@val+1)^(0+128)
  3376     077A  0870               	movf	?___llmod,w
  3377     077B  00B1               	movwf	sprintf@val^(0+128)
  3378     077C                     l3710:
  3379                           
  3380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3381     077C  3001               	movlw	1
  3382     077D  02C2               	subwf	sprintf@c^(0+128),f
  3383     077E  0A42               	incf	sprintf@c^(0+128),w
  3384     077F  1D03               	btfss	3,2
  3385     0780  2F82               	goto	u6081
  3386     0781  2F83               	goto	u6080
  3387     0782                     u6081:
  3388     0782  2EDD               	goto	l3702
  3389     0783                     u6080:
  3390     0783  2F93               	goto	l3718
  3391     0784                     l3712:
  3392                           
  3393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3394     0784  083B               	movf	sprintf@sp^(0+128),w
  3395     0785  0084               	movwf	4
  3396     0786  3030               	movlw	48
  3397     0787  1383               	bcf	3,7	;select IRP bank0
  3398     0788  0080               	movwf	0
  3399     0789                     l3714:
  3400     0789  3001               	movlw	1
  3401     078A  00A5               	movwf	??_sprintf^(0+128)
  3402     078B  0825               	movf	??_sprintf^(0+128),w
  3403     078C  07BB               	addwf	sprintf@sp^(0+128),f
  3404     078D                     l3716:
  3405                           
  3406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3407     078D  30FF               	movlw	255
  3408     078E  07BC               	addwf	sprintf@prec^(0+128),f
  3409     078F  1803               	skipnc
  3410     0790  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3411     0791  30FF               	movlw	255
  3412     0792  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3413     0793                     l3718:
  3414                           
  3415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3416     0793  083C               	movf	sprintf@prec^(0+128),w
  3417     0794  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3418     0795  1D03               	btfss	3,2
  3419     0796  2F98               	goto	u6091
  3420     0797  2F99               	goto	u6090
  3421     0798                     u6091:
  3422     0798  2F84               	goto	l3712
  3423     0799                     u6090:
  3424     0799  2FDD               	goto	l3738
  3425     079A                     l3720:
  3426                           
  3427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3428     079A  083C               	movf	sprintf@prec^(0+128),w
  3429     079B  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3430     079C  1D03               	btfss	3,2
  3431     079D  2F9F               	goto	u6101
  3432     079E  2FA0               	goto	u6100
  3433     079F                     u6101:
  3434     079F  2FAE               	goto	l409
  3435     07A0                     u6100:
  3436     07A0                     l3722:
  3437     07A0  0834               	movf	(sprintf@val+3)^(0+128),w
  3438     07A1  0433               	iorwf	(sprintf@val+2)^(0+128),w
  3439     07A2  0432               	iorwf	(sprintf@val+1)^(0+128),w
  3440     07A3  0431               	iorwf	sprintf@val^(0+128),w
  3441     07A4  1D03               	skipz
  3442     07A5  2FA7               	goto	u6111
  3443     07A6  2FA8               	goto	u6110
  3444     07A7                     u6111:
  3445     07A7  2FAE               	goto	l409
  3446     07A8                     u6110:
  3447     07A8                     l3724:
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3450     07A8  3001               	movlw	1
  3451     07A9  07BC               	addwf	sprintf@prec^(0+128),f
  3452     07AA  1803               	skipnc
  3453     07AB  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3454     07AC  3000               	movlw	0
  3455     07AD  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3456     07AE                     l409:
  3457                           
  3458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3459     07AE  083D               	movf	(sprintf@prec+1)^(0+128),w
  3460     07AF  3A80               	xorlw	128
  3461     07B0  3C80               	sublw	128
  3462     07B1  1D03               	skipz
  3463     07B2  2FB5               	goto	u6125
  3464     07B3  083C               	movf	sprintf@prec^(0+128),w
  3465     07B4  0242               	subwf	sprintf@c^(0+128),w
  3466     07B5                     u6125:
  3467     07B5  1803               	skipnc
  3468     07B6  2FB8               	goto	u6121
  3469     07B7  2FB9               	goto	u6120
  3470     07B8                     u6121:
  3471     07B8  2FBA               	goto	l3728
  3472     07B9                     u6120:
  3473     07B9                     l3726:
  3474     07B9  2FC9               	goto	l3732
  3475     07BA                     l3728:
  3476     07BA  1683               	bsf	3,5	;RP0=1, select bank1
  3477     07BB  1303               	bcf	3,6	;RP1=0, select bank1
  3478     07BC  083D               	movf	(sprintf@prec+1)^(0+128),w
  3479     07BD  3A80               	xorlw	128
  3480     07BE  00A5               	movwf	??_sprintf^(0+128)
  3481     07BF  3080               	movlw	128
  3482     07C0  0225               	subwf	??_sprintf^(0+128),w
  3483     07C1  1D03               	skipz
  3484     07C2  2FC5               	goto	u6135
  3485     07C3  0842               	movf	sprintf@c^(0+128),w
  3486     07C4  023C               	subwf	sprintf@prec^(0+128),w
  3487     07C5                     u6135:
  3488     07C5  1803               	skipnc
  3489     07C6  2FC8               	goto	u6131
  3490     07C7  2FC9               	goto	u6130
  3491     07C8                     u6131:
  3492     07C8  2FC9               	goto	l3732
  3493     07C9                     u6130:
  3494     07C9                     l3730:
  3495     07C9                     l3732:
  3496                           
  3497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3498     07C9  3003               	movlw	3
  3499     07CA  1683               	bsf	3,5	;RP0=1, select bank1
  3500     07CB  1303               	bcf	3,6	;RP1=0, select bank1
  3501     07CC  052F               	andwf	sprintf@flag^(0+128),w
  3502     07CD  00A5               	movwf	??_sprintf^(0+128)
  3503     07CE  3000               	movlw	0
  3504     07CF  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3505     07D0  00A6               	movwf	(??_sprintf+1)^(0+128)
  3506     07D1  0825               	movf	??_sprintf^(0+128),w
  3507     07D2  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3508     07D3  1903               	btfsc	3,2
  3509     07D4  2FD6               	goto	u6141
  3510     07D5  2FD7               	goto	u6140
  3511     07D6                     u6141:
  3512     07D6  2FDD               	goto	l3738
  3513     07D7                     u6140:
  3514     07D7                     l3734:
  3515                           
  3516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3517     07D7  083B               	movf	sprintf@sp^(0+128),w
  3518     07D8  0084               	movwf	4
  3519     07D9  302D               	movlw	45
  3520     07DA  1383               	bcf	3,7	;select IRP bank0
  3521     07DB  0080               	movwf	0
  3522     07DC  29C3               	goto	l3550
  3523     07DD                     l3738:
  3524                           
  3525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3526     07DD  3001               	movlw	1
  3527     07DE  07A0               	addwf	sprintf@f^(0+128),f
  3528     07DF  30FF               	movlw	-1
  3529     07E0  0720               	addwf	sprintf@f^(0+128),w
  3530     07E1  0084               	movwf	4
  3531     07E2  160A  118A  200A  120A  118A  	fcall	stringdir
  3532     07E7  00C2               	movwf	sprintf@c^(0+128)
  3533     07E8  0842               	movf	sprintf@c^(0+128),w
  3534     07E9  1D03               	btfss	3,2
  3535     07EA  2FEC               	goto	u6151
  3536     07EB  2FED               	goto	u6150
  3537     07EC                     u6151:
  3538     07EC  29B8               	goto	l3546
  3539     07ED                     u6150:
  3540     07ED                     l3740:
  3541                           
  3542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3543     07ED  083B               	movf	sprintf@sp^(0+128),w
  3544     07EE  0084               	movwf	4
  3545     07EF  1383               	bcf	3,7	;select IRP bank0
  3546     07F0  0180               	clrf	0
  3547     07F1                     l415:
  3548     07F1  0008               	return
  3549     07F2                     __end_of_sprintf:
  3550                           
  3551                           	psect	text2
  3552     0CA1                     __ptext2:	
  3553 ;; *************** function _scale *****************
  3554 ;; Defined at:
  3555 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;  scl             1    wreg     char 
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;  scl             1   48[BANK0 ] char 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  4   30[BANK0 ] char 
  3562 ;; Registers used:
  3563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3569 ;;      Params:         0       4       0       0       0
  3570 ;;      Locals:         0       5       0       0       0
  3571 ;;      Temps:          0      10       0       0       0
  3572 ;;      Totals:         0      19       0       0       0
  3573 ;;Total ram usage:       19 bytes
  3574 ;; Hardware stack levels used: 1
  3575 ;; Hardware stack levels required when called: 2
  3576 ;; This function calls:
  3577 ;;		___awdiv
  3578 ;;		___awmod
  3579 ;;		___flmul
  3580 ;; This function is called by:
  3581 ;;		_sprintf
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           
  3585     0CA1                     _scale:	
  3586                           ;psect for function _scale
  3587                           
  3588                           
  3589                           ;incstack = 0
  3590                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3591                           ;scale@scl stored from wreg
  3592     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  3593     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  3594     0CA3  00D0               	movwf	scale@scl
  3595     0CA4                     l3136:
  3596                           
  3597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3598     0CA4  1FD0               	btfss	scale@scl,7
  3599     0CA5  2CA7               	goto	u4751
  3600     0CA6  2CA8               	goto	u4750
  3601     0CA7                     u4751:
  3602     0CA7  2E55               	goto	l3158
  3603     0CA8                     u4750:
  3604     0CA8                     l3138:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3607     0CA8  09D0               	comf	scale@scl,f
  3608     0CA9  0AD0               	incf	scale@scl,f
  3609     0CAA                     l3140:
  3610                           
  3611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3612     0CAA  0850               	movf	scale@scl,w
  3613     0CAB  3A80               	xorlw	128
  3614     0CAC  3E12               	addlw	-238
  3615     0CAD  1C03               	skipc
  3616     0CAE  2CB0               	goto	u4761
  3617     0CAF  2CB1               	goto	u4760
  3618     0CB0                     u4761:
  3619     0CB0  2D99               	goto	l3148
  3620     0CB1                     u4760:
  3621     0CB1                     l3142:
  3622                           
  3623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3624     0CB1  300A               	movlw	10
  3625     0CB2  00F7               	movwf	___awdiv@divisor
  3626     0CB3  3000               	movlw	0
  3627     0CB4  00F8               	movwf	___awdiv@divisor+1
  3628     0CB5  0850               	movf	scale@scl,w
  3629     0CB6  00F2               	movwf	___awmod@dividend
  3630     0CB7  01F3               	clrf	___awmod@dividend+1
  3631     0CB8  1BF2               	btfsc	___awmod@dividend,7
  3632     0CB9  03F3               	decf	___awmod@dividend+1,f
  3633     0CBA  3064               	movlw	100
  3634     0CBB  00F0               	movwf	___awmod@divisor
  3635     0CBC  3000               	movlw	0
  3636     0CBD  00F1               	movwf	___awmod@divisor+1
  3637     0CBE  160A  158A  2603  120A  158A  	fcall	___awmod
  3638     0CC3  0871               	movf	?___awmod+1,w
  3639     0CC4  00FA               	movwf	___awdiv@dividend+1
  3640     0CC5  0870               	movf	?___awmod,w
  3641     0CC6  00F9               	movwf	___awdiv@dividend
  3642     0CC7  160A  158A  271F  120A  158A  	fcall	___awdiv
  3643     0CCC  0877               	movf	?___awdiv,w
  3644     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  3645     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  3646     0CCF  00C2               	movwf	??_scale
  3647     0CD0  3001               	movlw	1
  3648     0CD1                     u4775:
  3649     0CD1  1003               	clrc
  3650     0CD2  0DC2               	rlf	??_scale,f
  3651     0CD3  3EFF               	addlw	-1
  3652     0CD4  1D03               	skipz
  3653     0CD5  2CD1               	goto	u4775
  3654     0CD6  1003               	clrc
  3655     0CD7  0D42               	rlf	??_scale,w
  3656     0CD8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3657     0CD9  0084               	movwf	4
  3658     0CDA  160A  118A  200A  120A  158A  	fcall	stringdir
  3659     0CDF  00C3               	movwf	??_scale+1
  3660     0CE0  160A  118A  200A  120A  158A  	fcall	stringdir
  3661     0CE5  00C4               	movwf	??_scale+2
  3662     0CE6  160A  118A  200A  120A  158A  	fcall	stringdir
  3663     0CEB  00C5               	movwf	??_scale+3
  3664     0CEC  160A  118A  200A  120A  158A  	fcall	stringdir
  3665     0CF1  00C6               	movwf	??_scale+4
  3666     0CF2  0846               	movf	??_scale+4,w
  3667     0CF3  00A7               	movwf	___flmul@b+3
  3668     0CF4  0845               	movf	??_scale+3,w
  3669     0CF5  00A6               	movwf	___flmul@b+2
  3670     0CF6  0844               	movf	??_scale+2,w
  3671     0CF7  00A5               	movwf	___flmul@b+1
  3672     0CF8  0843               	movf	??_scale+1,w
  3673     0CF9  00A4               	movwf	___flmul@b
  3674     0CFA  3064               	movlw	100
  3675     0CFB  00F7               	movwf	___awdiv@divisor
  3676     0CFC  3000               	movlw	0
  3677     0CFD  00F8               	movwf	___awdiv@divisor+1
  3678     0CFE  0850               	movf	scale@scl,w
  3679     0CFF  00F9               	movwf	___awdiv@dividend
  3680     0D00  01FA               	clrf	___awdiv@dividend+1
  3681     0D01  1BF9               	btfsc	___awdiv@dividend,7
  3682     0D02  03FA               	decf	___awdiv@dividend+1,f
  3683     0D03  160A  158A  271F  120A  158A  	fcall	___awdiv
  3684     0D08  0877               	movf	?___awdiv,w
  3685     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  3686     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  3687     0D0B  00C7               	movwf	??_scale+5
  3688     0D0C  3001               	movlw	1
  3689     0D0D                     u4785:
  3690     0D0D  1003               	clrc
  3691     0D0E  0DC7               	rlf	??_scale+5,f
  3692     0D0F  3EFF               	addlw	-1
  3693     0D10  1D03               	skipz
  3694     0D11  2D0D               	goto	u4785
  3695     0D12  1003               	clrc
  3696     0D13  0D47               	rlf	??_scale+5,w
  3697     0D14  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3698     0D15  0084               	movwf	4
  3699     0D16  160A  118A  200A  120A  158A  	fcall	stringdir
  3700     0D1B  00C8               	movwf	??_scale+6
  3701     0D1C  160A  118A  200A  120A  158A  	fcall	stringdir
  3702     0D21  00C9               	movwf	??_scale+7
  3703     0D22  160A  118A  200A  120A  158A  	fcall	stringdir
  3704     0D27  00CA               	movwf	??_scale+8
  3705     0D28  160A  118A  200A  120A  158A  	fcall	stringdir
  3706     0D2D  00CB               	movwf	??_scale+9
  3707     0D2E  084B               	movf	??_scale+9,w
  3708     0D2F  00AB               	movwf	___flmul@a+3
  3709     0D30  084A               	movf	??_scale+8,w
  3710     0D31  00AA               	movwf	___flmul@a+2
  3711     0D32  0849               	movf	??_scale+7,w
  3712     0D33  00A9               	movwf	___flmul@a+1
  3713     0D34  0848               	movf	??_scale+6,w
  3714     0D35  00A8               	movwf	___flmul@a
  3715     0D36  120A  158A  215C  120A  158A  	fcall	___flmul
  3716     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  3717     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  3718     0D3D  0827               	movf	?___flmul+3,w
  3719     0D3E  00CF               	movwf	_scale$1018+3
  3720     0D3F  0826               	movf	?___flmul+2,w
  3721     0D40  00CE               	movwf	_scale$1018+2
  3722     0D41  0825               	movf	?___flmul+1,w
  3723     0D42  00CD               	movwf	_scale$1018+1
  3724     0D43  0824               	movf	?___flmul,w
  3725     0D44  00CC               	movwf	_scale$1018
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3728     0D45  300A               	movlw	10
  3729     0D46  00F0               	movwf	___awmod@divisor
  3730     0D47  3000               	movlw	0
  3731     0D48  00F1               	movwf	___awmod@divisor+1
  3732     0D49  0850               	movf	scale@scl,w
  3733     0D4A  00F2               	movwf	___awmod@dividend
  3734     0D4B  01F3               	clrf	___awmod@dividend+1
  3735     0D4C  1BF2               	btfsc	___awmod@dividend,7
  3736     0D4D  03F3               	decf	___awmod@dividend+1,f
  3737     0D4E  160A  158A  2603  120A  158A  	fcall	___awmod
  3738     0D53  0870               	movf	?___awmod,w
  3739     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  3740     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  3741     0D56  00C2               	movwf	??_scale
  3742     0D57  3001               	movlw	1
  3743     0D58                     u4795:
  3744     0D58  1003               	clrc
  3745     0D59  0DC2               	rlf	??_scale,f
  3746     0D5A  3EFF               	addlw	-1
  3747     0D5B  1D03               	skipz
  3748     0D5C  2D58               	goto	u4795
  3749     0D5D  1003               	clrc
  3750     0D5E  0D42               	rlf	??_scale,w
  3751     0D5F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3752     0D60  0084               	movwf	4
  3753     0D61  160A  118A  200A  120A  158A  	fcall	stringdir
  3754     0D66  00C3               	movwf	??_scale+1
  3755     0D67  160A  118A  200A  120A  158A  	fcall	stringdir
  3756     0D6C  00C4               	movwf	??_scale+2
  3757     0D6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3758     0D72  00C5               	movwf	??_scale+3
  3759     0D73  160A  118A  200A  120A  158A  	fcall	stringdir
  3760     0D78  00C6               	movwf	??_scale+4
  3761     0D79  0846               	movf	??_scale+4,w
  3762     0D7A  00A7               	movwf	___flmul@b+3
  3763     0D7B  0845               	movf	??_scale+3,w
  3764     0D7C  00A6               	movwf	___flmul@b+2
  3765     0D7D  0844               	movf	??_scale+2,w
  3766     0D7E  00A5               	movwf	___flmul@b+1
  3767     0D7F  0843               	movf	??_scale+1,w
  3768     0D80  00A4               	movwf	___flmul@b
  3769     0D81  084F               	movf	_scale$1018+3,w
  3770     0D82  00AB               	movwf	___flmul@a+3
  3771     0D83  084E               	movf	_scale$1018+2,w
  3772     0D84  00AA               	movwf	___flmul@a+2
  3773     0D85  084D               	movf	_scale$1018+1,w
  3774     0D86  00A9               	movwf	___flmul@a+1
  3775     0D87  084C               	movf	_scale$1018,w
  3776     0D88  00A8               	movwf	___flmul@a
  3777     0D89  120A  158A  215C  120A  158A  	fcall	___flmul
  3778     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  3779     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  3780     0D90  0827               	movf	?___flmul+3,w
  3781     0D91  00C1               	movwf	?_scale+3
  3782     0D92  0826               	movf	?___flmul+2,w
  3783     0D93  00C0               	movwf	?_scale+2
  3784     0D94  0825               	movf	?___flmul+1,w
  3785     0D95  00BF               	movwf	?_scale+1
  3786     0D96  0824               	movf	?___flmul,w
  3787     0D97  00BE               	movwf	?_scale
  3788     0D98  2FFF               	goto	l349
  3789     0D99                     l3148:
  3790     0D99  0850               	movf	scale@scl,w
  3791     0D9A  3A80               	xorlw	128
  3792     0D9B  3E75               	addlw	-139
  3793     0D9C  1C03               	skipc
  3794     0D9D  2D9F               	goto	u4801
  3795     0D9E  2DA0               	goto	u4800
  3796     0D9F                     u4801:
  3797     0D9F  2E28               	goto	l3154
  3798     0DA0                     u4800:
  3799     0DA0                     l3150:
  3800                           
  3801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3802     0DA0  300A               	movlw	10
  3803     0DA1  00F0               	movwf	___awmod@divisor
  3804     0DA2  3000               	movlw	0
  3805     0DA3  00F1               	movwf	___awmod@divisor+1
  3806     0DA4  0850               	movf	scale@scl,w
  3807     0DA5  00F2               	movwf	___awmod@dividend
  3808     0DA6  01F3               	clrf	___awmod@dividend+1
  3809     0DA7  1BF2               	btfsc	___awmod@dividend,7
  3810     0DA8  03F3               	decf	___awmod@dividend+1,f
  3811     0DA9  160A  158A  2603  120A  158A  	fcall	___awmod
  3812     0DAE  0870               	movf	?___awmod,w
  3813     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3814     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  3815     0DB1  00C2               	movwf	??_scale
  3816     0DB2  3001               	movlw	1
  3817     0DB3                     u4815:
  3818     0DB3  1003               	clrc
  3819     0DB4  0DC2               	rlf	??_scale,f
  3820     0DB5  3EFF               	addlw	-1
  3821     0DB6  1D03               	skipz
  3822     0DB7  2DB3               	goto	u4815
  3823     0DB8  1003               	clrc
  3824     0DB9  0D42               	rlf	??_scale,w
  3825     0DBA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3826     0DBB  0084               	movwf	4
  3827     0DBC  160A  118A  200A  120A  158A  	fcall	stringdir
  3828     0DC1  00C3               	movwf	??_scale+1
  3829     0DC2  160A  118A  200A  120A  158A  	fcall	stringdir
  3830     0DC7  00C4               	movwf	??_scale+2
  3831     0DC8  160A  118A  200A  120A  158A  	fcall	stringdir
  3832     0DCD  00C5               	movwf	??_scale+3
  3833     0DCE  160A  118A  200A  120A  158A  	fcall	stringdir
  3834     0DD3  00C6               	movwf	??_scale+4
  3835     0DD4  0846               	movf	??_scale+4,w
  3836     0DD5  00A7               	movwf	___flmul@b+3
  3837     0DD6  0845               	movf	??_scale+3,w
  3838     0DD7  00A6               	movwf	___flmul@b+2
  3839     0DD8  0844               	movf	??_scale+2,w
  3840     0DD9  00A5               	movwf	___flmul@b+1
  3841     0DDA  0843               	movf	??_scale+1,w
  3842     0DDB  00A4               	movwf	___flmul@b
  3843     0DDC  300A               	movlw	10
  3844     0DDD  00F7               	movwf	___awdiv@divisor
  3845     0DDE  3000               	movlw	0
  3846     0DDF  00F8               	movwf	___awdiv@divisor+1
  3847     0DE0  0850               	movf	scale@scl,w
  3848     0DE1  00F9               	movwf	___awdiv@dividend
  3849     0DE2  01FA               	clrf	___awdiv@dividend+1
  3850     0DE3  1BF9               	btfsc	___awdiv@dividend,7
  3851     0DE4  03FA               	decf	___awdiv@dividend+1,f
  3852     0DE5  160A  158A  271F  120A  158A  	fcall	___awdiv
  3853     0DEA  0877               	movf	?___awdiv,w
  3854     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  3855     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  3856     0DED  00C7               	movwf	??_scale+5
  3857     0DEE  3001               	movlw	1
  3858     0DEF                     u4825:
  3859     0DEF  1003               	clrc
  3860     0DF0  0DC7               	rlf	??_scale+5,f
  3861     0DF1  3EFF               	addlw	-1
  3862     0DF2  1D03               	skipz
  3863     0DF3  2DEF               	goto	u4825
  3864     0DF4  1003               	clrc
  3865     0DF5  0D47               	rlf	??_scale+5,w
  3866     0DF6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3867     0DF7  0084               	movwf	4
  3868     0DF8  160A  118A  200A  120A  158A  	fcall	stringdir
  3869     0DFD  00C8               	movwf	??_scale+6
  3870     0DFE  160A  118A  200A  120A  158A  	fcall	stringdir
  3871     0E03  00C9               	movwf	??_scale+7
  3872     0E04  160A  118A  200A  120A  158A  	fcall	stringdir
  3873     0E09  00CA               	movwf	??_scale+8
  3874     0E0A  160A  118A  200A  120A  158A  	fcall	stringdir
  3875     0E0F  00CB               	movwf	??_scale+9
  3876     0E10  084B               	movf	??_scale+9,w
  3877     0E11  00AB               	movwf	___flmul@a+3
  3878     0E12  084A               	movf	??_scale+8,w
  3879     0E13  00AA               	movwf	___flmul@a+2
  3880     0E14  0849               	movf	??_scale+7,w
  3881     0E15  00A9               	movwf	___flmul@a+1
  3882     0E16  0848               	movf	??_scale+6,w
  3883     0E17  00A8               	movwf	___flmul@a
  3884     0E18  120A  158A  215C  120A  158A  	fcall	___flmul
  3885     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  3886     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  3887     0E1F  0827               	movf	?___flmul+3,w
  3888     0E20  00C1               	movwf	?_scale+3
  3889     0E21  0826               	movf	?___flmul+2,w
  3890     0E22  00C0               	movwf	?_scale+2
  3891     0E23  0825               	movf	?___flmul+1,w
  3892     0E24  00BF               	movwf	?_scale+1
  3893     0E25  0824               	movf	?___flmul,w
  3894     0E26  00BE               	movwf	?_scale
  3895     0E27  2FFF               	goto	l349
  3896     0E28                     l3154:
  3897                           
  3898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3899     0E28  0850               	movf	scale@scl,w
  3900     0E29  00C2               	movwf	??_scale
  3901     0E2A  3001               	movlw	1
  3902     0E2B                     u4835:
  3903     0E2B  1003               	clrc
  3904     0E2C  0DC2               	rlf	??_scale,f
  3905     0E2D  3EFF               	addlw	-1
  3906     0E2E  1D03               	skipz
  3907     0E2F  2E2B               	goto	u4835
  3908     0E30  1003               	clrc
  3909     0E31  0D42               	rlf	??_scale,w
  3910     0E32  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3911     0E33  0084               	movwf	4
  3912     0E34  160A  118A  200A  120A  158A  	fcall	stringdir
  3913     0E39  00C3               	movwf	??_scale+1
  3914     0E3A  160A  118A  200A  120A  158A  	fcall	stringdir
  3915     0E3F  00C4               	movwf	??_scale+2
  3916     0E40  160A  118A  200A  120A  158A  	fcall	stringdir
  3917     0E45  00C5               	movwf	??_scale+3
  3918     0E46  160A  118A  200A  120A  158A  	fcall	stringdir
  3919     0E4B  00C6               	movwf	??_scale+4
  3920     0E4C  0846               	movf	??_scale+4,w
  3921     0E4D  00C1               	movwf	?_scale+3
  3922     0E4E  0845               	movf	??_scale+3,w
  3923     0E4F  00C0               	movwf	?_scale+2
  3924     0E50  0844               	movf	??_scale+2,w
  3925     0E51  00BF               	movwf	?_scale+1
  3926     0E52  0843               	movf	??_scale+1,w
  3927     0E53  00BE               	movwf	?_scale
  3928     0E54  2FFF               	goto	l349
  3929     0E55                     l3158:
  3930                           
  3931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3932     0E55  0850               	movf	scale@scl,w
  3933     0E56  3A80               	xorlw	128
  3934     0E57  3E12               	addlw	-238
  3935     0E58  1C03               	skipc
  3936     0E59  2E5B               	goto	u4841
  3937     0E5A  2E5C               	goto	u4840
  3938     0E5B                     u4841:
  3939     0E5B  2F44               	goto	l3166
  3940     0E5C                     u4840:
  3941     0E5C                     l3160:
  3942                           
  3943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3944     0E5C  300A               	movlw	10
  3945     0E5D  00F7               	movwf	___awdiv@divisor
  3946     0E5E  3000               	movlw	0
  3947     0E5F  00F8               	movwf	___awdiv@divisor+1
  3948     0E60  0850               	movf	scale@scl,w
  3949     0E61  00F2               	movwf	___awmod@dividend
  3950     0E62  01F3               	clrf	___awmod@dividend+1
  3951     0E63  1BF2               	btfsc	___awmod@dividend,7
  3952     0E64  03F3               	decf	___awmod@dividend+1,f
  3953     0E65  3064               	movlw	100
  3954     0E66  00F0               	movwf	___awmod@divisor
  3955     0E67  3000               	movlw	0
  3956     0E68  00F1               	movwf	___awmod@divisor+1
  3957     0E69  160A  158A  2603  120A  158A  	fcall	___awmod
  3958     0E6E  0871               	movf	?___awmod+1,w
  3959     0E6F  00FA               	movwf	___awdiv@dividend+1
  3960     0E70  0870               	movf	?___awmod,w
  3961     0E71  00F9               	movwf	___awdiv@dividend
  3962     0E72  160A  158A  271F  120A  158A  	fcall	___awdiv
  3963     0E77  0877               	movf	?___awdiv,w
  3964     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  3965     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  3966     0E7A  00C2               	movwf	??_scale
  3967     0E7B  3001               	movlw	1
  3968     0E7C                     u4855:
  3969     0E7C  1003               	clrc
  3970     0E7D  0DC2               	rlf	??_scale,f
  3971     0E7E  3EFF               	addlw	-1
  3972     0E7F  1D03               	skipz
  3973     0E80  2E7C               	goto	u4855
  3974     0E81  1003               	clrc
  3975     0E82  0D42               	rlf	??_scale,w
  3976     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3977     0E84  0084               	movwf	4
  3978     0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  3979     0E8A  00C3               	movwf	??_scale+1
  3980     0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  3981     0E90  00C4               	movwf	??_scale+2
  3982     0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  3983     0E96  00C5               	movwf	??_scale+3
  3984     0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  3985     0E9C  00C6               	movwf	??_scale+4
  3986     0E9D  0846               	movf	??_scale+4,w
  3987     0E9E  00A7               	movwf	___flmul@b+3
  3988     0E9F  0845               	movf	??_scale+3,w
  3989     0EA0  00A6               	movwf	___flmul@b+2
  3990     0EA1  0844               	movf	??_scale+2,w
  3991     0EA2  00A5               	movwf	___flmul@b+1
  3992     0EA3  0843               	movf	??_scale+1,w
  3993     0EA4  00A4               	movwf	___flmul@b
  3994     0EA5  3064               	movlw	100
  3995     0EA6  00F7               	movwf	___awdiv@divisor
  3996     0EA7  3000               	movlw	0
  3997     0EA8  00F8               	movwf	___awdiv@divisor+1
  3998     0EA9  0850               	movf	scale@scl,w
  3999     0EAA  00F9               	movwf	___awdiv@dividend
  4000     0EAB  01FA               	clrf	___awdiv@dividend+1
  4001     0EAC  1BF9               	btfsc	___awdiv@dividend,7
  4002     0EAD  03FA               	decf	___awdiv@dividend+1,f
  4003     0EAE  160A  158A  271F  120A  158A  	fcall	___awdiv
  4004     0EB3  0877               	movf	?___awdiv,w
  4005     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  4006     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  4007     0EB6  00C7               	movwf	??_scale+5
  4008     0EB7  3001               	movlw	1
  4009     0EB8                     u4865:
  4010     0EB8  1003               	clrc
  4011     0EB9  0DC7               	rlf	??_scale+5,f
  4012     0EBA  3EFF               	addlw	-1
  4013     0EBB  1D03               	skipz
  4014     0EBC  2EB8               	goto	u4865
  4015     0EBD  1003               	clrc
  4016     0EBE  0D47               	rlf	??_scale+5,w
  4017     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4018     0EC0  0084               	movwf	4
  4019     0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  4020     0EC6  00C8               	movwf	??_scale+6
  4021     0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  4022     0ECC  00C9               	movwf	??_scale+7
  4023     0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  4024     0ED2  00CA               	movwf	??_scale+8
  4025     0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  4026     0ED8  00CB               	movwf	??_scale+9
  4027     0ED9  084B               	movf	??_scale+9,w
  4028     0EDA  00AB               	movwf	___flmul@a+3
  4029     0EDB  084A               	movf	??_scale+8,w
  4030     0EDC  00AA               	movwf	___flmul@a+2
  4031     0EDD  0849               	movf	??_scale+7,w
  4032     0EDE  00A9               	movwf	___flmul@a+1
  4033     0EDF  0848               	movf	??_scale+6,w
  4034     0EE0  00A8               	movwf	___flmul@a
  4035     0EE1  120A  158A  215C  120A  158A  	fcall	___flmul
  4036     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4037     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4038     0EE8  0827               	movf	?___flmul+3,w
  4039     0EE9  00CF               	movwf	_scale$1018+3
  4040     0EEA  0826               	movf	?___flmul+2,w
  4041     0EEB  00CE               	movwf	_scale$1018+2
  4042     0EEC  0825               	movf	?___flmul+1,w
  4043     0EED  00CD               	movwf	_scale$1018+1
  4044     0EEE  0824               	movf	?___flmul,w
  4045     0EEF  00CC               	movwf	_scale$1018
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4048     0EF0  300A               	movlw	10
  4049     0EF1  00F0               	movwf	___awmod@divisor
  4050     0EF2  3000               	movlw	0
  4051     0EF3  00F1               	movwf	___awmod@divisor+1
  4052     0EF4  0850               	movf	scale@scl,w
  4053     0EF5  00F2               	movwf	___awmod@dividend
  4054     0EF6  01F3               	clrf	___awmod@dividend+1
  4055     0EF7  1BF2               	btfsc	___awmod@dividend,7
  4056     0EF8  03F3               	decf	___awmod@dividend+1,f
  4057     0EF9  160A  158A  2603  120A  158A  	fcall	___awmod
  4058     0EFE  0870               	movf	?___awmod,w
  4059     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4060     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4061     0F01  00C2               	movwf	??_scale
  4062     0F02  3001               	movlw	1
  4063     0F03                     u4875:
  4064     0F03  1003               	clrc
  4065     0F04  0DC2               	rlf	??_scale,f
  4066     0F05  3EFF               	addlw	-1
  4067     0F06  1D03               	skipz
  4068     0F07  2F03               	goto	u4875
  4069     0F08  1003               	clrc
  4070     0F09  0D42               	rlf	??_scale,w
  4071     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4072     0F0B  0084               	movwf	4
  4073     0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4074     0F11  00C3               	movwf	??_scale+1
  4075     0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  4076     0F17  00C4               	movwf	??_scale+2
  4077     0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  4078     0F1D  00C5               	movwf	??_scale+3
  4079     0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  4080     0F23  00C6               	movwf	??_scale+4
  4081     0F24  0846               	movf	??_scale+4,w
  4082     0F25  00A7               	movwf	___flmul@b+3
  4083     0F26  0845               	movf	??_scale+3,w
  4084     0F27  00A6               	movwf	___flmul@b+2
  4085     0F28  0844               	movf	??_scale+2,w
  4086     0F29  00A5               	movwf	___flmul@b+1
  4087     0F2A  0843               	movf	??_scale+1,w
  4088     0F2B  00A4               	movwf	___flmul@b
  4089     0F2C  084F               	movf	_scale$1018+3,w
  4090     0F2D  00AB               	movwf	___flmul@a+3
  4091     0F2E  084E               	movf	_scale$1018+2,w
  4092     0F2F  00AA               	movwf	___flmul@a+2
  4093     0F30  084D               	movf	_scale$1018+1,w
  4094     0F31  00A9               	movwf	___flmul@a+1
  4095     0F32  084C               	movf	_scale$1018,w
  4096     0F33  00A8               	movwf	___flmul@a
  4097     0F34  120A  158A  215C  120A  158A  	fcall	___flmul
  4098     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4099     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4100     0F3B  0827               	movf	?___flmul+3,w
  4101     0F3C  00C1               	movwf	?_scale+3
  4102     0F3D  0826               	movf	?___flmul+2,w
  4103     0F3E  00C0               	movwf	?_scale+2
  4104     0F3F  0825               	movf	?___flmul+1,w
  4105     0F40  00BF               	movwf	?_scale+1
  4106     0F41  0824               	movf	?___flmul,w
  4107     0F42  00BE               	movwf	?_scale
  4108     0F43  2FFF               	goto	l349
  4109     0F44                     l3166:
  4110     0F44  0850               	movf	scale@scl,w
  4111     0F45  3A80               	xorlw	128
  4112     0F46  3E75               	addlw	-139
  4113     0F47  1C03               	skipc
  4114     0F48  2F4A               	goto	u4881
  4115     0F49  2F4B               	goto	u4880
  4116     0F4A                     u4881:
  4117     0F4A  2FD3               	goto	l3172
  4118     0F4B                     u4880:
  4119     0F4B                     l3168:
  4120                           
  4121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4122     0F4B  300A               	movlw	10
  4123     0F4C  00F0               	movwf	___awmod@divisor
  4124     0F4D  3000               	movlw	0
  4125     0F4E  00F1               	movwf	___awmod@divisor+1
  4126     0F4F  0850               	movf	scale@scl,w
  4127     0F50  00F2               	movwf	___awmod@dividend
  4128     0F51  01F3               	clrf	___awmod@dividend+1
  4129     0F52  1BF2               	btfsc	___awmod@dividend,7
  4130     0F53  03F3               	decf	___awmod@dividend+1,f
  4131     0F54  160A  158A  2603  120A  158A  	fcall	___awmod
  4132     0F59  0870               	movf	?___awmod,w
  4133     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4134     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4135     0F5C  00C2               	movwf	??_scale
  4136     0F5D  3001               	movlw	1
  4137     0F5E                     u4895:
  4138     0F5E  1003               	clrc
  4139     0F5F  0DC2               	rlf	??_scale,f
  4140     0F60  3EFF               	addlw	-1
  4141     0F61  1D03               	skipz
  4142     0F62  2F5E               	goto	u4895
  4143     0F63  1003               	clrc
  4144     0F64  0D42               	rlf	??_scale,w
  4145     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4146     0F66  0084               	movwf	4
  4147     0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  4148     0F6C  00C3               	movwf	??_scale+1
  4149     0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  4150     0F72  00C4               	movwf	??_scale+2
  4151     0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  4152     0F78  00C5               	movwf	??_scale+3
  4153     0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  4154     0F7E  00C6               	movwf	??_scale+4
  4155     0F7F  0846               	movf	??_scale+4,w
  4156     0F80  00A7               	movwf	___flmul@b+3
  4157     0F81  0845               	movf	??_scale+3,w
  4158     0F82  00A6               	movwf	___flmul@b+2
  4159     0F83  0844               	movf	??_scale+2,w
  4160     0F84  00A5               	movwf	___flmul@b+1
  4161     0F85  0843               	movf	??_scale+1,w
  4162     0F86  00A4               	movwf	___flmul@b
  4163     0F87  300A               	movlw	10
  4164     0F88  00F7               	movwf	___awdiv@divisor
  4165     0F89  3000               	movlw	0
  4166     0F8A  00F8               	movwf	___awdiv@divisor+1
  4167     0F8B  0850               	movf	scale@scl,w
  4168     0F8C  00F9               	movwf	___awdiv@dividend
  4169     0F8D  01FA               	clrf	___awdiv@dividend+1
  4170     0F8E  1BF9               	btfsc	___awdiv@dividend,7
  4171     0F8F  03FA               	decf	___awdiv@dividend+1,f
  4172     0F90  160A  158A  271F  120A  158A  	fcall	___awdiv
  4173     0F95  0877               	movf	?___awdiv,w
  4174     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4175     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  4176     0F98  00C7               	movwf	??_scale+5
  4177     0F99  3001               	movlw	1
  4178     0F9A                     u4905:
  4179     0F9A  1003               	clrc
  4180     0F9B  0DC7               	rlf	??_scale+5,f
  4181     0F9C  3EFF               	addlw	-1
  4182     0F9D  1D03               	skipz
  4183     0F9E  2F9A               	goto	u4905
  4184     0F9F  1003               	clrc
  4185     0FA0  0D47               	rlf	??_scale+5,w
  4186     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4187     0FA2  0084               	movwf	4
  4188     0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4189     0FA8  00C8               	movwf	??_scale+6
  4190     0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4191     0FAE  00C9               	movwf	??_scale+7
  4192     0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  4193     0FB4  00CA               	movwf	??_scale+8
  4194     0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4195     0FBA  00CB               	movwf	??_scale+9
  4196     0FBB  084B               	movf	??_scale+9,w
  4197     0FBC  00AB               	movwf	___flmul@a+3
  4198     0FBD  084A               	movf	??_scale+8,w
  4199     0FBE  00AA               	movwf	___flmul@a+2
  4200     0FBF  0849               	movf	??_scale+7,w
  4201     0FC0  00A9               	movwf	___flmul@a+1
  4202     0FC1  0848               	movf	??_scale+6,w
  4203     0FC2  00A8               	movwf	___flmul@a
  4204     0FC3  120A  158A  215C  120A  158A  	fcall	___flmul
  4205     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4206     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4207     0FCA  0827               	movf	?___flmul+3,w
  4208     0FCB  00C1               	movwf	?_scale+3
  4209     0FCC  0826               	movf	?___flmul+2,w
  4210     0FCD  00C0               	movwf	?_scale+2
  4211     0FCE  0825               	movf	?___flmul+1,w
  4212     0FCF  00BF               	movwf	?_scale+1
  4213     0FD0  0824               	movf	?___flmul,w
  4214     0FD1  00BE               	movwf	?_scale
  4215     0FD2  2FFF               	goto	l349
  4216     0FD3                     l3172:
  4217                           
  4218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4219     0FD3  0850               	movf	scale@scl,w
  4220     0FD4  00C2               	movwf	??_scale
  4221     0FD5  3001               	movlw	1
  4222     0FD6                     u4915:
  4223     0FD6  1003               	clrc
  4224     0FD7  0DC2               	rlf	??_scale,f
  4225     0FD8  3EFF               	addlw	-1
  4226     0FD9  1D03               	skipz
  4227     0FDA  2FD6               	goto	u4915
  4228     0FDB  1003               	clrc
  4229     0FDC  0D42               	rlf	??_scale,w
  4230     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4231     0FDE  0084               	movwf	4
  4232     0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  4233     0FE4  00C3               	movwf	??_scale+1
  4234     0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4235     0FEA  00C4               	movwf	??_scale+2
  4236     0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  4237     0FF0  00C5               	movwf	??_scale+3
  4238     0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  4239     0FF6  00C6               	movwf	??_scale+4
  4240     0FF7  0846               	movf	??_scale+4,w
  4241     0FF8  00C1               	movwf	?_scale+3
  4242     0FF9  0845               	movf	??_scale+3,w
  4243     0FFA  00C0               	movwf	?_scale+2
  4244     0FFB  0844               	movf	??_scale+2,w
  4245     0FFC  00BF               	movwf	?_scale+1
  4246     0FFD  0843               	movf	??_scale+1,w
  4247     0FFE  00BE               	movwf	?_scale
  4248     0FFF                     l349:
  4249     0FFF  0008               	return
  4250     1000                     __end_of_scale:
  4251                           
  4252                           	psect	text3
  4253     1E03                     __ptext3:	
  4254 ;; *************** function ___awmod *****************
  4255 ;; Defined at:
  4256 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  divisor         2    0[COMMON] int 
  4259 ;;  dividend        2    2[COMMON] int 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  sign            1    6[COMMON] unsigned char 
  4262 ;;  counter         1    5[COMMON] unsigned char 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  2    0[COMMON] int 
  4265 ;; Registers used:
  4266 ;;		wreg, status,2, status,0
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4272 ;;      Params:         4       0       0       0       0
  4273 ;;      Locals:         2       0       0       0       0
  4274 ;;      Temps:          1       0       0       0       0
  4275 ;;      Totals:         7       0       0       0       0
  4276 ;;Total ram usage:        7 bytes
  4277 ;; Hardware stack levels used: 1
  4278 ;; This function calls:
  4279 ;;		Nothing
  4280 ;; This function is called by:
  4281 ;;		_scale
  4282 ;;		_descomponer
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286     1E03                     ___awmod:	
  4287                           ;psect for function ___awmod
  4288                           
  4289     1E03                     l2652:	
  4290                           ;incstack = 0
  4291                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4292                           
  4293     1E03  01F6               	clrf	___awmod@sign
  4294     1E04                     l2654:
  4295     1E04  1FF3               	btfss	___awmod@dividend+1,7
  4296     1E05  2E07               	goto	u3581
  4297     1E06  2E08               	goto	u3580
  4298     1E07                     u3581:
  4299     1E07  2E0F               	goto	l2660
  4300     1E08                     u3580:
  4301     1E08                     l2656:
  4302     1E08  09F2               	comf	___awmod@dividend,f
  4303     1E09  09F3               	comf	___awmod@dividend+1,f
  4304     1E0A  0AF2               	incf	___awmod@dividend,f
  4305     1E0B  1903               	skipnz
  4306     1E0C  0AF3               	incf	___awmod@dividend+1,f
  4307     1E0D                     l2658:
  4308     1E0D  01F6               	clrf	___awmod@sign
  4309     1E0E  0AF6               	incf	___awmod@sign,f
  4310     1E0F                     l2660:
  4311     1E0F  1FF1               	btfss	___awmod@divisor+1,7
  4312     1E10  2E12               	goto	u3591
  4313     1E11  2E13               	goto	u3590
  4314     1E12                     u3591:
  4315     1E12  2E18               	goto	l2664
  4316     1E13                     u3590:
  4317     1E13                     l2662:
  4318     1E13  09F0               	comf	___awmod@divisor,f
  4319     1E14  09F1               	comf	___awmod@divisor+1,f
  4320     1E15  0AF0               	incf	___awmod@divisor,f
  4321     1E16  1903               	skipnz
  4322     1E17  0AF1               	incf	___awmod@divisor+1,f
  4323     1E18                     l2664:
  4324     1E18  0870               	movf	___awmod@divisor,w
  4325     1E19  0471               	iorwf	___awmod@divisor+1,w
  4326     1E1A  1903               	btfsc	3,2
  4327     1E1B  2E1D               	goto	u3601
  4328     1E1C  2E1E               	goto	u3600
  4329     1E1D                     u3601:
  4330     1E1D  2E4D               	goto	l2682
  4331     1E1E                     u3600:
  4332     1E1E                     l2666:
  4333     1E1E  01F5               	clrf	___awmod@counter
  4334     1E1F  0AF5               	incf	___awmod@counter,f
  4335     1E20  2E2C               	goto	l2672
  4336     1E21                     l2668:
  4337     1E21  3001               	movlw	1
  4338     1E22                     u3615:
  4339     1E22  1003               	clrc
  4340     1E23  0DF0               	rlf	___awmod@divisor,f
  4341     1E24  0DF1               	rlf	___awmod@divisor+1,f
  4342     1E25  3EFF               	addlw	-1
  4343     1E26  1D03               	skipz
  4344     1E27  2E22               	goto	u3615
  4345     1E28                     l2670:
  4346     1E28  3001               	movlw	1
  4347     1E29  00F4               	movwf	??___awmod
  4348     1E2A  0874               	movf	??___awmod,w
  4349     1E2B  07F5               	addwf	___awmod@counter,f
  4350     1E2C                     l2672:
  4351     1E2C  1FF1               	btfss	___awmod@divisor+1,7
  4352     1E2D  2E2F               	goto	u3621
  4353     1E2E  2E30               	goto	u3620
  4354     1E2F                     u3621:
  4355     1E2F  2E21               	goto	l2668
  4356     1E30                     u3620:
  4357     1E30                     l2674:
  4358     1E30  0871               	movf	___awmod@divisor+1,w
  4359     1E31  0273               	subwf	___awmod@dividend+1,w
  4360     1E32  1D03               	skipz
  4361     1E33  2E36               	goto	u3635
  4362     1E34  0870               	movf	___awmod@divisor,w
  4363     1E35  0272               	subwf	___awmod@dividend,w
  4364     1E36                     u3635:
  4365     1E36  1C03               	skipc
  4366     1E37  2E39               	goto	u3631
  4367     1E38  2E3A               	goto	u3630
  4368     1E39                     u3631:
  4369     1E39  2E40               	goto	l2678
  4370     1E3A                     u3630:
  4371     1E3A                     l2676:
  4372     1E3A  0870               	movf	___awmod@divisor,w
  4373     1E3B  02F2               	subwf	___awmod@dividend,f
  4374     1E3C  0871               	movf	___awmod@divisor+1,w
  4375     1E3D  1C03               	skipc
  4376     1E3E  03F3               	decf	___awmod@dividend+1,f
  4377     1E3F  02F3               	subwf	___awmod@dividend+1,f
  4378     1E40                     l2678:
  4379     1E40  3001               	movlw	1
  4380     1E41                     u3645:
  4381     1E41  1003               	clrc
  4382     1E42  0CF1               	rrf	___awmod@divisor+1,f
  4383     1E43  0CF0               	rrf	___awmod@divisor,f
  4384     1E44  3EFF               	addlw	-1
  4385     1E45  1D03               	skipz
  4386     1E46  2E41               	goto	u3645
  4387     1E47                     l2680:
  4388     1E47  3001               	movlw	1
  4389     1E48  02F5               	subwf	___awmod@counter,f
  4390     1E49  1D03               	btfss	3,2
  4391     1E4A  2E4C               	goto	u3651
  4392     1E4B  2E4D               	goto	u3650
  4393     1E4C                     u3651:
  4394     1E4C  2E30               	goto	l2674
  4395     1E4D                     u3650:
  4396     1E4D                     l2682:
  4397     1E4D  0876               	movf	___awmod@sign,w
  4398     1E4E  1903               	btfsc	3,2
  4399     1E4F  2E51               	goto	u3661
  4400     1E50  2E52               	goto	u3660
  4401     1E51                     u3661:
  4402     1E51  2E57               	goto	l2686
  4403     1E52                     u3660:
  4404     1E52                     l2684:
  4405     1E52  09F2               	comf	___awmod@dividend,f
  4406     1E53  09F3               	comf	___awmod@dividend+1,f
  4407     1E54  0AF2               	incf	___awmod@dividend,f
  4408     1E55  1903               	skipnz
  4409     1E56  0AF3               	incf	___awmod@dividend+1,f
  4410     1E57                     l2686:
  4411     1E57  0873               	movf	___awmod@dividend+1,w
  4412     1E58  00F1               	movwf	?___awmod+1
  4413     1E59  0872               	movf	___awmod@dividend,w
  4414     1E5A  00F0               	movwf	?___awmod
  4415     1E5B                     l585:
  4416     1E5B  0008               	return
  4417     1E5C                     __end_of___awmod:
  4418                           
  4419                           	psect	text4
  4420     1F1F                     __ptext4:	
  4421 ;; *************** function ___awdiv *****************
  4422 ;; Defined at:
  4423 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  divisor         2    7[COMMON] int 
  4426 ;;  dividend        2    9[COMMON] int 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  quotient        2    2[BANK0 ] int 
  4429 ;;  sign            1    1[BANK0 ] unsigned char 
  4430 ;;  counter         1    0[BANK0 ] unsigned char 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  2    7[COMMON] int 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4440 ;;      Params:         4       0       0       0       0
  4441 ;;      Locals:         0       4       0       0       0
  4442 ;;      Temps:          1       0       0       0       0
  4443 ;;      Totals:         5       4       0       0       0
  4444 ;;Total ram usage:        9 bytes
  4445 ;; Hardware stack levels used: 1
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		_scale
  4450 ;;		_sprintf
  4451 ;;		_descomponer
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455     1F1F                     ___awdiv:	
  4456                           ;psect for function ___awdiv
  4457                           
  4458     1F1F                     l2608:	
  4459                           ;incstack = 0
  4460                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4461                           
  4462     1F1F  1283               	bcf	3,5	;RP0=0, select bank0
  4463     1F20  1303               	bcf	3,6	;RP1=0, select bank0
  4464     1F21  01A1               	clrf	___awdiv@sign
  4465     1F22                     l2610:
  4466     1F22  1FF8               	btfss	___awdiv@divisor+1,7
  4467     1F23  2F25               	goto	u3481
  4468     1F24  2F26               	goto	u3480
  4469     1F25                     u3481:
  4470     1F25  2F2D               	goto	l2616
  4471     1F26                     u3480:
  4472     1F26                     l2612:
  4473     1F26  09F7               	comf	___awdiv@divisor,f
  4474     1F27  09F8               	comf	___awdiv@divisor+1,f
  4475     1F28  0AF7               	incf	___awdiv@divisor,f
  4476     1F29  1903               	skipnz
  4477     1F2A  0AF8               	incf	___awdiv@divisor+1,f
  4478     1F2B                     l2614:
  4479     1F2B  01A1               	clrf	___awdiv@sign
  4480     1F2C  0AA1               	incf	___awdiv@sign,f
  4481     1F2D                     l2616:
  4482     1F2D  1FFA               	btfss	___awdiv@dividend+1,7
  4483     1F2E  2F30               	goto	u3491
  4484     1F2F  2F31               	goto	u3490
  4485     1F30                     u3491:
  4486     1F30  2F3A               	goto	l2622
  4487     1F31                     u3490:
  4488     1F31                     l2618:
  4489     1F31  09F9               	comf	___awdiv@dividend,f
  4490     1F32  09FA               	comf	___awdiv@dividend+1,f
  4491     1F33  0AF9               	incf	___awdiv@dividend,f
  4492     1F34  1903               	skipnz
  4493     1F35  0AFA               	incf	___awdiv@dividend+1,f
  4494     1F36                     l2620:
  4495     1F36  3001               	movlw	1
  4496     1F37  00FB               	movwf	??___awdiv
  4497     1F38  087B               	movf	??___awdiv,w
  4498     1F39  06A1               	xorwf	___awdiv@sign,f
  4499     1F3A                     l2622:
  4500     1F3A  01A2               	clrf	___awdiv@quotient
  4501     1F3B  01A3               	clrf	___awdiv@quotient+1
  4502     1F3C                     l2624:
  4503     1F3C  0877               	movf	___awdiv@divisor,w
  4504     1F3D  0478               	iorwf	___awdiv@divisor+1,w
  4505     1F3E  1903               	btfsc	3,2
  4506     1F3F  2F41               	goto	u3501
  4507     1F40  2F42               	goto	u3500
  4508     1F41                     u3501:
  4509     1F41  2F79               	goto	l2644
  4510     1F42                     u3500:
  4511     1F42                     l2626:
  4512     1F42  01A0               	clrf	___awdiv@counter
  4513     1F43  0AA0               	incf	___awdiv@counter,f
  4514     1F44  2F50               	goto	l2632
  4515     1F45                     l2628:
  4516     1F45  3001               	movlw	1
  4517     1F46                     u3515:
  4518     1F46  1003               	clrc
  4519     1F47  0DF7               	rlf	___awdiv@divisor,f
  4520     1F48  0DF8               	rlf	___awdiv@divisor+1,f
  4521     1F49  3EFF               	addlw	-1
  4522     1F4A  1D03               	skipz
  4523     1F4B  2F46               	goto	u3515
  4524     1F4C                     l2630:
  4525     1F4C  3001               	movlw	1
  4526     1F4D  00FB               	movwf	??___awdiv
  4527     1F4E  087B               	movf	??___awdiv,w
  4528     1F4F  07A0               	addwf	___awdiv@counter,f
  4529     1F50                     l2632:
  4530     1F50  1FF8               	btfss	___awdiv@divisor+1,7
  4531     1F51  2F53               	goto	u3521
  4532     1F52  2F54               	goto	u3520
  4533     1F53                     u3521:
  4534     1F53  2F45               	goto	l2628
  4535     1F54                     u3520:
  4536     1F54                     l2634:
  4537     1F54  3001               	movlw	1
  4538     1F55                     u3535:
  4539     1F55  1003               	clrc
  4540     1F56  0DA2               	rlf	___awdiv@quotient,f
  4541     1F57  0DA3               	rlf	___awdiv@quotient+1,f
  4542     1F58  3EFF               	addlw	-1
  4543     1F59  1D03               	skipz
  4544     1F5A  2F55               	goto	u3535
  4545     1F5B  0878               	movf	___awdiv@divisor+1,w
  4546     1F5C  027A               	subwf	___awdiv@dividend+1,w
  4547     1F5D  1D03               	skipz
  4548     1F5E  2F61               	goto	u3545
  4549     1F5F  0877               	movf	___awdiv@divisor,w
  4550     1F60  0279               	subwf	___awdiv@dividend,w
  4551     1F61                     u3545:
  4552     1F61  1C03               	skipc
  4553     1F62  2F64               	goto	u3541
  4554     1F63  2F65               	goto	u3540
  4555     1F64                     u3541:
  4556     1F64  2F6C               	goto	l2640
  4557     1F65                     u3540:
  4558     1F65                     l2636:
  4559     1F65  0877               	movf	___awdiv@divisor,w
  4560     1F66  02F9               	subwf	___awdiv@dividend,f
  4561     1F67  0878               	movf	___awdiv@divisor+1,w
  4562     1F68  1C03               	skipc
  4563     1F69  03FA               	decf	___awdiv@dividend+1,f
  4564     1F6A  02FA               	subwf	___awdiv@dividend+1,f
  4565     1F6B                     l2638:
  4566     1F6B  1422               	bsf	___awdiv@quotient,0
  4567     1F6C                     l2640:
  4568     1F6C  3001               	movlw	1
  4569     1F6D                     u3555:
  4570     1F6D  1003               	clrc
  4571     1F6E  0CF8               	rrf	___awdiv@divisor+1,f
  4572     1F6F  0CF7               	rrf	___awdiv@divisor,f
  4573     1F70  3EFF               	addlw	-1
  4574     1F71  1D03               	skipz
  4575     1F72  2F6D               	goto	u3555
  4576     1F73                     l2642:
  4577     1F73  3001               	movlw	1
  4578     1F74  02A0               	subwf	___awdiv@counter,f
  4579     1F75  1D03               	btfss	3,2
  4580     1F76  2F78               	goto	u3561
  4581     1F77  2F79               	goto	u3560
  4582     1F78                     u3561:
  4583     1F78  2F54               	goto	l2634
  4584     1F79                     u3560:
  4585     1F79                     l2644:
  4586     1F79  0821               	movf	___awdiv@sign,w
  4587     1F7A  1903               	btfsc	3,2
  4588     1F7B  2F7D               	goto	u3571
  4589     1F7C  2F7E               	goto	u3570
  4590     1F7D                     u3571:
  4591     1F7D  2F83               	goto	l2648
  4592     1F7E                     u3570:
  4593     1F7E                     l2646:
  4594     1F7E  09A2               	comf	___awdiv@quotient,f
  4595     1F7F  09A3               	comf	___awdiv@quotient+1,f
  4596     1F80  0AA2               	incf	___awdiv@quotient,f
  4597     1F81  1903               	skipnz
  4598     1F82  0AA3               	incf	___awdiv@quotient+1,f
  4599     1F83                     l2648:
  4600     1F83  0823               	movf	___awdiv@quotient+1,w
  4601     1F84  00F8               	movwf	?___awdiv+1
  4602     1F85  0822               	movf	___awdiv@quotient,w
  4603     1F86  00F7               	movwf	?___awdiv
  4604     1F87                     l572:
  4605     1F87  0008               	return
  4606     1F88                     __end_of___awdiv:
  4607                           
  4608                           	psect	text5
  4609     1AE0                     __ptext5:	
  4610 ;; *************** function _isdigit *****************
  4611 ;; Defined at:
  4612 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  c               1    wreg     unsigned char 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  c               1    1[COMMON] unsigned char 
  4617 ;; Return value:  Size  Location     Type
  4618 ;;		None               void
  4619 ;; Registers used:
  4620 ;;		wreg, status,2, status,0
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4626 ;;      Params:         0       0       0       0       0
  4627 ;;      Locals:         2       0       0       0       0
  4628 ;;      Temps:          0       0       0       0       0
  4629 ;;      Totals:         2       0       0       0       0
  4630 ;;Total ram usage:        2 bytes
  4631 ;; Hardware stack levels used: 1
  4632 ;; This function calls:
  4633 ;;		Nothing
  4634 ;; This function is called by:
  4635 ;;		_sprintf
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639     1AE0                     _isdigit:	
  4640                           ;psect for function _isdigit
  4641                           
  4642                           
  4643                           ;incstack = 0
  4644                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4645                           ;isdigit@c stored from wreg
  4646     1AE0  00F1               	movwf	isdigit@c
  4647     1AE1                     l3176:
  4648     1AE1  01F0               	clrf	_isdigit$816
  4649     1AE2                     l3178:
  4650     1AE2  303A               	movlw	58
  4651     1AE3  0271               	subwf	isdigit@c,w
  4652     1AE4  1803               	skipnc
  4653     1AE5  2AE7               	goto	u4921
  4654     1AE6  2AE8               	goto	u4920
  4655     1AE7                     u4921:
  4656     1AE7  2AF0               	goto	l3184
  4657     1AE8                     u4920:
  4658     1AE8                     l3180:
  4659     1AE8  3030               	movlw	48
  4660     1AE9  0271               	subwf	isdigit@c,w
  4661     1AEA  1C03               	skipc
  4662     1AEB  2AED               	goto	u4931
  4663     1AEC  2AEE               	goto	u4930
  4664     1AED                     u4931:
  4665     1AED  2AF0               	goto	l3184
  4666     1AEE                     u4930:
  4667     1AEE                     l3182:
  4668     1AEE  01F0               	clrf	_isdigit$816
  4669     1AEF  0AF0               	incf	_isdigit$816,f
  4670     1AF0                     l3184:
  4671     1AF0  0C70               	rrf	_isdigit$816,w
  4672     1AF1                     l906:
  4673     1AF1  0008               	return
  4674     1AF2                     __end_of_isdigit:
  4675                           
  4676                           	psect	text6
  4677     139D                     __ptext6:	
  4678 ;; *************** function _fround *****************
  4679 ;; Defined at:
  4680 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;  prec            1    wreg     unsigned char 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;  prec            1   49[BANK0 ] unsigned char 
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  4   30[BANK0 ] unsigned char 
  4687 ;; Registers used:
  4688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4694 ;;      Params:         0       4       0       0       0
  4695 ;;      Locals:         0       9       0       0       0
  4696 ;;      Temps:          0       7       0       0       0
  4697 ;;      Totals:         0      20       0       0       0
  4698 ;;Total ram usage:       20 bytes
  4699 ;; Hardware stack levels used: 1
  4700 ;; Hardware stack levels required when called: 2
  4701 ;; This function calls:
  4702 ;;		___flmul
  4703 ;;		___lwdiv
  4704 ;;		___lwmod
  4705 ;; This function is called by:
  4706 ;;		_sprintf
  4707 ;; This function uses a non-reentrant model
  4708 ;;
  4709                           
  4710     139D                     _fround:	
  4711                           ;psect for function _fround
  4712                           
  4713                           
  4714                           ;incstack = 0
  4715                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4716                           ;fround@prec stored from wreg
  4717     139D  1283               	bcf	3,5	;RP0=0, select bank0
  4718     139E  1303               	bcf	3,6	;RP1=0, select bank0
  4719     139F  00D1               	movwf	fround@prec
  4720     13A0                     l3118:
  4721                           
  4722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4723     13A0  306E               	movlw	110
  4724     13A1  0251               	subwf	fround@prec,w
  4725     13A2  1C03               	skipc
  4726     13A3  2BA5               	goto	u4671
  4727     13A4  2BA6               	goto	u4670
  4728     13A5                     u4671:
  4729     13A5  2CB3               	goto	l3126
  4730     13A6                     u4670:
  4731     13A6                     l3120:
  4732                           
  4733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4734     13A6  303F               	movlw	63
  4735     13A7  00A7               	movwf	___flmul@b+3
  4736     13A8  3000               	movlw	0
  4737     13A9  00A6               	movwf	___flmul@b+2
  4738     13AA  3000               	movlw	0
  4739     13AB  00A5               	movwf	___flmul@b+1
  4740     13AC  3000               	movlw	0
  4741     13AD  00A4               	movwf	___flmul@b
  4742     13AE  3064               	movlw	100
  4743     13AF  00F6               	movwf	___lwdiv@divisor
  4744     13B0  3000               	movlw	0
  4745     13B1  00F7               	movwf	___lwdiv@divisor+1
  4746     13B2  0851               	movf	fround@prec,w
  4747     13B3  00C2               	movwf	??_fround
  4748     13B4  01C3               	clrf	??_fround+1
  4749     13B5  0842               	movf	??_fround,w
  4750     13B6  00F8               	movwf	___lwdiv@dividend
  4751     13B7  0843               	movf	??_fround+1,w
  4752     13B8  00F9               	movwf	___lwdiv@dividend+1
  4753     13B9  160A  158A  24D7  160A  118A  	fcall	___lwdiv
  4754     13BE  0876               	movf	?___lwdiv,w
  4755     13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4756     13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4757     13C1  00C4               	movwf	??_fround+2
  4758     13C2  3001               	movlw	1
  4759     13C3                     u4685:
  4760     13C3  1003               	clrc
  4761     13C4  0DC4               	rlf	??_fround+2,f
  4762     13C5  3EFF               	addlw	-1
  4763     13C6  1D03               	skipz
  4764     13C7  2BC3               	goto	u4685
  4765     13C8  1003               	clrc
  4766     13C9  0D44               	rlf	??_fround+2,w
  4767     13CA  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4768     13CB  0084               	movwf	4
  4769     13CC  160A  118A  200A  160A  118A  	fcall	stringdir
  4770     13D1  00C5               	movwf	??_fround+3
  4771     13D2  160A  118A  200A  160A  118A  	fcall	stringdir
  4772     13D7  00C6               	movwf	??_fround+4
  4773     13D8  160A  118A  200A  160A  118A  	fcall	stringdir
  4774     13DD  00C7               	movwf	??_fround+5
  4775     13DE  160A  118A  200A  160A  118A  	fcall	stringdir
  4776     13E3  00C8               	movwf	??_fround+6
  4777     13E4  0848               	movf	??_fround+6,w
  4778     13E5  00AB               	movwf	___flmul@a+3
  4779     13E6  0847               	movf	??_fround+5,w
  4780     13E7  00AA               	movwf	___flmul@a+2
  4781     13E8  0846               	movf	??_fround+4,w
  4782     13E9  00A9               	movwf	___flmul@a+1
  4783     13EA  0845               	movf	??_fround+3,w
  4784     13EB  00A8               	movwf	___flmul@a
  4785     13EC  120A  158A  215C  160A  118A  	fcall	___flmul
  4786     13F1  1283               	bcf	3,5	;RP0=0, select bank0
  4787     13F2  1303               	bcf	3,6	;RP1=0, select bank0
  4788     13F3  0827               	movf	?___flmul+3,w
  4789     13F4  00D0               	movwf	_fround$1016+3
  4790     13F5  0826               	movf	?___flmul+2,w
  4791     13F6  00CF               	movwf	_fround$1016+2
  4792     13F7  0825               	movf	?___flmul+1,w
  4793     13F8  00CE               	movwf	_fround$1016+1
  4794     13F9  0824               	movf	?___flmul,w
  4795     13FA  00CD               	movwf	_fround$1016
  4796                           
  4797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4798     13FB  300A               	movlw	10
  4799     13FC  00F6               	movwf	___lwdiv@divisor
  4800     13FD  3000               	movlw	0
  4801     13FE  00F7               	movwf	___lwdiv@divisor+1
  4802     13FF  0851               	movf	fround@prec,w
  4803     1400  00C2               	movwf	??_fround
  4804     1401  01C3               	clrf	??_fround+1
  4805     1402  0842               	movf	??_fround,w
  4806     1403  00F2               	movwf	___lwmod@dividend
  4807     1404  0843               	movf	??_fround+1,w
  4808     1405  00F3               	movwf	___lwmod@dividend+1
  4809     1406  3064               	movlw	100
  4810     1407  00F0               	movwf	___lwmod@divisor
  4811     1408  3000               	movlw	0
  4812     1409  00F1               	movwf	___lwmod@divisor+1
  4813     140A  160A  158A  245B  160A  118A  	fcall	___lwmod
  4814     140F  0871               	movf	?___lwmod+1,w
  4815     1410  00F9               	movwf	___lwdiv@dividend+1
  4816     1411  0870               	movf	?___lwmod,w
  4817     1412  00F8               	movwf	___lwdiv@dividend
  4818     1413  160A  158A  24D7  160A  118A  	fcall	___lwdiv
  4819     1418  0876               	movf	?___lwdiv,w
  4820     1419  1283               	bcf	3,5	;RP0=0, select bank0
  4821     141A  1303               	bcf	3,6	;RP1=0, select bank0
  4822     141B  00C4               	movwf	??_fround+2
  4823     141C  3001               	movlw	1
  4824     141D                     u4695:
  4825     141D  1003               	clrc
  4826     141E  0DC4               	rlf	??_fround+2,f
  4827     141F  3EFF               	addlw	-1
  4828     1420  1D03               	skipz
  4829     1421  2C1D               	goto	u4695
  4830     1422  1003               	clrc
  4831     1423  0D44               	rlf	??_fround+2,w
  4832     1424  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4833     1425  0084               	movwf	4
  4834     1426  160A  118A  200A  160A  118A  	fcall	stringdir
  4835     142B  00C5               	movwf	??_fround+3
  4836     142C  160A  118A  200A  160A  118A  	fcall	stringdir
  4837     1431  00C6               	movwf	??_fround+4
  4838     1432  160A  118A  200A  160A  118A  	fcall	stringdir
  4839     1437  00C7               	movwf	??_fround+5
  4840     1438  160A  118A  200A  160A  118A  	fcall	stringdir
  4841     143D  00C8               	movwf	??_fround+6
  4842     143E  0848               	movf	??_fround+6,w
  4843     143F  00A7               	movwf	___flmul@b+3
  4844     1440  0847               	movf	??_fround+5,w
  4845     1441  00A6               	movwf	___flmul@b+2
  4846     1442  0846               	movf	??_fround+4,w
  4847     1443  00A5               	movwf	___flmul@b+1
  4848     1444  0845               	movf	??_fround+3,w
  4849     1445  00A4               	movwf	___flmul@b
  4850     1446  0850               	movf	_fround$1016+3,w
  4851     1447  00AB               	movwf	___flmul@a+3
  4852     1448  084F               	movf	_fround$1016+2,w
  4853     1449  00AA               	movwf	___flmul@a+2
  4854     144A  084E               	movf	_fround$1016+1,w
  4855     144B  00A9               	movwf	___flmul@a+1
  4856     144C  084D               	movf	_fround$1016,w
  4857     144D  00A8               	movwf	___flmul@a
  4858     144E  120A  158A  215C  160A  118A  	fcall	___flmul
  4859     1453  1283               	bcf	3,5	;RP0=0, select bank0
  4860     1454  1303               	bcf	3,6	;RP1=0, select bank0
  4861     1455  0827               	movf	?___flmul+3,w
  4862     1456  00CC               	movwf	_fround$1017+3
  4863     1457  0826               	movf	?___flmul+2,w
  4864     1458  00CB               	movwf	_fround$1017+2
  4865     1459  0825               	movf	?___flmul+1,w
  4866     145A  00CA               	movwf	_fround$1017+1
  4867     145B  0824               	movf	?___flmul,w
  4868     145C  00C9               	movwf	_fround$1017
  4869                           
  4870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4871     145D  300A               	movlw	10
  4872     145E  00F0               	movwf	___lwmod@divisor
  4873     145F  3000               	movlw	0
  4874     1460  00F1               	movwf	___lwmod@divisor+1
  4875     1461  0851               	movf	fround@prec,w
  4876     1462  00C2               	movwf	??_fround
  4877     1463  01C3               	clrf	??_fround+1
  4878     1464  0842               	movf	??_fround,w
  4879     1465  00F2               	movwf	___lwmod@dividend
  4880     1466  0843               	movf	??_fround+1,w
  4881     1467  00F3               	movwf	___lwmod@dividend+1
  4882     1468  160A  158A  245B  160A  118A  	fcall	___lwmod
  4883     146D  0870               	movf	?___lwmod,w
  4884     146E  1283               	bcf	3,5	;RP0=0, select bank0
  4885     146F  1303               	bcf	3,6	;RP1=0, select bank0
  4886     1470  00C4               	movwf	??_fround+2
  4887     1471  3001               	movlw	1
  4888     1472                     u4705:
  4889     1472  1003               	clrc
  4890     1473  0DC4               	rlf	??_fround+2,f
  4891     1474  3EFF               	addlw	-1
  4892     1475  1D03               	skipz
  4893     1476  2C72               	goto	u4705
  4894     1477  1003               	clrc
  4895     1478  0D44               	rlf	??_fround+2,w
  4896     1479  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4897     147A  0084               	movwf	4
  4898     147B  160A  118A  200A  160A  118A  	fcall	stringdir
  4899     1480  00C5               	movwf	??_fround+3
  4900     1481  160A  118A  200A  160A  118A  	fcall	stringdir
  4901     1486  00C6               	movwf	??_fround+4
  4902     1487  160A  118A  200A  160A  118A  	fcall	stringdir
  4903     148C  00C7               	movwf	??_fround+5
  4904     148D  160A  118A  200A  160A  118A  	fcall	stringdir
  4905     1492  00C8               	movwf	??_fround+6
  4906     1493  0848               	movf	??_fround+6,w
  4907     1494  00A7               	movwf	___flmul@b+3
  4908     1495  0847               	movf	??_fround+5,w
  4909     1496  00A6               	movwf	___flmul@b+2
  4910     1497  0846               	movf	??_fround+4,w
  4911     1498  00A5               	movwf	___flmul@b+1
  4912     1499  0845               	movf	??_fround+3,w
  4913     149A  00A4               	movwf	___flmul@b
  4914     149B  084C               	movf	_fround$1017+3,w
  4915     149C  00AB               	movwf	___flmul@a+3
  4916     149D  084B               	movf	_fround$1017+2,w
  4917     149E  00AA               	movwf	___flmul@a+2
  4918     149F  084A               	movf	_fround$1017+1,w
  4919     14A0  00A9               	movwf	___flmul@a+1
  4920     14A1  0849               	movf	_fround$1017,w
  4921     14A2  00A8               	movwf	___flmul@a
  4922     14A3  120A  158A  215C  160A  118A  	fcall	___flmul
  4923     14A8  1283               	bcf	3,5	;RP0=0, select bank0
  4924     14A9  1303               	bcf	3,6	;RP1=0, select bank0
  4925     14AA  0827               	movf	?___flmul+3,w
  4926     14AB  00C1               	movwf	?_fround+3
  4927     14AC  0826               	movf	?___flmul+2,w
  4928     14AD  00C0               	movwf	?_fround+2
  4929     14AE  0825               	movf	?___flmul+1,w
  4930     14AF  00BF               	movwf	?_fround+1
  4931     14B0  0824               	movf	?___flmul,w
  4932     14B1  00BE               	movwf	?_fround
  4933     14B2  2DA7               	goto	l342
  4934     14B3                     l3126:
  4935     14B3  300B               	movlw	11
  4936     14B4  0251               	subwf	fround@prec,w
  4937     14B5  1C03               	skipc
  4938     14B6  2CB8               	goto	u4711
  4939     14B7  2CB9               	goto	u4710
  4940     14B8                     u4711:
  4941     14B8  2D64               	goto	l3132
  4942     14B9                     u4710:
  4943     14B9                     l3128:
  4944                           
  4945                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4946     14B9  303F               	movlw	63
  4947     14BA  00A7               	movwf	___flmul@b+3
  4948     14BB  3000               	movlw	0
  4949     14BC  00A6               	movwf	___flmul@b+2
  4950     14BD  3000               	movlw	0
  4951     14BE  00A5               	movwf	___flmul@b+1
  4952     14BF  3000               	movlw	0
  4953     14C0  00A4               	movwf	___flmul@b
  4954     14C1  300A               	movlw	10
  4955     14C2  00F6               	movwf	___lwdiv@divisor
  4956     14C3  3000               	movlw	0
  4957     14C4  00F7               	movwf	___lwdiv@divisor+1
  4958     14C5  0851               	movf	fround@prec,w
  4959     14C6  00C2               	movwf	??_fround
  4960     14C7  01C3               	clrf	??_fround+1
  4961     14C8  0842               	movf	??_fround,w
  4962     14C9  00F8               	movwf	___lwdiv@dividend
  4963     14CA  0843               	movf	??_fround+1,w
  4964     14CB  00F9               	movwf	___lwdiv@dividend+1
  4965     14CC  160A  158A  24D7  160A  118A  	fcall	___lwdiv
  4966     14D1  0876               	movf	?___lwdiv,w
  4967     14D2  1283               	bcf	3,5	;RP0=0, select bank0
  4968     14D3  1303               	bcf	3,6	;RP1=0, select bank0
  4969     14D4  00C4               	movwf	??_fround+2
  4970     14D5  3001               	movlw	1
  4971     14D6                     u4725:
  4972     14D6  1003               	clrc
  4973     14D7  0DC4               	rlf	??_fround+2,f
  4974     14D8  3EFF               	addlw	-1
  4975     14D9  1D03               	skipz
  4976     14DA  2CD6               	goto	u4725
  4977     14DB  1003               	clrc
  4978     14DC  0D44               	rlf	??_fround+2,w
  4979     14DD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4980     14DE  0084               	movwf	4
  4981     14DF  160A  118A  200A  160A  118A  	fcall	stringdir
  4982     14E4  00C5               	movwf	??_fround+3
  4983     14E5  160A  118A  200A  160A  118A  	fcall	stringdir
  4984     14EA  00C6               	movwf	??_fround+4
  4985     14EB  160A  118A  200A  160A  118A  	fcall	stringdir
  4986     14F0  00C7               	movwf	??_fround+5
  4987     14F1  160A  118A  200A  160A  118A  	fcall	stringdir
  4988     14F6  00C8               	movwf	??_fround+6
  4989     14F7  0848               	movf	??_fround+6,w
  4990     14F8  00AB               	movwf	___flmul@a+3
  4991     14F9  0847               	movf	??_fround+5,w
  4992     14FA  00AA               	movwf	___flmul@a+2
  4993     14FB  0846               	movf	??_fround+4,w
  4994     14FC  00A9               	movwf	___flmul@a+1
  4995     14FD  0845               	movf	??_fround+3,w
  4996     14FE  00A8               	movwf	___flmul@a
  4997     14FF  120A  158A  215C  160A  118A  	fcall	___flmul
  4998     1504  1283               	bcf	3,5	;RP0=0, select bank0
  4999     1505  1303               	bcf	3,6	;RP1=0, select bank0
  5000     1506  0827               	movf	?___flmul+3,w
  5001     1507  00D0               	movwf	_fround$1016+3
  5002     1508  0826               	movf	?___flmul+2,w
  5003     1509  00CF               	movwf	_fround$1016+2
  5004     150A  0825               	movf	?___flmul+1,w
  5005     150B  00CE               	movwf	_fround$1016+1
  5006     150C  0824               	movf	?___flmul,w
  5007     150D  00CD               	movwf	_fround$1016
  5008                           
  5009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5010     150E  300A               	movlw	10
  5011     150F  00F0               	movwf	___lwmod@divisor
  5012     1510  3000               	movlw	0
  5013     1511  00F1               	movwf	___lwmod@divisor+1
  5014     1512  0851               	movf	fround@prec,w
  5015     1513  00C2               	movwf	??_fround
  5016     1514  01C3               	clrf	??_fround+1
  5017     1515  0842               	movf	??_fround,w
  5018     1516  00F2               	movwf	___lwmod@dividend
  5019     1517  0843               	movf	??_fround+1,w
  5020     1518  00F3               	movwf	___lwmod@dividend+1
  5021     1519  160A  158A  245B  160A  118A  	fcall	___lwmod
  5022     151E  0870               	movf	?___lwmod,w
  5023     151F  1283               	bcf	3,5	;RP0=0, select bank0
  5024     1520  1303               	bcf	3,6	;RP1=0, select bank0
  5025     1521  00C4               	movwf	??_fround+2
  5026     1522  3001               	movlw	1
  5027     1523                     u4735:
  5028     1523  1003               	clrc
  5029     1524  0DC4               	rlf	??_fround+2,f
  5030     1525  3EFF               	addlw	-1
  5031     1526  1D03               	skipz
  5032     1527  2D23               	goto	u4735
  5033     1528  1003               	clrc
  5034     1529  0D44               	rlf	??_fround+2,w
  5035     152A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5036     152B  0084               	movwf	4
  5037     152C  160A  118A  200A  160A  118A  	fcall	stringdir
  5038     1531  00C5               	movwf	??_fround+3
  5039     1532  160A  118A  200A  160A  118A  	fcall	stringdir
  5040     1537  00C6               	movwf	??_fround+4
  5041     1538  160A  118A  200A  160A  118A  	fcall	stringdir
  5042     153D  00C7               	movwf	??_fround+5
  5043     153E  160A  118A  200A  160A  118A  	fcall	stringdir
  5044     1543  00C8               	movwf	??_fround+6
  5045     1544  0848               	movf	??_fround+6,w
  5046     1545  00A7               	movwf	___flmul@b+3
  5047     1546  0847               	movf	??_fround+5,w
  5048     1547  00A6               	movwf	___flmul@b+2
  5049     1548  0846               	movf	??_fround+4,w
  5050     1549  00A5               	movwf	___flmul@b+1
  5051     154A  0845               	movf	??_fround+3,w
  5052     154B  00A4               	movwf	___flmul@b
  5053     154C  0850               	movf	_fround$1016+3,w
  5054     154D  00AB               	movwf	___flmul@a+3
  5055     154E  084F               	movf	_fround$1016+2,w
  5056     154F  00AA               	movwf	___flmul@a+2
  5057     1550  084E               	movf	_fround$1016+1,w
  5058     1551  00A9               	movwf	___flmul@a+1
  5059     1552  084D               	movf	_fround$1016,w
  5060     1553  00A8               	movwf	___flmul@a
  5061     1554  120A  158A  215C  160A  118A  	fcall	___flmul
  5062     1559  1283               	bcf	3,5	;RP0=0, select bank0
  5063     155A  1303               	bcf	3,6	;RP1=0, select bank0
  5064     155B  0827               	movf	?___flmul+3,w
  5065     155C  00C1               	movwf	?_fround+3
  5066     155D  0826               	movf	?___flmul+2,w
  5067     155E  00C0               	movwf	?_fround+2
  5068     155F  0825               	movf	?___flmul+1,w
  5069     1560  00BF               	movwf	?_fround+1
  5070     1561  0824               	movf	?___flmul,w
  5071     1562  00BE               	movwf	?_fround
  5072     1563  2DA7               	goto	l342
  5073     1564                     l3132:
  5074                           
  5075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5076     1564  303F               	movlw	63
  5077     1565  00A7               	movwf	___flmul@b+3
  5078     1566  3000               	movlw	0
  5079     1567  00A6               	movwf	___flmul@b+2
  5080     1568  3000               	movlw	0
  5081     1569  00A5               	movwf	___flmul@b+1
  5082     156A  3000               	movlw	0
  5083     156B  00A4               	movwf	___flmul@b
  5084     156C  0851               	movf	fround@prec,w
  5085     156D  00C2               	movwf	??_fround
  5086     156E  3001               	movlw	1
  5087     156F                     u4745:
  5088     156F  1003               	clrc
  5089     1570  0DC2               	rlf	??_fround,f
  5090     1571  3EFF               	addlw	-1
  5091     1572  1D03               	skipz
  5092     1573  2D6F               	goto	u4745
  5093     1574  1003               	clrc
  5094     1575  0D42               	rlf	??_fround,w
  5095     1576  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5096     1577  0084               	movwf	4
  5097     1578  160A  118A  200A  160A  118A  	fcall	stringdir
  5098     157D  00C3               	movwf	??_fround+1
  5099     157E  160A  118A  200A  160A  118A  	fcall	stringdir
  5100     1583  00C4               	movwf	??_fround+2
  5101     1584  160A  118A  200A  160A  118A  	fcall	stringdir
  5102     1589  00C5               	movwf	??_fround+3
  5103     158A  160A  118A  200A  160A  118A  	fcall	stringdir
  5104     158F  00C6               	movwf	??_fround+4
  5105     1590  0846               	movf	??_fround+4,w
  5106     1591  00AB               	movwf	___flmul@a+3
  5107     1592  0845               	movf	??_fround+3,w
  5108     1593  00AA               	movwf	___flmul@a+2
  5109     1594  0844               	movf	??_fround+2,w
  5110     1595  00A9               	movwf	___flmul@a+1
  5111     1596  0843               	movf	??_fround+1,w
  5112     1597  00A8               	movwf	___flmul@a
  5113     1598  120A  158A  215C  160A  118A  	fcall	___flmul
  5114     159D  1283               	bcf	3,5	;RP0=0, select bank0
  5115     159E  1303               	bcf	3,6	;RP1=0, select bank0
  5116     159F  0827               	movf	?___flmul+3,w
  5117     15A0  00C1               	movwf	?_fround+3
  5118     15A1  0826               	movf	?___flmul+2,w
  5119     15A2  00C0               	movwf	?_fround+2
  5120     15A3  0825               	movf	?___flmul+1,w
  5121     15A4  00BF               	movwf	?_fround+1
  5122     15A5  0824               	movf	?___flmul,w
  5123     15A6  00BE               	movwf	?_fround
  5124     15A7                     l342:
  5125     15A7  0008               	return
  5126     15A8                     __end_of_fround:
  5127                           
  5128                           	psect	text7
  5129     1C5B                     __ptext7:	
  5130 ;; *************** function ___lwmod *****************
  5131 ;; Defined at:
  5132 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  divisor         2    0[COMMON] unsigned int 
  5135 ;;  dividend        2    2[COMMON] unsigned int 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;  counter         1    5[COMMON] unsigned char 
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  2    0[COMMON] unsigned int 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5147 ;;      Params:         4       0       0       0       0
  5148 ;;      Locals:         1       0       0       0       0
  5149 ;;      Temps:          1       0       0       0       0
  5150 ;;      Totals:         6       0       0       0       0
  5151 ;;Total ram usage:        6 bytes
  5152 ;; Hardware stack levels used: 1
  5153 ;; This function calls:
  5154 ;;		Nothing
  5155 ;; This function is called by:
  5156 ;;		_fround
  5157 ;;		_descomponer
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161     1C5B                     ___lwmod:	
  5162                           ;psect for function ___lwmod
  5163                           
  5164     1C5B                     l2716:	
  5165                           ;incstack = 0
  5166                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5167                           
  5168     1C5B  0870               	movf	___lwmod@divisor,w
  5169     1C5C  0471               	iorwf	___lwmod@divisor+1,w
  5170     1C5D  1903               	btfsc	3,2
  5171     1C5E  2C60               	goto	u3741
  5172     1C5F  2C61               	goto	u3740
  5173     1C60                     u3741:
  5174     1C60  2C90               	goto	l2734
  5175     1C61                     u3740:
  5176     1C61                     l2718:
  5177     1C61  01F5               	clrf	___lwmod@counter
  5178     1C62  0AF5               	incf	___lwmod@counter,f
  5179     1C63  2C6F               	goto	l2724
  5180     1C64                     l2720:
  5181     1C64  3001               	movlw	1
  5182     1C65                     u3755:
  5183     1C65  1003               	clrc
  5184     1C66  0DF0               	rlf	___lwmod@divisor,f
  5185     1C67  0DF1               	rlf	___lwmod@divisor+1,f
  5186     1C68  3EFF               	addlw	-1
  5187     1C69  1D03               	skipz
  5188     1C6A  2C65               	goto	u3755
  5189     1C6B                     l2722:
  5190     1C6B  3001               	movlw	1
  5191     1C6C  00F4               	movwf	??___lwmod
  5192     1C6D  0874               	movf	??___lwmod,w
  5193     1C6E  07F5               	addwf	___lwmod@counter,f
  5194     1C6F                     l2724:
  5195     1C6F  1FF1               	btfss	___lwmod@divisor+1,7
  5196     1C70  2C72               	goto	u3761
  5197     1C71  2C73               	goto	u3760
  5198     1C72                     u3761:
  5199     1C72  2C64               	goto	l2720
  5200     1C73                     u3760:
  5201     1C73                     l2726:
  5202     1C73  0871               	movf	___lwmod@divisor+1,w
  5203     1C74  0273               	subwf	___lwmod@dividend+1,w
  5204     1C75  1D03               	skipz
  5205     1C76  2C79               	goto	u3775
  5206     1C77  0870               	movf	___lwmod@divisor,w
  5207     1C78  0272               	subwf	___lwmod@dividend,w
  5208     1C79                     u3775:
  5209     1C79  1C03               	skipc
  5210     1C7A  2C7C               	goto	u3771
  5211     1C7B  2C7D               	goto	u3770
  5212     1C7C                     u3771:
  5213     1C7C  2C83               	goto	l2730
  5214     1C7D                     u3770:
  5215     1C7D                     l2728:
  5216     1C7D  0870               	movf	___lwmod@divisor,w
  5217     1C7E  02F2               	subwf	___lwmod@dividend,f
  5218     1C7F  0871               	movf	___lwmod@divisor+1,w
  5219     1C80  1C03               	skipc
  5220     1C81  03F3               	decf	___lwmod@dividend+1,f
  5221     1C82  02F3               	subwf	___lwmod@dividend+1,f
  5222     1C83                     l2730:
  5223     1C83  3001               	movlw	1
  5224     1C84                     u3785:
  5225     1C84  1003               	clrc
  5226     1C85  0CF1               	rrf	___lwmod@divisor+1,f
  5227     1C86  0CF0               	rrf	___lwmod@divisor,f
  5228     1C87  3EFF               	addlw	-1
  5229     1C88  1D03               	skipz
  5230     1C89  2C84               	goto	u3785
  5231     1C8A                     l2732:
  5232     1C8A  3001               	movlw	1
  5233     1C8B  02F5               	subwf	___lwmod@counter,f
  5234     1C8C  1D03               	btfss	3,2
  5235     1C8D  2C8F               	goto	u3791
  5236     1C8E  2C90               	goto	u3790
  5237     1C8F                     u3791:
  5238     1C8F  2C73               	goto	l2726
  5239     1C90                     u3790:
  5240     1C90                     l2734:
  5241     1C90  0873               	movf	___lwmod@dividend+1,w
  5242     1C91  00F1               	movwf	?___lwmod+1
  5243     1C92  0872               	movf	___lwmod@dividend,w
  5244     1C93  00F0               	movwf	?___lwmod
  5245     1C94                     l735:
  5246     1C94  0008               	return
  5247     1C95                     __end_of___lwmod:
  5248                           
  5249                           	psect	text8
  5250     1CD7                     __ptext8:	
  5251 ;; *************** function ___lwdiv *****************
  5252 ;; Defined at:
  5253 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;  divisor         2    6[COMMON] unsigned int 
  5256 ;;  dividend        2    8[COMMON] unsigned int 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  quotient        2   11[COMMON] unsigned int 
  5259 ;;  counter         1   13[COMMON] unsigned char 
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  2    6[COMMON] unsigned int 
  5262 ;; Registers used:
  5263 ;;		wreg, status,2, status,0
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5269 ;;      Params:         4       0       0       0       0
  5270 ;;      Locals:         3       0       0       0       0
  5271 ;;      Temps:          1       0       0       0       0
  5272 ;;      Totals:         8       0       0       0       0
  5273 ;;Total ram usage:        8 bytes
  5274 ;; Hardware stack levels used: 1
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_fround
  5279 ;;		_descomponer
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283     1CD7                     ___lwdiv:	
  5284                           ;psect for function ___lwdiv
  5285                           
  5286     1CD7                     l2690:	
  5287                           ;incstack = 0
  5288                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5289                           
  5290     1CD7  01FB               	clrf	___lwdiv@quotient
  5291     1CD8  01FC               	clrf	___lwdiv@quotient+1
  5292     1CD9                     l2692:
  5293     1CD9  0876               	movf	___lwdiv@divisor,w
  5294     1CDA  0477               	iorwf	___lwdiv@divisor+1,w
  5295     1CDB  1903               	btfsc	3,2
  5296     1CDC  2CDE               	goto	u3671
  5297     1CDD  2CDF               	goto	u3670
  5298     1CDE                     u3671:
  5299     1CDE  2D16               	goto	l2712
  5300     1CDF                     u3670:
  5301     1CDF                     l2694:
  5302     1CDF  01FD               	clrf	___lwdiv@counter
  5303     1CE0  0AFD               	incf	___lwdiv@counter,f
  5304     1CE1  2CED               	goto	l2700
  5305     1CE2                     l2696:
  5306     1CE2  3001               	movlw	1
  5307     1CE3                     u3685:
  5308     1CE3  1003               	clrc
  5309     1CE4  0DF6               	rlf	___lwdiv@divisor,f
  5310     1CE5  0DF7               	rlf	___lwdiv@divisor+1,f
  5311     1CE6  3EFF               	addlw	-1
  5312     1CE7  1D03               	skipz
  5313     1CE8  2CE3               	goto	u3685
  5314     1CE9                     l2698:
  5315     1CE9  3001               	movlw	1
  5316     1CEA  00FA               	movwf	??___lwdiv
  5317     1CEB  087A               	movf	??___lwdiv,w
  5318     1CEC  07FD               	addwf	___lwdiv@counter,f
  5319     1CED                     l2700:
  5320     1CED  1FF7               	btfss	___lwdiv@divisor+1,7
  5321     1CEE  2CF0               	goto	u3691
  5322     1CEF  2CF1               	goto	u3690
  5323     1CF0                     u3691:
  5324     1CF0  2CE2               	goto	l2696
  5325     1CF1                     u3690:
  5326     1CF1                     l2702:
  5327     1CF1  3001               	movlw	1
  5328     1CF2                     u3705:
  5329     1CF2  1003               	clrc
  5330     1CF3  0DFB               	rlf	___lwdiv@quotient,f
  5331     1CF4  0DFC               	rlf	___lwdiv@quotient+1,f
  5332     1CF5  3EFF               	addlw	-1
  5333     1CF6  1D03               	skipz
  5334     1CF7  2CF2               	goto	u3705
  5335     1CF8  0877               	movf	___lwdiv@divisor+1,w
  5336     1CF9  0279               	subwf	___lwdiv@dividend+1,w
  5337     1CFA  1D03               	skipz
  5338     1CFB  2CFE               	goto	u3715
  5339     1CFC  0876               	movf	___lwdiv@divisor,w
  5340     1CFD  0278               	subwf	___lwdiv@dividend,w
  5341     1CFE                     u3715:
  5342     1CFE  1C03               	skipc
  5343     1CFF  2D01               	goto	u3711
  5344     1D00  2D02               	goto	u3710
  5345     1D01                     u3711:
  5346     1D01  2D09               	goto	l2708
  5347     1D02                     u3710:
  5348     1D02                     l2704:
  5349     1D02  0876               	movf	___lwdiv@divisor,w
  5350     1D03  02F8               	subwf	___lwdiv@dividend,f
  5351     1D04  0877               	movf	___lwdiv@divisor+1,w
  5352     1D05  1C03               	skipc
  5353     1D06  03F9               	decf	___lwdiv@dividend+1,f
  5354     1D07  02F9               	subwf	___lwdiv@dividend+1,f
  5355     1D08                     l2706:
  5356     1D08  147B               	bsf	___lwdiv@quotient,0
  5357     1D09                     l2708:
  5358     1D09  3001               	movlw	1
  5359     1D0A                     u3725:
  5360     1D0A  1003               	clrc
  5361     1D0B  0CF7               	rrf	___lwdiv@divisor+1,f
  5362     1D0C  0CF6               	rrf	___lwdiv@divisor,f
  5363     1D0D  3EFF               	addlw	-1
  5364     1D0E  1D03               	skipz
  5365     1D0F  2D0A               	goto	u3725
  5366     1D10                     l2710:
  5367     1D10  3001               	movlw	1
  5368     1D11  02FD               	subwf	___lwdiv@counter,f
  5369     1D12  1D03               	btfss	3,2
  5370     1D13  2D15               	goto	u3731
  5371     1D14  2D16               	goto	u3730
  5372     1D15                     u3731:
  5373     1D15  2CF1               	goto	l2702
  5374     1D16                     u3730:
  5375     1D16                     l2712:
  5376     1D16  087C               	movf	___lwdiv@quotient+1,w
  5377     1D17  00F7               	movwf	?___lwdiv+1
  5378     1D18  087B               	movf	___lwdiv@quotient,w
  5379     1D19  00F6               	movwf	?___lwdiv
  5380     1D1A                     l725:
  5381     1D1A  0008               	return
  5382     1D1B                     __end_of___lwdiv:
  5383                           
  5384                           	psect	text9
  5385     095C                     __ptext9:	
  5386 ;; *************** function ___flmul *****************
  5387 ;; Defined at:
  5388 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;  b               4    4[BANK0 ] unsigned int 
  5391 ;;  a               4    8[BANK0 ] unsigned int 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  prod            4   24[BANK0 ] struct .
  5394 ;;  grs             4   18[BANK0 ] unsigned long 
  5395 ;;  temp            2   28[BANK0 ] struct .
  5396 ;;  bexp            1   23[BANK0 ] unsigned char 
  5397 ;;  aexp            1   22[BANK0 ] unsigned char 
  5398 ;;  sign            1   17[BANK0 ] unsigned char 
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  4    4[BANK0 ] unsigned char 
  5401 ;; Registers used:
  5402 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5408 ;;      Params:         0       8       0       0       0
  5409 ;;      Locals:         0      13       0       0       0
  5410 ;;      Temps:          0       5       0       0       0
  5411 ;;      Totals:         0      26       0       0       0
  5412 ;;Total ram usage:       26 bytes
  5413 ;; Hardware stack levels used: 1
  5414 ;; Hardware stack levels required when called: 1
  5415 ;; This function calls:
  5416 ;;		__Umul8_16
  5417 ;; This function is called by:
  5418 ;;		_main
  5419 ;;		_fround
  5420 ;;		_scale
  5421 ;;		_sprintf
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425     095C                     ___flmul:	
  5426                           ;psect for function ___flmul
  5427                           
  5428     095C                     l2932:	
  5429                           ;incstack = 0
  5430                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5431                           
  5432     095C  1283               	bcf	3,5	;RP0=0, select bank0
  5433     095D  1303               	bcf	3,6	;RP1=0, select bank0
  5434     095E  0827               	movf	___flmul@b+3,w
  5435     095F  3980               	andlw	128
  5436     0960  00B1               	movwf	___flmul@sign
  5437     0961                     l2934:
  5438     0961  0827               	movf	___flmul@b+3,w
  5439     0962  00AC               	movwf	??___flmul
  5440     0963  072C               	addwf	??___flmul,w
  5441     0964  00B7               	movwf	___flmul@bexp
  5442     0965                     l2936:
  5443     0965  1FA6               	btfss	___flmul@b+2,7
  5444     0966  2968               	goto	u4261
  5445     0967  2969               	goto	u4260
  5446     0968                     u4261:
  5447     0968  296A               	goto	l2940
  5448     0969                     u4260:
  5449     0969                     l2938:
  5450     0969  1437               	bsf	___flmul@bexp,0
  5451     096A                     l2940:
  5452     096A  0837               	movf	___flmul@bexp,w
  5453     096B  1903               	btfsc	3,2
  5454     096C  296E               	goto	u4271
  5455     096D  296F               	goto	u4270
  5456     096E                     u4271:
  5457     096E  297E               	goto	l2948
  5458     096F                     u4270:
  5459     096F                     l2942:
  5460     096F  0A37               	incf	___flmul@bexp,w
  5461     0970  1D03               	btfss	3,2
  5462     0971  2973               	goto	u4281
  5463     0972  2974               	goto	u4280
  5464     0973                     u4281:
  5465     0973  297C               	goto	l2946
  5466     0974                     u4280:
  5467     0974                     l2944:
  5468     0974  3000               	movlw	0
  5469     0975  00A7               	movwf	___flmul@b+3
  5470     0976  3000               	movlw	0
  5471     0977  00A6               	movwf	___flmul@b+2
  5472     0978  3000               	movlw	0
  5473     0979  00A5               	movwf	___flmul@b+1
  5474     097A  3000               	movlw	0
  5475     097B  00A4               	movwf	___flmul@b
  5476     097C                     l2946:
  5477     097C  17A6               	bsf	___flmul@b+2,7
  5478     097D  2986               	goto	l2950
  5479     097E                     l2948:
  5480     097E  3000               	movlw	0
  5481     097F  00A7               	movwf	___flmul@b+3
  5482     0980  3000               	movlw	0
  5483     0981  00A6               	movwf	___flmul@b+2
  5484     0982  3000               	movlw	0
  5485     0983  00A5               	movwf	___flmul@b+1
  5486     0984  3000               	movlw	0
  5487     0985  00A4               	movwf	___flmul@b
  5488     0986                     l2950:
  5489     0986  082B               	movf	___flmul@a+3,w
  5490     0987  3980               	andlw	128
  5491     0988  00AC               	movwf	??___flmul
  5492     0989  082C               	movf	??___flmul,w
  5493     098A  06B1               	xorwf	___flmul@sign,f
  5494     098B                     l2952:
  5495     098B  082B               	movf	___flmul@a+3,w
  5496     098C  00AC               	movwf	??___flmul
  5497     098D  072C               	addwf	??___flmul,w
  5498     098E  00B6               	movwf	___flmul@aexp
  5499     098F                     l2954:
  5500     098F  1FAA               	btfss	___flmul@a+2,7
  5501     0990  2992               	goto	u4291
  5502     0991  2993               	goto	u4290
  5503     0992                     u4291:
  5504     0992  2994               	goto	l2958
  5505     0993                     u4290:
  5506     0993                     l2956:
  5507     0993  1436               	bsf	___flmul@aexp,0
  5508     0994                     l2958:
  5509     0994  0836               	movf	___flmul@aexp,w
  5510     0995  1903               	btfsc	3,2
  5511     0996  2998               	goto	u4301
  5512     0997  2999               	goto	u4300
  5513     0998                     u4301:
  5514     0998  29A8               	goto	l2966
  5515     0999                     u4300:
  5516     0999                     l2960:
  5517     0999  0A36               	incf	___flmul@aexp,w
  5518     099A  1D03               	btfss	3,2
  5519     099B  299D               	goto	u4311
  5520     099C  299E               	goto	u4310
  5521     099D                     u4311:
  5522     099D  29A6               	goto	l2964
  5523     099E                     u4310:
  5524     099E                     l2962:
  5525     099E  3000               	movlw	0
  5526     099F  00AB               	movwf	___flmul@a+3
  5527     09A0  3000               	movlw	0
  5528     09A1  00AA               	movwf	___flmul@a+2
  5529     09A2  3000               	movlw	0
  5530     09A3  00A9               	movwf	___flmul@a+1
  5531     09A4  3000               	movlw	0
  5532     09A5  00A8               	movwf	___flmul@a
  5533     09A6                     l2964:
  5534     09A6  17AA               	bsf	___flmul@a+2,7
  5535     09A7  29B0               	goto	l2968
  5536     09A8                     l2966:
  5537     09A8  3000               	movlw	0
  5538     09A9  00AB               	movwf	___flmul@a+3
  5539     09AA  3000               	movlw	0
  5540     09AB  00AA               	movwf	___flmul@a+2
  5541     09AC  3000               	movlw	0
  5542     09AD  00A9               	movwf	___flmul@a+1
  5543     09AE  3000               	movlw	0
  5544     09AF  00A8               	movwf	___flmul@a
  5545     09B0                     l2968:
  5546     09B0  0836               	movf	___flmul@aexp,w
  5547     09B1  1903               	btfsc	3,2
  5548     09B2  29B4               	goto	u4321
  5549     09B3  29B5               	goto	u4320
  5550     09B4                     u4321:
  5551     09B4  29BA               	goto	l2972
  5552     09B5                     u4320:
  5553     09B5                     l2970:
  5554     09B5  0837               	movf	___flmul@bexp,w
  5555     09B6  1D03               	btfss	3,2
  5556     09B7  29B9               	goto	u4331
  5557     09B8  29BA               	goto	u4330
  5558     09B9                     u4331:
  5559     09B9  29C3               	goto	l2976
  5560     09BA                     u4330:
  5561     09BA                     l2972:
  5562     09BA  3000               	movlw	0
  5563     09BB  00A7               	movwf	?___flmul+3
  5564     09BC  3000               	movlw	0
  5565     09BD  00A6               	movwf	?___flmul+2
  5566     09BE  3000               	movlw	0
  5567     09BF  00A5               	movwf	?___flmul+1
  5568     09C0  3000               	movlw	0
  5569     09C1  00A4               	movwf	?___flmul
  5570     09C2  2CA0               	goto	l842
  5571     09C3                     l2976:
  5572     09C3  0824               	movf	___flmul@b,w
  5573     09C4  00F0               	movwf	__Umul8_16@multiplicand
  5574     09C5  082A               	movf	___flmul@a+2,w
  5575     09C6  160A  158A  239B  120A  158A  	fcall	__Umul8_16
  5576     09CB  0871               	movf	?__Umul8_16+1,w
  5577     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  5578     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  5579     09CE  00BD               	movwf	___flmul@temp+1
  5580     09CF  0870               	movf	?__Umul8_16,w
  5581     09D0  00BC               	movwf	___flmul@temp
  5582     09D1                     l2978:
  5583     09D1  083C               	movf	___flmul@temp,w
  5584     09D2  00AC               	movwf	??___flmul
  5585     09D3  01AD               	clrf	??___flmul+1
  5586     09D4  01AE               	clrf	??___flmul+2
  5587     09D5  01AF               	clrf	??___flmul+3
  5588     09D6  082F               	movf	??___flmul+3,w
  5589     09D7  00B5               	movwf	___flmul@grs+3
  5590     09D8  082E               	movf	??___flmul+2,w
  5591     09D9  00B4               	movwf	___flmul@grs+2
  5592     09DA  082D               	movf	??___flmul+1,w
  5593     09DB  00B3               	movwf	___flmul@grs+1
  5594     09DC  082C               	movf	??___flmul,w
  5595     09DD  00B2               	movwf	___flmul@grs
  5596     09DE                     l2980:
  5597     09DE  083D               	movf	___flmul@temp+1,w
  5598     09DF  00AC               	movwf	??___flmul
  5599     09E0  01AD               	clrf	??___flmul+1
  5600     09E1  01AE               	clrf	??___flmul+2
  5601     09E2  01AF               	clrf	??___flmul+3
  5602     09E3  082F               	movf	??___flmul+3,w
  5603     09E4  00BB               	movwf	___flmul@prod+3
  5604     09E5  082E               	movf	??___flmul+2,w
  5605     09E6  00BA               	movwf	___flmul@prod+2
  5606     09E7  082D               	movf	??___flmul+1,w
  5607     09E8  00B9               	movwf	___flmul@prod+1
  5608     09E9  082C               	movf	??___flmul,w
  5609     09EA  00B8               	movwf	___flmul@prod
  5610     09EB  0825               	movf	___flmul@b+1,w
  5611     09EC  00F0               	movwf	__Umul8_16@multiplicand
  5612     09ED  0829               	movf	___flmul@a+1,w
  5613     09EE  160A  158A  239B  120A  158A  	fcall	__Umul8_16
  5614     09F3  0871               	movf	?__Umul8_16+1,w
  5615     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  5616     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  5617     09F6  00BD               	movwf	___flmul@temp+1
  5618     09F7  0870               	movf	?__Umul8_16,w
  5619     09F8  00BC               	movwf	___flmul@temp
  5620     09F9                     l2982:
  5621     09F9  083C               	movf	___flmul@temp,w
  5622     09FA  00AC               	movwf	??___flmul
  5623     09FB  01AD               	clrf	??___flmul+1
  5624     09FC  01AE               	clrf	??___flmul+2
  5625     09FD  01AF               	clrf	??___flmul+3
  5626     09FE  082C               	movf	??___flmul,w
  5627     09FF  07B2               	addwf	___flmul@grs,f
  5628     0A00  082D               	movf	??___flmul+1,w
  5629     0A01  1103               	clrz
  5630     0A02  1803               	skipnc
  5631     0A03  3E01               	addlw	1
  5632     0A04  1903               	skipnz
  5633     0A05  2A07               	goto	u4341
  5634     0A06  07B3               	addwf	___flmul@grs+1,f
  5635     0A07                     u4341:
  5636     0A07  082E               	movf	??___flmul+2,w
  5637     0A08  1103               	clrz
  5638     0A09  1803               	skipnc
  5639     0A0A  3E01               	addlw	1
  5640     0A0B  1903               	skipnz
  5641     0A0C  2A0E               	goto	u4342
  5642     0A0D  07B4               	addwf	___flmul@grs+2,f
  5643     0A0E                     u4342:
  5644     0A0E  082F               	movf	??___flmul+3,w
  5645     0A0F  1103               	clrz
  5646     0A10  1803               	skipnc
  5647     0A11  3E01               	addlw	1
  5648     0A12  1903               	skipnz
  5649     0A13  2A15               	goto	u4343
  5650     0A14  07B5               	addwf	___flmul@grs+3,f
  5651     0A15                     u4343:
  5652     0A15                     l2984:
  5653     0A15  083D               	movf	___flmul@temp+1,w
  5654     0A16  00AC               	movwf	??___flmul
  5655     0A17  01AD               	clrf	??___flmul+1
  5656     0A18  01AE               	clrf	??___flmul+2
  5657     0A19  01AF               	clrf	??___flmul+3
  5658     0A1A  082C               	movf	??___flmul,w
  5659     0A1B  07B8               	addwf	___flmul@prod,f
  5660     0A1C  082D               	movf	??___flmul+1,w
  5661     0A1D  1103               	clrz
  5662     0A1E  1803               	skipnc
  5663     0A1F  3E01               	addlw	1
  5664     0A20  1903               	skipnz
  5665     0A21  2A23               	goto	u4351
  5666     0A22  07B9               	addwf	___flmul@prod+1,f
  5667     0A23                     u4351:
  5668     0A23  082E               	movf	??___flmul+2,w
  5669     0A24  1103               	clrz
  5670     0A25  1803               	skipnc
  5671     0A26  3E01               	addlw	1
  5672     0A27  1903               	skipnz
  5673     0A28  2A2A               	goto	u4352
  5674     0A29  07BA               	addwf	___flmul@prod+2,f
  5675     0A2A                     u4352:
  5676     0A2A  082F               	movf	??___flmul+3,w
  5677     0A2B  1103               	clrz
  5678     0A2C  1803               	skipnc
  5679     0A2D  3E01               	addlw	1
  5680     0A2E  1903               	skipnz
  5681     0A2F  2A31               	goto	u4353
  5682     0A30  07BB               	addwf	___flmul@prod+3,f
  5683     0A31                     u4353:
  5684     0A31  0826               	movf	___flmul@b+2,w
  5685     0A32  00F0               	movwf	__Umul8_16@multiplicand
  5686     0A33  0828               	movf	___flmul@a,w
  5687     0A34  160A  158A  239B  120A  158A  	fcall	__Umul8_16
  5688     0A39  0871               	movf	?__Umul8_16+1,w
  5689     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  5690     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  5691     0A3C  00BD               	movwf	___flmul@temp+1
  5692     0A3D  0870               	movf	?__Umul8_16,w
  5693     0A3E  00BC               	movwf	___flmul@temp
  5694     0A3F                     l2986:
  5695     0A3F  083C               	movf	___flmul@temp,w
  5696     0A40  00AC               	movwf	??___flmul
  5697     0A41  01AD               	clrf	??___flmul+1
  5698     0A42  01AE               	clrf	??___flmul+2
  5699     0A43  01AF               	clrf	??___flmul+3
  5700     0A44  082C               	movf	??___flmul,w
  5701     0A45  07B2               	addwf	___flmul@grs,f
  5702     0A46  082D               	movf	??___flmul+1,w
  5703     0A47  1103               	clrz
  5704     0A48  1803               	skipnc
  5705     0A49  3E01               	addlw	1
  5706     0A4A  1903               	skipnz
  5707     0A4B  2A4D               	goto	u4361
  5708     0A4C  07B3               	addwf	___flmul@grs+1,f
  5709     0A4D                     u4361:
  5710     0A4D  082E               	movf	??___flmul+2,w
  5711     0A4E  1103               	clrz
  5712     0A4F  1803               	skipnc
  5713     0A50  3E01               	addlw	1
  5714     0A51  1903               	skipnz
  5715     0A52  2A54               	goto	u4362
  5716     0A53  07B4               	addwf	___flmul@grs+2,f
  5717     0A54                     u4362:
  5718     0A54  082F               	movf	??___flmul+3,w
  5719     0A55  1103               	clrz
  5720     0A56  1803               	skipnc
  5721     0A57  3E01               	addlw	1
  5722     0A58  1903               	skipnz
  5723     0A59  2A5B               	goto	u4363
  5724     0A5A  07B5               	addwf	___flmul@grs+3,f
  5725     0A5B                     u4363:
  5726     0A5B                     l2988:
  5727     0A5B  083D               	movf	___flmul@temp+1,w
  5728     0A5C  00AC               	movwf	??___flmul
  5729     0A5D  01AD               	clrf	??___flmul+1
  5730     0A5E  01AE               	clrf	??___flmul+2
  5731     0A5F  01AF               	clrf	??___flmul+3
  5732     0A60  082C               	movf	??___flmul,w
  5733     0A61  07B8               	addwf	___flmul@prod,f
  5734     0A62  082D               	movf	??___flmul+1,w
  5735     0A63  1103               	clrz
  5736     0A64  1803               	skipnc
  5737     0A65  3E01               	addlw	1
  5738     0A66  1903               	skipnz
  5739     0A67  2A69               	goto	u4371
  5740     0A68  07B9               	addwf	___flmul@prod+1,f
  5741     0A69                     u4371:
  5742     0A69  082E               	movf	??___flmul+2,w
  5743     0A6A  1103               	clrz
  5744     0A6B  1803               	skipnc
  5745     0A6C  3E01               	addlw	1
  5746     0A6D  1903               	skipnz
  5747     0A6E  2A70               	goto	u4372
  5748     0A6F  07BA               	addwf	___flmul@prod+2,f
  5749     0A70                     u4372:
  5750     0A70  082F               	movf	??___flmul+3,w
  5751     0A71  1103               	clrz
  5752     0A72  1803               	skipnc
  5753     0A73  3E01               	addlw	1
  5754     0A74  1903               	skipnz
  5755     0A75  2A77               	goto	u4373
  5756     0A76  07BB               	addwf	___flmul@prod+3,f
  5757     0A77                     u4373:
  5758     0A77                     l2990:
  5759     0A77  3008               	movlw	8
  5760     0A78  00AC               	movwf	??___flmul
  5761     0A79                     u4385:
  5762     0A79  1003               	clrc
  5763     0A7A  0DB2               	rlf	___flmul@grs,f
  5764     0A7B  0DB3               	rlf	___flmul@grs+1,f
  5765     0A7C  0DB4               	rlf	___flmul@grs+2,f
  5766     0A7D  0DB5               	rlf	___flmul@grs+3,f
  5767     0A7E  0BAC               	decfsz	??___flmul,f
  5768     0A7F  2A79               	goto	u4385
  5769     0A80                     l2992:
  5770     0A80  0825               	movf	___flmul@b+1,w
  5771     0A81  00F0               	movwf	__Umul8_16@multiplicand
  5772     0A82  0828               	movf	___flmul@a,w
  5773     0A83  160A  158A  239B  120A  158A  	fcall	__Umul8_16
  5774     0A88  0871               	movf	?__Umul8_16+1,w
  5775     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  5776     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  5777     0A8B  00BD               	movwf	___flmul@temp+1
  5778     0A8C  0870               	movf	?__Umul8_16,w
  5779     0A8D  00BC               	movwf	___flmul@temp
  5780     0A8E                     l2994:
  5781     0A8E  083C               	movf	___flmul@temp,w
  5782     0A8F  00AC               	movwf	??___flmul
  5783     0A90  083D               	movf	___flmul@temp+1,w
  5784     0A91  00AD               	movwf	??___flmul+1
  5785     0A92  01AE               	clrf	??___flmul+2
  5786     0A93  01AF               	clrf	??___flmul+3
  5787     0A94  082C               	movf	??___flmul,w
  5788     0A95  07B2               	addwf	___flmul@grs,f
  5789     0A96  082D               	movf	??___flmul+1,w
  5790     0A97  1103               	clrz
  5791     0A98  1803               	skipnc
  5792     0A99  3E01               	addlw	1
  5793     0A9A  1903               	skipnz
  5794     0A9B  2A9D               	goto	u4391
  5795     0A9C  07B3               	addwf	___flmul@grs+1,f
  5796     0A9D                     u4391:
  5797     0A9D  082E               	movf	??___flmul+2,w
  5798     0A9E  1103               	clrz
  5799     0A9F  1803               	skipnc
  5800     0AA0  3E01               	addlw	1
  5801     0AA1  1903               	skipnz
  5802     0AA2  2AA4               	goto	u4392
  5803     0AA3  07B4               	addwf	___flmul@grs+2,f
  5804     0AA4                     u4392:
  5805     0AA4  082F               	movf	??___flmul+3,w
  5806     0AA5  1103               	clrz
  5807     0AA6  1803               	skipnc
  5808     0AA7  3E01               	addlw	1
  5809     0AA8  1903               	skipnz
  5810     0AA9  2AAB               	goto	u4393
  5811     0AAA  07B5               	addwf	___flmul@grs+3,f
  5812     0AAB                     u4393:
  5813     0AAB                     l2996:
  5814     0AAB  0824               	movf	___flmul@b,w
  5815     0AAC  00F0               	movwf	__Umul8_16@multiplicand
  5816     0AAD  0829               	movf	___flmul@a+1,w
  5817     0AAE  160A  158A  239B  120A  158A  	fcall	__Umul8_16
  5818     0AB3  0871               	movf	?__Umul8_16+1,w
  5819     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  5820     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  5821     0AB6  00BD               	movwf	___flmul@temp+1
  5822     0AB7  0870               	movf	?__Umul8_16,w
  5823     0AB8  00BC               	movwf	___flmul@temp
  5824     0AB9                     l2998:
  5825     0AB9  083C               	movf	___flmul@temp,w
  5826     0ABA  00AC               	movwf	??___flmul
  5827     0ABB  083D               	movf	___flmul@temp+1,w
  5828     0ABC  00AD               	movwf	??___flmul+1
  5829     0ABD  01AE               	clrf	??___flmul+2
  5830     0ABE  01AF               	clrf	??___flmul+3
  5831     0ABF  082C               	movf	??___flmul,w
  5832     0AC0  07B2               	addwf	___flmul@grs,f
  5833     0AC1  082D               	movf	??___flmul+1,w
  5834     0AC2  1103               	clrz
  5835     0AC3  1803               	skipnc
  5836     0AC4  3E01               	addlw	1
  5837     0AC5  1903               	skipnz
  5838     0AC6  2AC8               	goto	u4401
  5839     0AC7  07B3               	addwf	___flmul@grs+1,f
  5840     0AC8                     u4401:
  5841     0AC8  082E               	movf	??___flmul+2,w
  5842     0AC9  1103               	clrz
  5843     0ACA  1803               	skipnc
  5844     0ACB  3E01               	addlw	1
  5845     0ACC  1903               	skipnz
  5846     0ACD  2ACF               	goto	u4402
  5847     0ACE  07B4               	addwf	___flmul@grs+2,f
  5848     0ACF                     u4402:
  5849     0ACF  082F               	movf	??___flmul+3,w
  5850     0AD0  1103               	clrz
  5851     0AD1  1803               	skipnc
  5852     0AD2  3E01               	addlw	1
  5853     0AD3  1903               	skipnz
  5854     0AD4  2AD6               	goto	u4403
  5855     0AD5  07B5               	addwf	___flmul@grs+3,f
  5856     0AD6                     u4403:
  5857     0AD6                     l3000:
  5858     0AD6  3008               	movlw	8
  5859     0AD7  00AC               	movwf	??___flmul
  5860     0AD8                     u4415:
  5861     0AD8  1003               	clrc
  5862     0AD9  0DB2               	rlf	___flmul@grs,f
  5863     0ADA  0DB3               	rlf	___flmul@grs+1,f
  5864     0ADB  0DB4               	rlf	___flmul@grs+2,f
  5865     0ADC  0DB5               	rlf	___flmul@grs+3,f
  5866     0ADD  0BAC               	decfsz	??___flmul,f
  5867     0ADE  2AD8               	goto	u4415
  5868     0ADF  0824               	movf	___flmul@b,w
  5869     0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5870     0AE1  0828               	movf	___flmul@a,w
  5871     0AE2  160A  158A  239B  120A  158A  	fcall	__Umul8_16
  5872     0AE7  0871               	movf	?__Umul8_16+1,w
  5873     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5874     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5875     0AEA  00BD               	movwf	___flmul@temp+1
  5876     0AEB  0870               	movf	?__Umul8_16,w
  5877     0AEC  00BC               	movwf	___flmul@temp
  5878     0AED                     l3002:
  5879     0AED  083C               	movf	___flmul@temp,w
  5880     0AEE  00AC               	movwf	??___flmul
  5881     0AEF  083D               	movf	___flmul@temp+1,w
  5882     0AF0  00AD               	movwf	??___flmul+1
  5883     0AF1  01AE               	clrf	??___flmul+2
  5884     0AF2  01AF               	clrf	??___flmul+3
  5885     0AF3  082C               	movf	??___flmul,w
  5886     0AF4  07B2               	addwf	___flmul@grs,f
  5887     0AF5  082D               	movf	??___flmul+1,w
  5888     0AF6  1103               	clrz
  5889     0AF7  1803               	skipnc
  5890     0AF8  3E01               	addlw	1
  5891     0AF9  1903               	skipnz
  5892     0AFA  2AFC               	goto	u4421
  5893     0AFB  07B3               	addwf	___flmul@grs+1,f
  5894     0AFC                     u4421:
  5895     0AFC  082E               	movf	??___flmul+2,w
  5896     0AFD  1103               	clrz
  5897     0AFE  1803               	skipnc
  5898     0AFF  3E01               	addlw	1
  5899     0B00  1903               	skipnz
  5900     0B01  2B03               	goto	u4422
  5901     0B02  07B4               	addwf	___flmul@grs+2,f
  5902     0B03                     u4422:
  5903     0B03  082F               	movf	??___flmul+3,w
  5904     0B04  1103               	clrz
  5905     0B05  1803               	skipnc
  5906     0B06  3E01               	addlw	1
  5907     0B07  1903               	skipnz
  5908     0B08  2B0A               	goto	u4423
  5909     0B09  07B5               	addwf	___flmul@grs+3,f
  5910     0B0A                     u4423:
  5911     0B0A                     l3004:
  5912     0B0A  0825               	movf	___flmul@b+1,w
  5913     0B0B  00F0               	movwf	__Umul8_16@multiplicand
  5914     0B0C  082A               	movf	___flmul@a+2,w
  5915     0B0D  160A  158A  239B  120A  158A  	fcall	__Umul8_16
  5916     0B12  0871               	movf	?__Umul8_16+1,w
  5917     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  5918     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  5919     0B15  00BD               	movwf	___flmul@temp+1
  5920     0B16  0870               	movf	?__Umul8_16,w
  5921     0B17  00BC               	movwf	___flmul@temp
  5922     0B18  083C               	movf	___flmul@temp,w
  5923     0B19  00AC               	movwf	??___flmul
  5924     0B1A  083D               	movf	___flmul@temp+1,w
  5925     0B1B  00AD               	movwf	??___flmul+1
  5926     0B1C  01AE               	clrf	??___flmul+2
  5927     0B1D  01AF               	clrf	??___flmul+3
  5928     0B1E  082C               	movf	??___flmul,w
  5929     0B1F  07B8               	addwf	___flmul@prod,f
  5930     0B20  082D               	movf	??___flmul+1,w
  5931     0B21  1103               	clrz
  5932     0B22  1803               	skipnc
  5933     0B23  3E01               	addlw	1
  5934     0B24  1903               	skipnz
  5935     0B25  2B27               	goto	u4431
  5936     0B26  07B9               	addwf	___flmul@prod+1,f
  5937     0B27                     u4431:
  5938     0B27  082E               	movf	??___flmul+2,w
  5939     0B28  1103               	clrz
  5940     0B29  1803               	skipnc
  5941     0B2A  3E01               	addlw	1
  5942     0B2B  1903               	skipnz
  5943     0B2C  2B2E               	goto	u4432
  5944     0B2D  07BA               	addwf	___flmul@prod+2,f
  5945     0B2E                     u4432:
  5946     0B2E  082F               	movf	??___flmul+3,w
  5947     0B2F  1103               	clrz
  5948     0B30  1803               	skipnc
  5949     0B31  3E01               	addlw	1
  5950     0B32  1903               	skipnz
  5951     0B33  2B35               	goto	u4433
  5952     0B34  07BB               	addwf	___flmul@prod+3,f
  5953     0B35                     u4433:
  5954     0B35                     l3006:
  5955     0B35  0826               	movf	___flmul@b+2,w
  5956     0B36  00F0               	movwf	__Umul8_16@multiplicand
  5957     0B37  0829               	movf	___flmul@a+1,w
  5958     0B38  160A  158A  239B  120A  158A  	fcall	__Umul8_16
  5959     0B3D  0871               	movf	?__Umul8_16+1,w
  5960     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  5961     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  5962     0B40  00BD               	movwf	___flmul@temp+1
  5963     0B41  0870               	movf	?__Umul8_16,w
  5964     0B42  00BC               	movwf	___flmul@temp
  5965     0B43                     l3008:
  5966     0B43  083C               	movf	___flmul@temp,w
  5967     0B44  00AC               	movwf	??___flmul
  5968     0B45  083D               	movf	___flmul@temp+1,w
  5969     0B46  00AD               	movwf	??___flmul+1
  5970     0B47  01AE               	clrf	??___flmul+2
  5971     0B48  01AF               	clrf	??___flmul+3
  5972     0B49  082C               	movf	??___flmul,w
  5973     0B4A  07B8               	addwf	___flmul@prod,f
  5974     0B4B  082D               	movf	??___flmul+1,w
  5975     0B4C  1103               	clrz
  5976     0B4D  1803               	skipnc
  5977     0B4E  3E01               	addlw	1
  5978     0B4F  1903               	skipnz
  5979     0B50  2B52               	goto	u4441
  5980     0B51  07B9               	addwf	___flmul@prod+1,f
  5981     0B52                     u4441:
  5982     0B52  082E               	movf	??___flmul+2,w
  5983     0B53  1103               	clrz
  5984     0B54  1803               	skipnc
  5985     0B55  3E01               	addlw	1
  5986     0B56  1903               	skipnz
  5987     0B57  2B59               	goto	u4442
  5988     0B58  07BA               	addwf	___flmul@prod+2,f
  5989     0B59                     u4442:
  5990     0B59  082F               	movf	??___flmul+3,w
  5991     0B5A  1103               	clrz
  5992     0B5B  1803               	skipnc
  5993     0B5C  3E01               	addlw	1
  5994     0B5D  1903               	skipnz
  5995     0B5E  2B60               	goto	u4443
  5996     0B5F  07BB               	addwf	___flmul@prod+3,f
  5997     0B60                     u4443:
  5998     0B60  0826               	movf	___flmul@b+2,w
  5999     0B61  00F0               	movwf	__Umul8_16@multiplicand
  6000     0B62  082A               	movf	___flmul@a+2,w
  6001     0B63  160A  158A  239B  120A  158A  	fcall	__Umul8_16
  6002     0B68  0871               	movf	?__Umul8_16+1,w
  6003     0B69  1283               	bcf	3,5	;RP0=0, select bank0
  6004     0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  6005     0B6B  00BD               	movwf	___flmul@temp+1
  6006     0B6C  0870               	movf	?__Umul8_16,w
  6007     0B6D  00BC               	movwf	___flmul@temp
  6008     0B6E                     l3010:
  6009     0B6E  083C               	movf	___flmul@temp,w
  6010     0B6F  00AC               	movwf	??___flmul
  6011     0B70  083D               	movf	___flmul@temp+1,w
  6012     0B71  00AD               	movwf	??___flmul+1
  6013     0B72  01AE               	clrf	??___flmul+2
  6014     0B73  01AF               	clrf	??___flmul+3
  6015     0B74  3008               	movlw	8
  6016     0B75                     u4455:
  6017     0B75  1003               	clrc
  6018     0B76  0DAC               	rlf	??___flmul,f
  6019     0B77  0DAD               	rlf	??___flmul+1,f
  6020     0B78  0DAE               	rlf	??___flmul+2,f
  6021     0B79  0DAF               	rlf	??___flmul+3,f
  6022     0B7A                     u4450:
  6023     0B7A  3EFF               	addlw	-1
  6024     0B7B  1D03               	skipz
  6025     0B7C  2B75               	goto	u4455
  6026     0B7D  082C               	movf	??___flmul,w
  6027     0B7E  07B8               	addwf	___flmul@prod,f
  6028     0B7F  082D               	movf	??___flmul+1,w
  6029     0B80  1103               	clrz
  6030     0B81  1803               	skipnc
  6031     0B82  3E01               	addlw	1
  6032     0B83  1903               	skipnz
  6033     0B84  2B86               	goto	u4461
  6034     0B85  07B9               	addwf	___flmul@prod+1,f
  6035     0B86                     u4461:
  6036     0B86  082E               	movf	??___flmul+2,w
  6037     0B87  1103               	clrz
  6038     0B88  1803               	skipnc
  6039     0B89  3E01               	addlw	1
  6040     0B8A  1903               	skipnz
  6041     0B8B  2B8D               	goto	u4462
  6042     0B8C  07BA               	addwf	___flmul@prod+2,f
  6043     0B8D                     u4462:
  6044     0B8D  082F               	movf	??___flmul+3,w
  6045     0B8E  1103               	clrz
  6046     0B8F  1803               	skipnc
  6047     0B90  3E01               	addlw	1
  6048     0B91  1903               	skipnz
  6049     0B92  2B94               	goto	u4463
  6050     0B93  07BB               	addwf	___flmul@prod+3,f
  6051     0B94                     u4463:
  6052     0B94                     l3012:
  6053     0B94  0832               	movf	___flmul@grs,w
  6054     0B95  00AC               	movwf	??___flmul
  6055     0B96  0833               	movf	___flmul@grs+1,w
  6056     0B97  00AD               	movwf	??___flmul+1
  6057     0B98  0834               	movf	___flmul@grs+2,w
  6058     0B99  00AE               	movwf	??___flmul+2
  6059     0B9A  0835               	movf	___flmul@grs+3,w
  6060     0B9B  00AF               	movwf	??___flmul+3
  6061     0B9C  3018               	movlw	24
  6062     0B9D                     u4475:
  6063     0B9D  1003               	clrc
  6064     0B9E  0CAF               	rrf	??___flmul+3,f
  6065     0B9F  0CAE               	rrf	??___flmul+2,f
  6066     0BA0  0CAD               	rrf	??___flmul+1,f
  6067     0BA1  0CAC               	rrf	??___flmul,f
  6068     0BA2                     u4470:
  6069     0BA2  3EFF               	addlw	-1
  6070     0BA3  1D03               	skipz
  6071     0BA4  2B9D               	goto	u4475
  6072     0BA5  082C               	movf	??___flmul,w
  6073     0BA6  07B8               	addwf	___flmul@prod,f
  6074     0BA7  082D               	movf	??___flmul+1,w
  6075     0BA8  1103               	clrz
  6076     0BA9  1803               	skipnc
  6077     0BAA  3E01               	addlw	1
  6078     0BAB  1903               	skipnz
  6079     0BAC  2BAE               	goto	u4481
  6080     0BAD  07B9               	addwf	___flmul@prod+1,f
  6081     0BAE                     u4481:
  6082     0BAE  082E               	movf	??___flmul+2,w
  6083     0BAF  1103               	clrz
  6084     0BB0  1803               	skipnc
  6085     0BB1  3E01               	addlw	1
  6086     0BB2  1903               	skipnz
  6087     0BB3  2BB5               	goto	u4482
  6088     0BB4  07BA               	addwf	___flmul@prod+2,f
  6089     0BB5                     u4482:
  6090     0BB5  082F               	movf	??___flmul+3,w
  6091     0BB6  1103               	clrz
  6092     0BB7  1803               	skipnc
  6093     0BB8  3E01               	addlw	1
  6094     0BB9  1903               	skipnz
  6095     0BBA  2BBC               	goto	u4483
  6096     0BBB  07BB               	addwf	___flmul@prod+3,f
  6097     0BBC                     u4483:
  6098     0BBC                     l3014:
  6099     0BBC  3008               	movlw	8
  6100     0BBD  00AC               	movwf	??___flmul
  6101     0BBE                     u4495:
  6102     0BBE  1003               	clrc
  6103     0BBF  0DB2               	rlf	___flmul@grs,f
  6104     0BC0  0DB3               	rlf	___flmul@grs+1,f
  6105     0BC1  0DB4               	rlf	___flmul@grs+2,f
  6106     0BC2  0DB5               	rlf	___flmul@grs+3,f
  6107     0BC3  0BAC               	decfsz	??___flmul,f
  6108     0BC4  2BBE               	goto	u4495
  6109     0BC5                     l3016:
  6110     0BC5  0837               	movf	___flmul@bexp,w
  6111     0BC6  0736               	addwf	___flmul@aexp,w
  6112     0BC7  00AC               	movwf	??___flmul
  6113     0BC8  01AD               	clrf	??___flmul+1
  6114     0BC9  0DAD               	rlf	??___flmul+1,f
  6115     0BCA  082C               	movf	??___flmul,w
  6116     0BCB  3E82               	addlw	130
  6117     0BCC  00BC               	movwf	___flmul@temp
  6118     0BCD  082D               	movf	??___flmul+1,w
  6119     0BCE  1803               	skipnc
  6120     0BCF  3E01               	addlw	1
  6121     0BD0  3EFF               	addlw	255
  6122     0BD1  00BD               	movwf	___flmul@temp+1
  6123     0BD2  2BF0               	goto	l3028
  6124     0BD3                     l3018:
  6125     0BD3  3001               	movlw	1
  6126     0BD4  00AC               	movwf	??___flmul
  6127     0BD5                     u4505:
  6128     0BD5  1003               	clrc
  6129     0BD6  0DB8               	rlf	___flmul@prod,f
  6130     0BD7  0DB9               	rlf	___flmul@prod+1,f
  6131     0BD8  0DBA               	rlf	___flmul@prod+2,f
  6132     0BD9  0DBB               	rlf	___flmul@prod+3,f
  6133     0BDA  0BAC               	decfsz	??___flmul,f
  6134     0BDB  2BD5               	goto	u4505
  6135     0BDC                     l3020:
  6136     0BDC  1FB5               	btfss	___flmul@grs+3,7
  6137     0BDD  2BDF               	goto	u4511
  6138     0BDE  2BE0               	goto	u4510
  6139     0BDF                     u4511:
  6140     0BDF  2BE1               	goto	l3024
  6141     0BE0                     u4510:
  6142     0BE0                     l3022:
  6143     0BE0  1438               	bsf	___flmul@prod,0
  6144     0BE1                     l3024:
  6145     0BE1  3001               	movlw	1
  6146     0BE2  00AC               	movwf	??___flmul
  6147     0BE3                     u4525:
  6148     0BE3  1003               	clrc
  6149     0BE4  0DB2               	rlf	___flmul@grs,f
  6150     0BE5  0DB3               	rlf	___flmul@grs+1,f
  6151     0BE6  0DB4               	rlf	___flmul@grs+2,f
  6152     0BE7  0DB5               	rlf	___flmul@grs+3,f
  6153     0BE8  0BAC               	decfsz	??___flmul,f
  6154     0BE9  2BE3               	goto	u4525
  6155     0BEA                     l3026:
  6156     0BEA  30FF               	movlw	255
  6157     0BEB  07BC               	addwf	___flmul@temp,f
  6158     0BEC  1803               	skipnc
  6159     0BED  0ABD               	incf	___flmul@temp+1,f
  6160     0BEE  30FF               	movlw	255
  6161     0BEF  07BD               	addwf	___flmul@temp+1,f
  6162     0BF0                     l3028:
  6163     0BF0  1FBA               	btfss	___flmul@prod+2,7
  6164     0BF1  2BF3               	goto	u4531
  6165     0BF2  2BF4               	goto	u4530
  6166     0BF3                     u4531:
  6167     0BF3  2BD3               	goto	l3018
  6168     0BF4                     u4530:
  6169     0BF4                     l3030:
  6170     0BF4  01B6               	clrf	___flmul@aexp
  6171     0BF5                     l3032:
  6172     0BF5  1FB5               	btfss	___flmul@grs+3,7
  6173     0BF6  2BF8               	goto	u4541
  6174     0BF7  2BF9               	goto	u4540
  6175     0BF8                     u4541:
  6176     0BF8  2C15               	goto	l3040
  6177     0BF9                     u4540:
  6178     0BF9                     l3034:
  6179     0BF9  30FF               	movlw	255
  6180     0BFA  0532               	andwf	___flmul@grs,w
  6181     0BFB  00AC               	movwf	??___flmul
  6182     0BFC  30FF               	movlw	255
  6183     0BFD  0533               	andwf	___flmul@grs+1,w
  6184     0BFE  00AD               	movwf	??___flmul+1
  6185     0BFF  30FF               	movlw	255
  6186     0C00  0534               	andwf	___flmul@grs+2,w
  6187     0C01  00AE               	movwf	??___flmul+2
  6188     0C02  307F               	movlw	127
  6189     0C03  0535               	andwf	___flmul@grs+3,w
  6190     0C04  00AF               	movwf	??___flmul+3
  6191     0C05  082F               	movf	??___flmul+3,w
  6192     0C06  042E               	iorwf	??___flmul+2,w
  6193     0C07  042D               	iorwf	??___flmul+1,w
  6194     0C08  042C               	iorwf	??___flmul,w
  6195     0C09  1903               	skipnz
  6196     0C0A  2C0C               	goto	u4551
  6197     0C0B  2C0D               	goto	u4550
  6198     0C0C                     u4551:
  6199     0C0C  2C10               	goto	l848
  6200     0C0D                     u4550:
  6201     0C0D                     l3036:
  6202     0C0D  01B6               	clrf	___flmul@aexp
  6203     0C0E  0AB6               	incf	___flmul@aexp,f
  6204     0C0F  2C15               	goto	l3040
  6205     0C10                     l848:
  6206     0C10  1C38               	btfss	___flmul@prod,0
  6207     0C11  2C13               	goto	u4561
  6208     0C12  2C14               	goto	u4560
  6209     0C13                     u4561:
  6210     0C13  2C15               	goto	l3040
  6211     0C14                     u4560:
  6212     0C14  2C0D               	goto	l3036
  6213     0C15                     l3040:
  6214     0C15  0836               	movf	___flmul@aexp,w
  6215     0C16  1903               	btfsc	3,2
  6216     0C17  2C19               	goto	u4571
  6217     0C18  2C1A               	goto	u4570
  6218     0C19                     u4571:
  6219     0C19  2C4B               	goto	l3050
  6220     0C1A                     u4570:
  6221     0C1A                     l3042:
  6222     0C1A  3001               	movlw	1
  6223     0C1B  07B8               	addwf	___flmul@prod,f
  6224     0C1C  3000               	movlw	0
  6225     0C1D  1803               	skipnc
  6226     0C1E  3001               	movlw	1
  6227     0C1F  07B9               	addwf	___flmul@prod+1,f
  6228     0C20  3000               	movlw	0
  6229     0C21  1803               	skipnc
  6230     0C22  3001               	movlw	1
  6231     0C23  07BA               	addwf	___flmul@prod+2,f
  6232     0C24  3000               	movlw	0
  6233     0C25  1803               	skipnc
  6234     0C26  3001               	movlw	1
  6235     0C27  07BB               	addwf	___flmul@prod+3,f
  6236     0C28                     l3044:
  6237     0C28  1C3B               	btfss	___flmul@prod+3,0
  6238     0C29  2C2B               	goto	u4581
  6239     0C2A  2C2C               	goto	u4580
  6240     0C2B                     u4581:
  6241     0C2B  2C4B               	goto	l3050
  6242     0C2C                     u4580:
  6243     0C2C                     l3046:
  6244     0C2C  0838               	movf	___flmul@prod,w
  6245     0C2D  00AC               	movwf	??___flmul
  6246     0C2E  0839               	movf	___flmul@prod+1,w
  6247     0C2F  00AD               	movwf	??___flmul+1
  6248     0C30  083A               	movf	___flmul@prod+2,w
  6249     0C31  00AE               	movwf	??___flmul+2
  6250     0C32  083B               	movf	___flmul@prod+3,w
  6251     0C33  00AF               	movwf	??___flmul+3
  6252     0C34  3001               	movlw	1
  6253     0C35  00B0               	movwf	??___flmul+4
  6254     0C36                     u4595:
  6255     0C36  0D2F               	rlf	??___flmul+3,w
  6256     0C37  0CAF               	rrf	??___flmul+3,f
  6257     0C38  0CAE               	rrf	??___flmul+2,f
  6258     0C39  0CAD               	rrf	??___flmul+1,f
  6259     0C3A  0CAC               	rrf	??___flmul,f
  6260     0C3B                     u4590:
  6261     0C3B  0BB0               	decfsz	??___flmul+4,f
  6262     0C3C  2C36               	goto	u4595
  6263     0C3D  082F               	movf	??___flmul+3,w
  6264     0C3E  00BB               	movwf	___flmul@prod+3
  6265     0C3F  082E               	movf	??___flmul+2,w
  6266     0C40  00BA               	movwf	___flmul@prod+2
  6267     0C41  082D               	movf	??___flmul+1,w
  6268     0C42  00B9               	movwf	___flmul@prod+1
  6269     0C43  082C               	movf	??___flmul,w
  6270     0C44  00B8               	movwf	___flmul@prod
  6271     0C45                     l3048:
  6272     0C45  3001               	movlw	1
  6273     0C46  07BC               	addwf	___flmul@temp,f
  6274     0C47  1803               	skipnc
  6275     0C48  0ABD               	incf	___flmul@temp+1,f
  6276     0C49  3000               	movlw	0
  6277     0C4A  07BD               	addwf	___flmul@temp+1,f
  6278     0C4B                     l3050:
  6279     0C4B  083D               	movf	___flmul@temp+1,w
  6280     0C4C  3A80               	xorlw	128
  6281     0C4D  00FF               	movwf	btemp+1
  6282     0C4E  3080               	movlw	128
  6283     0C4F  027F               	subwf	btemp+1,w
  6284     0C50  1D03               	skipz
  6285     0C51  2C54               	goto	u4605
  6286     0C52  30FF               	movlw	255
  6287     0C53  023C               	subwf	___flmul@temp,w
  6288     0C54                     u4605:
  6289     0C54  1C03               	skipc
  6290     0C55  2C57               	goto	u4601
  6291     0C56  2C58               	goto	u4600
  6292     0C57                     u4601:
  6293     0C57  2C63               	goto	l3054
  6294     0C58                     u4600:
  6295     0C58                     l3052:
  6296     0C58  307F               	movlw	127
  6297     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  6298     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  6299     0C5B  00BB               	movwf	___flmul@prod+3
  6300     0C5C  3080               	movlw	128
  6301     0C5D  00BA               	movwf	___flmul@prod+2
  6302     0C5E  3000               	movlw	0
  6303     0C5F  00B9               	movwf	___flmul@prod+1
  6304     0C60  3000               	movlw	0
  6305     0C61  00B8               	movwf	___flmul@prod
  6306     0C62  2C94               	goto	l854
  6307     0C63                     l3054:
  6308     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6309     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  6310     0C65  083D               	movf	___flmul@temp+1,w
  6311     0C66  3A80               	xorlw	128
  6312     0C67  00FF               	movwf	btemp+1
  6313     0C68  3080               	movlw	128
  6314     0C69  027F               	subwf	btemp+1,w
  6315     0C6A  1D03               	skipz
  6316     0C6B  2C6E               	goto	u4615
  6317     0C6C  3001               	movlw	1
  6318     0C6D  023C               	subwf	___flmul@temp,w
  6319     0C6E                     u4615:
  6320     0C6E  1803               	skipnc
  6321     0C6F  2C71               	goto	u4611
  6322     0C70  2C72               	goto	u4610
  6323     0C71                     u4611:
  6324     0C71  2C7E               	goto	l3060
  6325     0C72                     u4610:
  6326     0C72                     l3056:
  6327     0C72  3000               	movlw	0
  6328     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  6329     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  6330     0C75  00BB               	movwf	___flmul@prod+3
  6331     0C76  3000               	movlw	0
  6332     0C77  00BA               	movwf	___flmul@prod+2
  6333     0C78  3000               	movlw	0
  6334     0C79  00B9               	movwf	___flmul@prod+1
  6335     0C7A  3000               	movlw	0
  6336     0C7B  00B8               	movwf	___flmul@prod
  6337     0C7C                     l3058:
  6338     0C7C  01B1               	clrf	___flmul@sign
  6339     0C7D  2C94               	goto	l854
  6340     0C7E                     l3060:
  6341     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  6342     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  6343     0C80  083C               	movf	___flmul@temp,w
  6344     0C81  00B7               	movwf	___flmul@bexp
  6345     0C82  30FF               	movlw	255
  6346     0C83  05B8               	andwf	___flmul@prod,f
  6347     0C84  30FF               	movlw	255
  6348     0C85  05B9               	andwf	___flmul@prod+1,f
  6349     0C86  307F               	movlw	127
  6350     0C87  05BA               	andwf	___flmul@prod+2,f
  6351     0C88  3000               	movlw	0
  6352     0C89  05BB               	andwf	___flmul@prod+3,f
  6353     0C8A                     l3062:
  6354     0C8A  1C37               	btfss	___flmul@bexp,0
  6355     0C8B  2C8D               	goto	u4621
  6356     0C8C  2C8E               	goto	u4620
  6357     0C8D                     u4621:
  6358     0C8D  2C8F               	goto	l3066
  6359     0C8E                     u4620:
  6360     0C8E                     l3064:
  6361     0C8E  17BA               	bsf	___flmul@prod+2,7
  6362     0C8F                     l3066:
  6363     0C8F  0837               	movf	___flmul@bexp,w
  6364     0C90  00AC               	movwf	??___flmul
  6365     0C91  1003               	clrc
  6366     0C92  0C2C               	rrf	??___flmul,w
  6367     0C93  00BB               	movwf	___flmul@prod+3
  6368     0C94                     l854:
  6369     0C94  0831               	movf	___flmul@sign,w
  6370     0C95  00AC               	movwf	??___flmul
  6371     0C96  082C               	movf	??___flmul,w
  6372     0C97  04BB               	iorwf	___flmul@prod+3,f
  6373     0C98                     l3068:
  6374     0C98  083B               	movf	___flmul@prod+3,w
  6375     0C99  00A7               	movwf	?___flmul+3
  6376     0C9A  083A               	movf	___flmul@prod+2,w
  6377     0C9B  00A6               	movwf	?___flmul+2
  6378     0C9C  0839               	movf	___flmul@prod+1,w
  6379     0C9D  00A5               	movwf	?___flmul+1
  6380     0C9E  0838               	movf	___flmul@prod,w
  6381     0C9F  00A4               	movwf	?___flmul
  6382     0CA0                     l842:
  6383     0CA0  0008               	return
  6384     0CA1                     __end_of___flmul:
  6385                           
  6386                           	psect	text10
  6387     1B9B                     __ptext10:	
  6388 ;; *************** function __Umul8_16 *****************
  6389 ;; Defined at:
  6390 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  multiplier      1    wreg     unsigned char 
  6393 ;;  multiplicand    1    0[COMMON] unsigned char 
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;  multiplier      1    8[COMMON] unsigned char 
  6396 ;;  word_mpld       2    6[COMMON] unsigned int 
  6397 ;;  product         2    4[COMMON] unsigned int 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  2    0[COMMON] unsigned int 
  6400 ;; Registers used:
  6401 ;;		wreg, status,2, status,0
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6407 ;;      Params:         2       0       0       0       0
  6408 ;;      Locals:         5       0       0       0       0
  6409 ;;      Temps:          2       0       0       0       0
  6410 ;;      Totals:         9       0       0       0       0
  6411 ;;Total ram usage:        9 bytes
  6412 ;; Hardware stack levels used: 1
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		___flmul
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420     1B9B                     __Umul8_16:	
  6421                           ;psect for function __Umul8_16
  6422                           
  6423                           
  6424                           ;incstack = 0
  6425                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6426                           ;__Umul8_16@multiplier stored from wreg
  6427     1B9B  00F8               	movwf	__Umul8_16@multiplier
  6428     1B9C                     l2560:
  6429     1B9C  01F4               	clrf	__Umul8_16@product
  6430     1B9D  01F5               	clrf	__Umul8_16@product+1
  6431     1B9E                     l2562:
  6432     1B9E  0870               	movf	__Umul8_16@multiplicand,w
  6433     1B9F  00F2               	movwf	??__Umul8_16
  6434     1BA0  01F3               	clrf	??__Umul8_16+1
  6435     1BA1  0872               	movf	??__Umul8_16,w
  6436     1BA2  00F6               	movwf	__Umul8_16@word_mpld
  6437     1BA3  0873               	movf	??__Umul8_16+1,w
  6438     1BA4  00F7               	movwf	__Umul8_16@word_mpld+1
  6439     1BA5                     l2564:
  6440     1BA5  1C78               	btfss	__Umul8_16@multiplier,0
  6441     1BA6  2BA8               	goto	u3341
  6442     1BA7  2BA9               	goto	u3340
  6443     1BA8                     u3341:
  6444     1BA8  2BAF               	goto	l861
  6445     1BA9                     u3340:
  6446     1BA9                     l2566:
  6447     1BA9  0876               	movf	__Umul8_16@word_mpld,w
  6448     1BAA  07F4               	addwf	__Umul8_16@product,f
  6449     1BAB  1803               	skipnc
  6450     1BAC  0AF5               	incf	__Umul8_16@product+1,f
  6451     1BAD  0877               	movf	__Umul8_16@word_mpld+1,w
  6452     1BAE  07F5               	addwf	__Umul8_16@product+1,f
  6453     1BAF                     l861:
  6454     1BAF  3001               	movlw	1
  6455     1BB0                     u3355:
  6456     1BB0  1003               	clrc
  6457     1BB1  0DF6               	rlf	__Umul8_16@word_mpld,f
  6458     1BB2  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6459     1BB3  3EFF               	addlw	-1
  6460     1BB4  1D03               	skipz
  6461     1BB5  2BB0               	goto	u3355
  6462     1BB6  1003               	clrc
  6463     1BB7  0CF8               	rrf	__Umul8_16@multiplier,f
  6464     1BB8                     l2568:
  6465     1BB8  0878               	movf	__Umul8_16@multiplier,w
  6466     1BB9  1D03               	btfss	3,2
  6467     1BBA  2BBC               	goto	u3361
  6468     1BBB  2BBD               	goto	u3360
  6469     1BBC                     u3361:
  6470     1BBC  2BA5               	goto	l2564
  6471     1BBD                     u3360:
  6472     1BBD                     l2570:
  6473     1BBD  0875               	movf	__Umul8_16@product+1,w
  6474     1BBE  00F1               	movwf	?__Umul8_16+1
  6475     1BBF  0874               	movf	__Umul8_16@product,w
  6476     1BC0  00F0               	movwf	?__Umul8_16
  6477     1BC1                     l863:
  6478     1BC1  0008               	return
  6479     1BC2                     __end_of__Umul8_16:
  6480                           
  6481                           	psect	text11
  6482     1113                     __ptext11:	
  6483 ;; *************** function __tdiv_to_l_ *****************
  6484 ;; Defined at:
  6485 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;  f1              4    0[COMMON] float 
  6488 ;;  f2              4    4[COMMON] float 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  quot            4    0[BANK0 ] unsigned long 
  6491 ;;  exp1            1    5[BANK0 ] unsigned char 
  6492 ;;  cntr            1    4[BANK0 ] unsigned char 
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  4    0[COMMON] unsigned long 
  6495 ;; Registers used:
  6496 ;;		wreg, status,2, status,0
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6502 ;;      Params:         8       0       0       0       0
  6503 ;;      Locals:         0       6       0       0       0
  6504 ;;      Temps:          3       0       0       0       0
  6505 ;;      Totals:        11       6       0       0       0
  6506 ;;Total ram usage:       17 bytes
  6507 ;; Hardware stack levels used: 1
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		_sprintf
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515     1113                     __tdiv_to_l_:	
  6516                           ;psect for function __tdiv_to_l_
  6517                           
  6518     1113                     l3188:	
  6519                           ;incstack = 0
  6520                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6521                           
  6522     1113  0870               	movf	__tdiv_to_l_@f1,w
  6523     1114  00F8               	movwf	??__tdiv_to_l_
  6524     1115  0871               	movf	__tdiv_to_l_@f1+1,w
  6525     1116  00F9               	movwf	??__tdiv_to_l_+1
  6526     1117  0872               	movf	__tdiv_to_l_@f1+2,w
  6527     1118  00FA               	movwf	??__tdiv_to_l_+2
  6528     1119  1003               	clrc
  6529     111A  0D79               	rlf	??__tdiv_to_l_+1,w
  6530     111B  0D7A               	rlf	??__tdiv_to_l_+2,w
  6531     111C  1283               	bcf	3,5	;RP0=0, select bank0
  6532     111D  1303               	bcf	3,6	;RP1=0, select bank0
  6533     111E  00A5               	movwf	__tdiv_to_l_@exp1
  6534     111F  0825               	movf	__tdiv_to_l_@exp1,w
  6535     1120  1D03               	btfss	3,2
  6536     1121  2923               	goto	u4941
  6537     1122  2924               	goto	u4940
  6538     1123                     u4941:
  6539     1123  292D               	goto	l3194
  6540     1124                     u4940:
  6541     1124                     l3190:
  6542     1124  3000               	movlw	0
  6543     1125  00F3               	movwf	?__tdiv_to_l_+3
  6544     1126  3000               	movlw	0
  6545     1127  00F2               	movwf	?__tdiv_to_l_+2
  6546     1128  3000               	movlw	0
  6547     1129  00F1               	movwf	?__tdiv_to_l_+1
  6548     112A  3000               	movlw	0
  6549     112B  00F0               	movwf	?__tdiv_to_l_
  6550     112C  29C9               	goto	l636
  6551     112D                     l3194:
  6552     112D  0874               	movf	__tdiv_to_l_@f2,w
  6553     112E  00F8               	movwf	??__tdiv_to_l_
  6554     112F  0875               	movf	__tdiv_to_l_@f2+1,w
  6555     1130  00F9               	movwf	??__tdiv_to_l_+1
  6556     1131  0876               	movf	__tdiv_to_l_@f2+2,w
  6557     1132  00FA               	movwf	??__tdiv_to_l_+2
  6558     1133  1003               	clrc
  6559     1134  0D79               	rlf	??__tdiv_to_l_+1,w
  6560     1135  0D7A               	rlf	??__tdiv_to_l_+2,w
  6561     1136  00A4               	movwf	__tdiv_to_l_@cntr
  6562     1137  0824               	movf	__tdiv_to_l_@cntr,w
  6563     1138  1D03               	btfss	3,2
  6564     1139  293B               	goto	u4951
  6565     113A  293C               	goto	u4950
  6566     113B                     u4951:
  6567     113B  293D               	goto	l637
  6568     113C                     u4950:
  6569     113C  2924               	goto	l3190
  6570     113D                     l637:
  6571     113D  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6572     113E                     l3200:
  6573     113E  30FF               	movlw	255
  6574     113F  05F0               	andwf	__tdiv_to_l_@f1,f
  6575     1140  30FF               	movlw	255
  6576     1141  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6577     1142  3000               	movlw	0
  6578     1143  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6579     1144                     l3202:
  6580     1144  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6581     1145  30FF               	movlw	255
  6582     1146  05F4               	andwf	__tdiv_to_l_@f2,f
  6583     1147  30FF               	movlw	255
  6584     1148  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6585     1149  3000               	movlw	0
  6586     114A  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6587     114B  3000               	movlw	0
  6588     114C  00A3               	movwf	__tdiv_to_l_@quot+3
  6589     114D  3000               	movlw	0
  6590     114E  00A2               	movwf	__tdiv_to_l_@quot+2
  6591     114F  3000               	movlw	0
  6592     1150  00A1               	movwf	__tdiv_to_l_@quot+1
  6593     1151  3000               	movlw	0
  6594     1152  00A0               	movwf	__tdiv_to_l_@quot
  6595     1153                     l3204:
  6596     1153  307F               	movlw	127
  6597     1154  02A5               	subwf	__tdiv_to_l_@exp1,f
  6598     1155                     l3206:
  6599     1155  3098               	movlw	152
  6600     1156  0724               	addwf	__tdiv_to_l_@cntr,w
  6601     1157  00F8               	movwf	??__tdiv_to_l_
  6602     1158  0878               	movf	??__tdiv_to_l_,w
  6603     1159  02A5               	subwf	__tdiv_to_l_@exp1,f
  6604     115A  3018               	movlw	24
  6605     115B  00A4               	movwf	__tdiv_to_l_@cntr
  6606     115C                     l3208:
  6607     115C  3001               	movlw	1
  6608     115D  00F8               	movwf	??__tdiv_to_l_
  6609     115E                     u4965:
  6610     115E  1003               	clrc
  6611     115F  0DA0               	rlf	__tdiv_to_l_@quot,f
  6612     1160  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6613     1161  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6614     1162  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6615     1163  0BF8               	decfsz	??__tdiv_to_l_,f
  6616     1164  295E               	goto	u4965
  6617     1165                     l3210:
  6618     1165  0876               	movf	__tdiv_to_l_@f2+2,w
  6619     1166  0272               	subwf	__tdiv_to_l_@f1+2,w
  6620     1167  1D03               	skipz
  6621     1168  296F               	goto	u4975
  6622     1169  0875               	movf	__tdiv_to_l_@f2+1,w
  6623     116A  0271               	subwf	__tdiv_to_l_@f1+1,w
  6624     116B  1D03               	skipz
  6625     116C  296F               	goto	u4975
  6626     116D  0874               	movf	__tdiv_to_l_@f2,w
  6627     116E  0270               	subwf	__tdiv_to_l_@f1,w
  6628     116F                     u4975:
  6629     116F  1C03               	skipc
  6630     1170  2972               	goto	u4971
  6631     1171  2973               	goto	u4970
  6632     1172                     u4971:
  6633     1172  297E               	goto	l3216
  6634     1173                     u4970:
  6635     1173                     l3212:
  6636     1173  0874               	movf	__tdiv_to_l_@f2,w
  6637     1174  02F0               	subwf	__tdiv_to_l_@f1,f
  6638     1175  0875               	movf	__tdiv_to_l_@f2+1,w
  6639     1176  1C03               	skipc
  6640     1177  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6641     1178  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6642     1179  0876               	movf	__tdiv_to_l_@f2+2,w
  6643     117A  1C03               	skipc
  6644     117B  0A76               	incf	__tdiv_to_l_@f2+2,w
  6645     117C  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6646     117D                     l3214:
  6647     117D  1420               	bsf	__tdiv_to_l_@quot,0
  6648     117E                     l3216:
  6649     117E  3001               	movlw	1
  6650     117F                     u4985:
  6651     117F  1003               	clrc
  6652     1180  0DF0               	rlf	__tdiv_to_l_@f1,f
  6653     1181  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6654     1182  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6655     1183  3EFF               	addlw	-1
  6656     1184  1D03               	skipz
  6657     1185  297F               	goto	u4985
  6658     1186                     l3218:
  6659     1186  3001               	movlw	1
  6660     1187  02A4               	subwf	__tdiv_to_l_@cntr,f
  6661     1188  1D03               	btfss	3,2
  6662     1189  298B               	goto	u4991
  6663     118A  298C               	goto	u4990
  6664     118B                     u4991:
  6665     118B  295C               	goto	l3208
  6666     118C                     u4990:
  6667     118C                     l640:
  6668     118C  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6669     118D  298F               	goto	u5001
  6670     118E  2990               	goto	u5000
  6671     118F                     u5001:
  6672     118F  29AA               	goto	l3228
  6673     1190                     u5000:
  6674     1190                     l3220:
  6675     1190  0825               	movf	__tdiv_to_l_@exp1,w
  6676     1191  3A80               	xorlw	128
  6677     1192  3E97               	addlw	151
  6678     1193  1803               	skipnc
  6679     1194  2996               	goto	u5011
  6680     1195  2997               	goto	u5010
  6681     1196                     u5011:
  6682     1196  2998               	goto	l3226
  6683     1197                     u5010:
  6684     1197  2924               	goto	l3190
  6685     1198                     l3226:
  6686     1198  3001               	movlw	1
  6687     1199                     u5025:
  6688     1199  1003               	clrc
  6689     119A  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6690     119B  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6691     119C  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6692     119D  0CA0               	rrf	__tdiv_to_l_@quot,f
  6693     119E  3EFF               	addlw	-1
  6694     119F  1D03               	skipz
  6695     11A0  2999               	goto	u5025
  6696     11A1  3001               	movlw	1
  6697     11A2  00F8               	movwf	??__tdiv_to_l_
  6698     11A3  0878               	movf	??__tdiv_to_l_,w
  6699     11A4  07A5               	addwf	__tdiv_to_l_@exp1,f
  6700     11A5  1D03               	btfss	3,2
  6701     11A6  29A8               	goto	u5031
  6702     11A7  29A9               	goto	u5030
  6703     11A8                     u5031:
  6704     11A8  2998               	goto	l3226
  6705     11A9                     u5030:
  6706     11A9  29C1               	goto	l3236
  6707     11AA                     l3228:
  6708     11AA  3018               	movlw	24
  6709     11AB  0225               	subwf	__tdiv_to_l_@exp1,w
  6710     11AC  1C03               	skipc
  6711     11AD  29AF               	goto	u5041
  6712     11AE  29B0               	goto	u5040
  6713     11AF                     u5041:
  6714     11AF  29BC               	goto	l647
  6715     11B0                     u5040:
  6716     11B0  2924               	goto	l3190
  6717     11B1                     l3234:
  6718     11B1  3001               	movlw	1
  6719     11B2  00F8               	movwf	??__tdiv_to_l_
  6720     11B3                     u5055:
  6721     11B3  1003               	clrc
  6722     11B4  0DA0               	rlf	__tdiv_to_l_@quot,f
  6723     11B5  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6724     11B6  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6725     11B7  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6726     11B8  0BF8               	decfsz	??__tdiv_to_l_,f
  6727     11B9  29B3               	goto	u5055
  6728     11BA  3001               	movlw	1
  6729     11BB  02A5               	subwf	__tdiv_to_l_@exp1,f
  6730     11BC                     l647:
  6731     11BC  0825               	movf	__tdiv_to_l_@exp1,w
  6732     11BD  1D03               	btfss	3,2
  6733     11BE  29C0               	goto	u5061
  6734     11BF  29C1               	goto	u5060
  6735     11C0                     u5061:
  6736     11C0  29B1               	goto	l3234
  6737     11C1                     u5060:
  6738     11C1                     l3236:
  6739     11C1  0823               	movf	__tdiv_to_l_@quot+3,w
  6740     11C2  00F3               	movwf	?__tdiv_to_l_+3
  6741     11C3  0822               	movf	__tdiv_to_l_@quot+2,w
  6742     11C4  00F2               	movwf	?__tdiv_to_l_+2
  6743     11C5  0821               	movf	__tdiv_to_l_@quot+1,w
  6744     11C6  00F1               	movwf	?__tdiv_to_l_+1
  6745     11C7  0820               	movf	__tdiv_to_l_@quot,w
  6746     11C8  00F0               	movwf	?__tdiv_to_l_
  6747     11C9                     l636:
  6748     11C9  0008               	return
  6749     11CA                     __end_of__tdiv_to_l_:
  6750                           
  6751                           	psect	text12
  6752     0013                     __ptext12:	
  6753 ;; *************** function __div_to_l_ *****************
  6754 ;; Defined at:
  6755 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  f1              4    0[COMMON] unsigned long 
  6758 ;;  f2              4    4[COMMON] unsigned long 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;  quot            4    0[BANK0 ] unsigned long 
  6761 ;;  exp1            1    5[BANK0 ] unsigned char 
  6762 ;;  cntr            1    4[BANK0 ] unsigned char 
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  4    0[COMMON] unsigned long 
  6765 ;; Registers used:
  6766 ;;		wreg, status,2, status,0
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6772 ;;      Params:         8       0       0       0       0
  6773 ;;      Locals:         0       6       0       0       0
  6774 ;;      Temps:          1       0       0       0       0
  6775 ;;      Totals:         9       6       0       0       0
  6776 ;;Total ram usage:       15 bytes
  6777 ;; Hardware stack levels used: 1
  6778 ;; This function calls:
  6779 ;;		Nothing
  6780 ;; This function is called by:
  6781 ;;		_sprintf
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785     0013                     __div_to_l_:	
  6786                           ;psect for function __div_to_l_
  6787                           
  6788     0013                     l3240:	
  6789                           ;incstack = 0
  6790                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6791                           
  6792     0013  1003               	clrc
  6793     0014  0D72               	rlf	__div_to_l_@f1+2,w
  6794     0015  0D73               	rlf	__div_to_l_@f1+3,w
  6795     0016  1283               	bcf	3,5	;RP0=0, select bank0
  6796     0017  1303               	bcf	3,6	;RP1=0, select bank0
  6797     0018  00A5               	movwf	__div_to_l_@exp1
  6798     0019  0825               	movf	__div_to_l_@exp1,w
  6799     001A  1D03               	btfss	3,2
  6800     001B  281D               	goto	u5071
  6801     001C  281E               	goto	u5070
  6802     001D                     u5071:
  6803     001D  2827               	goto	l3246
  6804     001E                     u5070:
  6805     001E                     l3242:
  6806     001E  3000               	movlw	0
  6807     001F  00F3               	movwf	?__div_to_l_+3
  6808     0020  3000               	movlw	0
  6809     0021  00F2               	movwf	?__div_to_l_+2
  6810     0022  3000               	movlw	0
  6811     0023  00F1               	movwf	?__div_to_l_+1
  6812     0024  3000               	movlw	0
  6813     0025  00F0               	movwf	?__div_to_l_
  6814     0026  28CA               	goto	l589
  6815     0027                     l3246:
  6816     0027  1003               	clrc
  6817     0028  0D76               	rlf	__div_to_l_@f2+2,w
  6818     0029  0D77               	rlf	__div_to_l_@f2+3,w
  6819     002A  00A4               	movwf	__div_to_l_@cntr
  6820     002B  0824               	movf	__div_to_l_@cntr,w
  6821     002C  1D03               	btfss	3,2
  6822     002D  282F               	goto	u5081
  6823     002E  2830               	goto	u5080
  6824     002F                     u5081:
  6825     002F  2831               	goto	l590
  6826     0030                     u5080:
  6827     0030  281E               	goto	l3242
  6828     0031                     l590:
  6829     0031  17F2               	bsf	__div_to_l_@f1+2,7
  6830     0032                     l3252:
  6831     0032  30FF               	movlw	255
  6832     0033  05F0               	andwf	__div_to_l_@f1,f
  6833     0034  30FF               	movlw	255
  6834     0035  05F1               	andwf	__div_to_l_@f1+1,f
  6835     0036  30FF               	movlw	255
  6836     0037  05F2               	andwf	__div_to_l_@f1+2,f
  6837     0038  3000               	movlw	0
  6838     0039  05F3               	andwf	__div_to_l_@f1+3,f
  6839     003A                     l3254:
  6840     003A  17F6               	bsf	__div_to_l_@f2+2,7
  6841     003B  30FF               	movlw	255
  6842     003C  05F4               	andwf	__div_to_l_@f2,f
  6843     003D  30FF               	movlw	255
  6844     003E  05F5               	andwf	__div_to_l_@f2+1,f
  6845     003F  30FF               	movlw	255
  6846     0040  05F6               	andwf	__div_to_l_@f2+2,f
  6847     0041  3000               	movlw	0
  6848     0042  05F7               	andwf	__div_to_l_@f2+3,f
  6849     0043  3000               	movlw	0
  6850     0044  00A3               	movwf	__div_to_l_@quot+3
  6851     0045  3000               	movlw	0
  6852     0046  00A2               	movwf	__div_to_l_@quot+2
  6853     0047  3000               	movlw	0
  6854     0048  00A1               	movwf	__div_to_l_@quot+1
  6855     0049  3000               	movlw	0
  6856     004A  00A0               	movwf	__div_to_l_@quot
  6857     004B                     l3256:
  6858     004B  307F               	movlw	127
  6859     004C  02A5               	subwf	__div_to_l_@exp1,f
  6860     004D                     l3258:
  6861     004D  30A0               	movlw	160
  6862     004E  0724               	addwf	__div_to_l_@cntr,w
  6863     004F  00F8               	movwf	??__div_to_l_
  6864     0050  0878               	movf	??__div_to_l_,w
  6865     0051  02A5               	subwf	__div_to_l_@exp1,f
  6866     0052  3020               	movlw	32
  6867     0053  00A4               	movwf	__div_to_l_@cntr
  6868     0054                     l3260:
  6869     0054  3001               	movlw	1
  6870     0055  00F8               	movwf	??__div_to_l_
  6871     0056                     u5095:
  6872     0056  1003               	clrc
  6873     0057  0DA0               	rlf	__div_to_l_@quot,f
  6874     0058  0DA1               	rlf	__div_to_l_@quot+1,f
  6875     0059  0DA2               	rlf	__div_to_l_@quot+2,f
  6876     005A  0DA3               	rlf	__div_to_l_@quot+3,f
  6877     005B  0BF8               	decfsz	??__div_to_l_,f
  6878     005C  2856               	goto	u5095
  6879     005D                     l3262:
  6880     005D  0877               	movf	__div_to_l_@f2+3,w
  6881     005E  0273               	subwf	__div_to_l_@f1+3,w
  6882     005F  1D03               	skipz
  6883     0060  286B               	goto	u5105
  6884     0061  0876               	movf	__div_to_l_@f2+2,w
  6885     0062  0272               	subwf	__div_to_l_@f1+2,w
  6886     0063  1D03               	skipz
  6887     0064  286B               	goto	u5105
  6888     0065  0875               	movf	__div_to_l_@f2+1,w
  6889     0066  0271               	subwf	__div_to_l_@f1+1,w
  6890     0067  1D03               	skipz
  6891     0068  286B               	goto	u5105
  6892     0069  0874               	movf	__div_to_l_@f2,w
  6893     006A  0270               	subwf	__div_to_l_@f1,w
  6894     006B                     u5105:
  6895     006B  1C03               	skipc
  6896     006C  286E               	goto	u5101
  6897     006D  286F               	goto	u5100
  6898     006E                     u5101:
  6899     006E  287E               	goto	l3268
  6900     006F                     u5100:
  6901     006F                     l3264:
  6902     006F  0874               	movf	__div_to_l_@f2,w
  6903     0070  02F0               	subwf	__div_to_l_@f1,f
  6904     0071  0875               	movf	__div_to_l_@f2+1,w
  6905     0072  1C03               	skipc
  6906     0073  0F75               	incfsz	__div_to_l_@f2+1,w
  6907     0074  02F1               	subwf	__div_to_l_@f1+1,f
  6908     0075  0876               	movf	__div_to_l_@f2+2,w
  6909     0076  1C03               	skipc
  6910     0077  0F76               	incfsz	__div_to_l_@f2+2,w
  6911     0078  02F2               	subwf	__div_to_l_@f1+2,f
  6912     0079  0877               	movf	__div_to_l_@f2+3,w
  6913     007A  1C03               	skipc
  6914     007B  0F77               	incfsz	__div_to_l_@f2+3,w
  6915     007C  02F3               	subwf	__div_to_l_@f1+3,f
  6916     007D                     l3266:
  6917     007D  1420               	bsf	__div_to_l_@quot,0
  6918     007E                     l3268:
  6919     007E  3001               	movlw	1
  6920     007F  00F8               	movwf	??__div_to_l_
  6921     0080                     u5115:
  6922     0080  1003               	clrc
  6923     0081  0DF0               	rlf	__div_to_l_@f1,f
  6924     0082  0DF1               	rlf	__div_to_l_@f1+1,f
  6925     0083  0DF2               	rlf	__div_to_l_@f1+2,f
  6926     0084  0DF3               	rlf	__div_to_l_@f1+3,f
  6927     0085  0BF8               	decfsz	??__div_to_l_,f
  6928     0086  2880               	goto	u5115
  6929     0087                     l3270:
  6930     0087  3001               	movlw	1
  6931     0088  02A4               	subwf	__div_to_l_@cntr,f
  6932     0089  1D03               	btfss	3,2
  6933     008A  288C               	goto	u5121
  6934     008B  288D               	goto	u5120
  6935     008C                     u5121:
  6936     008C  2854               	goto	l3260
  6937     008D                     u5120:
  6938     008D                     l593:
  6939     008D  1FA5               	btfss	__div_to_l_@exp1,7
  6940     008E  2890               	goto	u5131
  6941     008F  2891               	goto	u5130
  6942     0090                     u5131:
  6943     0090  28AB               	goto	l3280
  6944     0091                     u5130:
  6945     0091                     l3272:
  6946     0091  0825               	movf	__div_to_l_@exp1,w
  6947     0092  3A80               	xorlw	128
  6948     0093  3E9F               	addlw	159
  6949     0094  1803               	skipnc
  6950     0095  2897               	goto	u5141
  6951     0096  2898               	goto	u5140
  6952     0097                     u5141:
  6953     0097  2899               	goto	l3278
  6954     0098                     u5140:
  6955     0098  281E               	goto	l3242
  6956     0099                     l3278:
  6957     0099  3001               	movlw	1
  6958     009A                     u5155:
  6959     009A  1003               	clrc
  6960     009B  0CA3               	rrf	__div_to_l_@quot+3,f
  6961     009C  0CA2               	rrf	__div_to_l_@quot+2,f
  6962     009D  0CA1               	rrf	__div_to_l_@quot+1,f
  6963     009E  0CA0               	rrf	__div_to_l_@quot,f
  6964     009F  3EFF               	addlw	-1
  6965     00A0  1D03               	skipz
  6966     00A1  289A               	goto	u5155
  6967     00A2  3001               	movlw	1
  6968     00A3  00F8               	movwf	??__div_to_l_
  6969     00A4  0878               	movf	??__div_to_l_,w
  6970     00A5  07A5               	addwf	__div_to_l_@exp1,f
  6971     00A6  1D03               	btfss	3,2
  6972     00A7  28A9               	goto	u5161
  6973     00A8  28AA               	goto	u5160
  6974     00A9                     u5161:
  6975     00A9  2899               	goto	l3278
  6976     00AA                     u5160:
  6977     00AA  28C2               	goto	l3288
  6978     00AB                     l3280:
  6979     00AB  3020               	movlw	32
  6980     00AC  0225               	subwf	__div_to_l_@exp1,w
  6981     00AD  1C03               	skipc
  6982     00AE  28B0               	goto	u5171
  6983     00AF  28B1               	goto	u5170
  6984     00B0                     u5171:
  6985     00B0  28BD               	goto	l600
  6986     00B1                     u5170:
  6987     00B1  281E               	goto	l3242
  6988     00B2                     l3286:
  6989     00B2  3001               	movlw	1
  6990     00B3  00F8               	movwf	??__div_to_l_
  6991     00B4                     u5185:
  6992     00B4  1003               	clrc
  6993     00B5  0DA0               	rlf	__div_to_l_@quot,f
  6994     00B6  0DA1               	rlf	__div_to_l_@quot+1,f
  6995     00B7  0DA2               	rlf	__div_to_l_@quot+2,f
  6996     00B8  0DA3               	rlf	__div_to_l_@quot+3,f
  6997     00B9  0BF8               	decfsz	??__div_to_l_,f
  6998     00BA  28B4               	goto	u5185
  6999     00BB  3001               	movlw	1
  7000     00BC  02A5               	subwf	__div_to_l_@exp1,f
  7001     00BD                     l600:
  7002     00BD  0825               	movf	__div_to_l_@exp1,w
  7003     00BE  1D03               	btfss	3,2
  7004     00BF  28C1               	goto	u5191
  7005     00C0  28C2               	goto	u5190
  7006     00C1                     u5191:
  7007     00C1  28B2               	goto	l3286
  7008     00C2                     u5190:
  7009     00C2                     l3288:
  7010     00C2  0823               	movf	__div_to_l_@quot+3,w
  7011     00C3  00F3               	movwf	?__div_to_l_+3
  7012     00C4  0822               	movf	__div_to_l_@quot+2,w
  7013     00C5  00F2               	movwf	?__div_to_l_+2
  7014     00C6  0821               	movf	__div_to_l_@quot+1,w
  7015     00C7  00F1               	movwf	?__div_to_l_+1
  7016     00C8  0820               	movf	__div_to_l_@quot,w
  7017     00C9  00F0               	movwf	?__div_to_l_
  7018     00CA                     l589:
  7019     00CA  0008               	return
  7020     00CB                     __end_of__div_to_l_:
  7021                           
  7022                           	psect	text13
  7023     08A4                     __ptext13:	
  7024 ;; *************** function ___xxtofl *****************
  7025 ;; Defined at:
  7026 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  sign            1    wreg     unsigned char 
  7029 ;;  val             4    0[COMMON] long 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;  sign            1    8[COMMON] unsigned char 
  7032 ;;  arg             4   10[COMMON] unsigned long 
  7033 ;;  exp             1    9[COMMON] unsigned char 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  4    0[COMMON] unsigned char 
  7036 ;; Registers used:
  7037 ;;		wreg, status,2, status,0
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7043 ;;      Params:         4       0       0       0       0
  7044 ;;      Locals:         6       0       0       0       0
  7045 ;;      Temps:          4       0       0       0       0
  7046 ;;      Totals:        14       0       0       0       0
  7047 ;;Total ram usage:       14 bytes
  7048 ;; Hardware stack levels used: 1
  7049 ;; This function calls:
  7050 ;;		Nothing
  7051 ;; This function is called by:
  7052 ;;		_main
  7053 ;;		_sprintf
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057     08A4                     ___xxtofl:	
  7058                           ;psect for function ___xxtofl
  7059                           
  7060                           
  7061                           ;incstack = 0
  7062                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7063                           ;___xxtofl@sign stored from wreg
  7064     08A4  00F8               	movwf	___xxtofl@sign
  7065     08A5                     l3408:
  7066     08A5  0878               	movf	___xxtofl@sign,w
  7067     08A6  1903               	btfsc	3,2
  7068     08A7  28A9               	goto	u5511
  7069     08A8  28AA               	goto	u5510
  7070     08A9                     u5511:
  7071     08A9  28BE               	goto	l3414
  7072     08AA                     u5510:
  7073     08AA                     l3410:
  7074     08AA  1FF3               	btfss	___xxtofl@val+3,7
  7075     08AB  28AD               	goto	u5521
  7076     08AC  28AE               	goto	u5520
  7077     08AD                     u5521:
  7078     08AD  28BE               	goto	l3414
  7079     08AE                     u5520:
  7080     08AE                     l3412:
  7081     08AE  0970               	comf	___xxtofl@val,w
  7082     08AF  00FA               	movwf	___xxtofl@arg
  7083     08B0  0971               	comf	___xxtofl@val+1,w
  7084     08B1  00FB               	movwf	___xxtofl@arg+1
  7085     08B2  0972               	comf	___xxtofl@val+2,w
  7086     08B3  00FC               	movwf	___xxtofl@arg+2
  7087     08B4  0973               	comf	___xxtofl@val+3,w
  7088     08B5  00FD               	movwf	___xxtofl@arg+3
  7089     08B6  0AFA               	incf	___xxtofl@arg,f
  7090     08B7  1903               	skipnz
  7091     08B8  0AFB               	incf	___xxtofl@arg+1,f
  7092     08B9  1903               	skipnz
  7093     08BA  0AFC               	incf	___xxtofl@arg+2,f
  7094     08BB  1903               	skipnz
  7095     08BC  0AFD               	incf	___xxtofl@arg+3,f
  7096     08BD  28C6               	goto	l886
  7097     08BE                     l3414:
  7098     08BE  0873               	movf	___xxtofl@val+3,w
  7099     08BF  00FD               	movwf	___xxtofl@arg+3
  7100     08C0  0872               	movf	___xxtofl@val+2,w
  7101     08C1  00FC               	movwf	___xxtofl@arg+2
  7102     08C2  0871               	movf	___xxtofl@val+1,w
  7103     08C3  00FB               	movwf	___xxtofl@arg+1
  7104     08C4  0870               	movf	___xxtofl@val,w
  7105     08C5  00FA               	movwf	___xxtofl@arg
  7106     08C6                     l886:
  7107     08C6  0873               	movf	___xxtofl@val+3,w
  7108     08C7  0472               	iorwf	___xxtofl@val+2,w
  7109     08C8  0471               	iorwf	___xxtofl@val+1,w
  7110     08C9  0470               	iorwf	___xxtofl@val,w
  7111     08CA  1D03               	skipz
  7112     08CB  28CD               	goto	u5531
  7113     08CC  28CE               	goto	u5530
  7114     08CD                     u5531:
  7115     08CD  28D7               	goto	l3420
  7116     08CE                     u5530:
  7117     08CE                     l3416:
  7118     08CE  3000               	movlw	0
  7119     08CF  00F3               	movwf	?___xxtofl+3
  7120     08D0  3000               	movlw	0
  7121     08D1  00F2               	movwf	?___xxtofl+2
  7122     08D2  3000               	movlw	0
  7123     08D3  00F1               	movwf	?___xxtofl+1
  7124     08D4  3000               	movlw	0
  7125     08D5  00F0               	movwf	?___xxtofl
  7126     08D6  295B               	goto	l888
  7127     08D7                     l3420:
  7128     08D7  3096               	movlw	150
  7129     08D8  00F9               	movwf	___xxtofl@exp
  7130     08D9  28E7               	goto	l3424
  7131     08DA                     l3422:
  7132     08DA  3001               	movlw	1
  7133     08DB  00F4               	movwf	??___xxtofl
  7134     08DC  0874               	movf	??___xxtofl,w
  7135     08DD  07F9               	addwf	___xxtofl@exp,f
  7136     08DE  3001               	movlw	1
  7137     08DF                     u5545:
  7138     08DF  1003               	clrc
  7139     08E0  0CFD               	rrf	___xxtofl@arg+3,f
  7140     08E1  0CFC               	rrf	___xxtofl@arg+2,f
  7141     08E2  0CFB               	rrf	___xxtofl@arg+1,f
  7142     08E3  0CFA               	rrf	___xxtofl@arg,f
  7143     08E4  3EFF               	addlw	-1
  7144     08E5  1D03               	skipz
  7145     08E6  28DF               	goto	u5545
  7146     08E7                     l3424:
  7147     08E7  30FE               	movlw	254
  7148     08E8  057D               	andwf	___xxtofl@arg+3,w
  7149     08E9  1D03               	btfss	3,2
  7150     08EA  28EC               	goto	u5551
  7151     08EB  28ED               	goto	u5550
  7152     08EC                     u5551:
  7153     08EC  28DA               	goto	l3422
  7154     08ED                     u5550:
  7155     08ED  2909               	goto	l892
  7156     08EE                     l3426:
  7157     08EE  3001               	movlw	1
  7158     08EF  00F4               	movwf	??___xxtofl
  7159     08F0  0874               	movf	??___xxtofl,w
  7160     08F1  07F9               	addwf	___xxtofl@exp,f
  7161     08F2                     l3428:
  7162     08F2  3001               	movlw	1
  7163     08F3  07FA               	addwf	___xxtofl@arg,f
  7164     08F4  3000               	movlw	0
  7165     08F5  1803               	skipnc
  7166     08F6  3001               	movlw	1
  7167     08F7  07FB               	addwf	___xxtofl@arg+1,f
  7168     08F8  3000               	movlw	0
  7169     08F9  1803               	skipnc
  7170     08FA  3001               	movlw	1
  7171     08FB  07FC               	addwf	___xxtofl@arg+2,f
  7172     08FC  3000               	movlw	0
  7173     08FD  1803               	skipnc
  7174     08FE  3001               	movlw	1
  7175     08FF  07FD               	addwf	___xxtofl@arg+3,f
  7176     0900                     l3430:
  7177     0900  3001               	movlw	1
  7178     0901                     u5565:
  7179     0901  1003               	clrc
  7180     0902  0CFD               	rrf	___xxtofl@arg+3,f
  7181     0903  0CFC               	rrf	___xxtofl@arg+2,f
  7182     0904  0CFB               	rrf	___xxtofl@arg+1,f
  7183     0905  0CFA               	rrf	___xxtofl@arg,f
  7184     0906  3EFF               	addlw	-1
  7185     0907  1D03               	skipz
  7186     0908  2901               	goto	u5565
  7187     0909                     l892:
  7188     0909  30FF               	movlw	255
  7189     090A  057D               	andwf	___xxtofl@arg+3,w
  7190     090B  1D03               	btfss	3,2
  7191     090C  290E               	goto	u5571
  7192     090D  290F               	goto	u5570
  7193     090E                     u5571:
  7194     090E  28EE               	goto	l3426
  7195     090F                     u5570:
  7196     090F  291B               	goto	l3434
  7197     0910                     l3432:
  7198     0910  3001               	movlw	1
  7199     0911  02F9               	subwf	___xxtofl@exp,f
  7200     0912  3001               	movlw	1
  7201     0913  00F4               	movwf	??___xxtofl
  7202     0914                     u5585:
  7203     0914  1003               	clrc
  7204     0915  0DFA               	rlf	___xxtofl@arg,f
  7205     0916  0DFB               	rlf	___xxtofl@arg+1,f
  7206     0917  0DFC               	rlf	___xxtofl@arg+2,f
  7207     0918  0DFD               	rlf	___xxtofl@arg+3,f
  7208     0919  0BF4               	decfsz	??___xxtofl,f
  7209     091A  2914               	goto	u5585
  7210     091B                     l3434:
  7211     091B  1BFC               	btfsc	___xxtofl@arg+2,7
  7212     091C  291E               	goto	u5591
  7213     091D  291F               	goto	u5590
  7214     091E                     u5591:
  7215     091E  2925               	goto	l899
  7216     091F                     u5590:
  7217     091F                     l3436:
  7218     091F  3002               	movlw	2
  7219     0920  0279               	subwf	___xxtofl@exp,w
  7220     0921  1803               	skipnc
  7221     0922  2924               	goto	u5601
  7222     0923  2925               	goto	u5600
  7223     0924                     u5601:
  7224     0924  2910               	goto	l3432
  7225     0925                     u5600:
  7226     0925                     l899:
  7227     0925  1879               	btfsc	___xxtofl@exp,0
  7228     0926  2928               	goto	u5611
  7229     0927  2929               	goto	u5610
  7230     0928                     u5611:
  7231     0928  2931               	goto	l900
  7232     0929                     u5610:
  7233     0929                     l3438:
  7234     0929  30FF               	movlw	255
  7235     092A  05FA               	andwf	___xxtofl@arg,f
  7236     092B  30FF               	movlw	255
  7237     092C  05FB               	andwf	___xxtofl@arg+1,f
  7238     092D  307F               	movlw	127
  7239     092E  05FC               	andwf	___xxtofl@arg+2,f
  7240     092F  30FF               	movlw	255
  7241     0930  05FD               	andwf	___xxtofl@arg+3,f
  7242     0931                     l900:
  7243     0931  1003               	clrc
  7244     0932  0CF9               	rrf	___xxtofl@exp,f
  7245     0933                     l3440:
  7246     0933  0879               	movf	___xxtofl@exp,w
  7247     0934  00F4               	movwf	??___xxtofl
  7248     0935  01F5               	clrf	??___xxtofl+1
  7249     0936  01F6               	clrf	??___xxtofl+2
  7250     0937  01F7               	clrf	??___xxtofl+3
  7251     0938  3018               	movlw	24
  7252     0939                     u5625:
  7253     0939  1003               	clrc
  7254     093A  0DF4               	rlf	??___xxtofl,f
  7255     093B  0DF5               	rlf	??___xxtofl+1,f
  7256     093C  0DF6               	rlf	??___xxtofl+2,f
  7257     093D  0DF7               	rlf	??___xxtofl+3,f
  7258     093E                     u5620:
  7259     093E  3EFF               	addlw	-1
  7260     093F  1D03               	skipz
  7261     0940  2939               	goto	u5625
  7262     0941  0874               	movf	??___xxtofl,w
  7263     0942  04FA               	iorwf	___xxtofl@arg,f
  7264     0943  0875               	movf	??___xxtofl+1,w
  7265     0944  04FB               	iorwf	___xxtofl@arg+1,f
  7266     0945  0876               	movf	??___xxtofl+2,w
  7267     0946  04FC               	iorwf	___xxtofl@arg+2,f
  7268     0947  0877               	movf	??___xxtofl+3,w
  7269     0948  04FD               	iorwf	___xxtofl@arg+3,f
  7270     0949                     l3442:
  7271     0949  0878               	movf	___xxtofl@sign,w
  7272     094A  1903               	btfsc	3,2
  7273     094B  294D               	goto	u5631
  7274     094C  294E               	goto	u5630
  7275     094D                     u5631:
  7276     094D  2953               	goto	l3448
  7277     094E                     u5630:
  7278     094E                     l3444:
  7279     094E  1FF3               	btfss	___xxtofl@val+3,7
  7280     094F  2951               	goto	u5641
  7281     0950  2952               	goto	u5640
  7282     0951                     u5641:
  7283     0951  2953               	goto	l3448
  7284     0952                     u5640:
  7285     0952                     l3446:
  7286     0952  17FD               	bsf	___xxtofl@arg+3,7
  7287     0953                     l3448:
  7288     0953  087D               	movf	___xxtofl@arg+3,w
  7289     0954  00F3               	movwf	?___xxtofl+3
  7290     0955  087C               	movf	___xxtofl@arg+2,w
  7291     0956  00F2               	movwf	?___xxtofl+2
  7292     0957  087B               	movf	___xxtofl@arg+1,w
  7293     0958  00F1               	movwf	?___xxtofl+1
  7294     0959  087A               	movf	___xxtofl@arg,w
  7295     095A  00F0               	movwf	?___xxtofl
  7296     095B                     l888:
  7297     095B  0008               	return
  7298     095C                     __end_of___xxtofl:
  7299                           
  7300                           	psect	text14
  7301     1B76                     __ptext14:	
  7302 ;; *************** function ___wmul *****************
  7303 ;; Defined at:
  7304 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  multiplier      2    0[COMMON] unsigned int 
  7307 ;;  multiplicand    2    2[COMMON] unsigned int 
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;  product         2    4[COMMON] unsigned int 
  7310 ;; Return value:  Size  Location     Type
  7311 ;;                  2    0[COMMON] unsigned int 
  7312 ;; Registers used:
  7313 ;;		wreg, status,2, status,0
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7319 ;;      Params:         4       0       0       0       0
  7320 ;;      Locals:         2       0       0       0       0
  7321 ;;      Temps:          0       0       0       0       0
  7322 ;;      Totals:         6       0       0       0       0
  7323 ;;Total ram usage:        6 bytes
  7324 ;; Hardware stack levels used: 1
  7325 ;; This function calls:
  7326 ;;		Nothing
  7327 ;; This function is called by:
  7328 ;;		_sprintf
  7329 ;;		_convint
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333     1B76                     ___wmul:	
  7334                           ;psect for function ___wmul
  7335                           
  7336     1B76                     l3292:	
  7337                           ;incstack = 0
  7338                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7339                           
  7340     1B76  01F4               	clrf	___wmul@product
  7341     1B77  01F5               	clrf	___wmul@product+1
  7342     1B78                     l3294:
  7343     1B78  1C70               	btfss	___wmul@multiplier,0
  7344     1B79  2B7B               	goto	u5201
  7345     1B7A  2B7C               	goto	u5200
  7346     1B7B                     u5201:
  7347     1B7B  2B82               	goto	l419
  7348     1B7C                     u5200:
  7349     1B7C                     l3296:
  7350     1B7C  0872               	movf	___wmul@multiplicand,w
  7351     1B7D  07F4               	addwf	___wmul@product,f
  7352     1B7E  1803               	skipnc
  7353     1B7F  0AF5               	incf	___wmul@product+1,f
  7354     1B80  0873               	movf	___wmul@multiplicand+1,w
  7355     1B81  07F5               	addwf	___wmul@product+1,f
  7356     1B82                     l419:
  7357     1B82  3001               	movlw	1
  7358     1B83                     u5215:
  7359     1B83  1003               	clrc
  7360     1B84  0DF2               	rlf	___wmul@multiplicand,f
  7361     1B85  0DF3               	rlf	___wmul@multiplicand+1,f
  7362     1B86  3EFF               	addlw	-1
  7363     1B87  1D03               	skipz
  7364     1B88  2B83               	goto	u5215
  7365     1B89                     l3298:
  7366     1B89  3001               	movlw	1
  7367     1B8A                     u5225:
  7368     1B8A  1003               	clrc
  7369     1B8B  0CF1               	rrf	___wmul@multiplier+1,f
  7370     1B8C  0CF0               	rrf	___wmul@multiplier,f
  7371     1B8D  3EFF               	addlw	-1
  7372     1B8E  1D03               	skipz
  7373     1B8F  2B8A               	goto	u5225
  7374     1B90                     l3300:
  7375     1B90  0870               	movf	___wmul@multiplier,w
  7376     1B91  0471               	iorwf	___wmul@multiplier+1,w
  7377     1B92  1D03               	btfss	3,2
  7378     1B93  2B95               	goto	u5231
  7379     1B94  2B96               	goto	u5230
  7380     1B95                     u5231:
  7381     1B95  2B78               	goto	l3294
  7382     1B96                     u5230:
  7383     1B96                     l3302:
  7384     1B96  0875               	movf	___wmul@product+1,w
  7385     1B97  00F1               	movwf	?___wmul+1
  7386     1B98  0874               	movf	___wmul@product,w
  7387     1B99  00F0               	movwf	?___wmul
  7388     1B9A                     l421:
  7389     1B9A  0008               	return
  7390     1B9B                     __end_of___wmul:
  7391                           
  7392                           	psect	text15
  7393     1DAF                     __ptext15:	
  7394 ;; *************** function ___llmod *****************
  7395 ;; Defined at:
  7396 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;  divisor         4    0[COMMON] unsigned long 
  7399 ;;  dividend        4    4[COMMON] unsigned long 
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;  counter         1    9[COMMON] unsigned char 
  7402 ;; Return value:  Size  Location     Type
  7403 ;;                  4    0[COMMON] unsigned long 
  7404 ;; Registers used:
  7405 ;;		wreg, status,2, status,0
  7406 ;; Tracked objects:
  7407 ;;		On entry : 0/0
  7408 ;;		On exit  : 0/0
  7409 ;;		Unchanged: 0/0
  7410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7411 ;;      Params:         8       0       0       0       0
  7412 ;;      Locals:         1       0       0       0       0
  7413 ;;      Temps:          1       0       0       0       0
  7414 ;;      Totals:        10       0       0       0       0
  7415 ;;Total ram usage:       10 bytes
  7416 ;; Hardware stack levels used: 1
  7417 ;; This function calls:
  7418 ;;		Nothing
  7419 ;; This function is called by:
  7420 ;;		_sprintf
  7421 ;; This function uses a non-reentrant model
  7422 ;;
  7423                           
  7424     1DAF                     ___llmod:	
  7425                           ;psect for function ___llmod
  7426                           
  7427     1DAF                     l3382:	
  7428                           ;incstack = 0
  7429                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7430                           
  7431     1DAF  0873               	movf	___llmod@divisor+3,w
  7432     1DB0  0472               	iorwf	___llmod@divisor+2,w
  7433     1DB1  0471               	iorwf	___llmod@divisor+1,w
  7434     1DB2  0470               	iorwf	___llmod@divisor,w
  7435     1DB3  1903               	skipnz
  7436     1DB4  2DB6               	goto	u5451
  7437     1DB5  2DB7               	goto	u5450
  7438     1DB6                     u5451:
  7439     1DB6  2DFA               	goto	l3398
  7440     1DB7                     u5450:
  7441     1DB7                     l3384:
  7442     1DB7  01F9               	clrf	___llmod@counter
  7443     1DB8  0AF9               	incf	___llmod@counter,f
  7444     1DB9  2DC7               	goto	l3388
  7445     1DBA                     l3386:
  7446     1DBA  3001               	movlw	1
  7447     1DBB  00F8               	movwf	??___llmod
  7448     1DBC                     u5465:
  7449     1DBC  1003               	clrc
  7450     1DBD  0DF0               	rlf	___llmod@divisor,f
  7451     1DBE  0DF1               	rlf	___llmod@divisor+1,f
  7452     1DBF  0DF2               	rlf	___llmod@divisor+2,f
  7453     1DC0  0DF3               	rlf	___llmod@divisor+3,f
  7454     1DC1  0BF8               	decfsz	??___llmod,f
  7455     1DC2  2DBC               	goto	u5465
  7456     1DC3  3001               	movlw	1
  7457     1DC4  00F8               	movwf	??___llmod
  7458     1DC5  0878               	movf	??___llmod,w
  7459     1DC6  07F9               	addwf	___llmod@counter,f
  7460     1DC7                     l3388:
  7461     1DC7  1FF3               	btfss	___llmod@divisor+3,7
  7462     1DC8  2DCA               	goto	u5471
  7463     1DC9  2DCB               	goto	u5470
  7464     1DCA                     u5471:
  7465     1DCA  2DBA               	goto	l3386
  7466     1DCB                     u5470:
  7467     1DCB                     l3390:
  7468     1DCB  0873               	movf	___llmod@divisor+3,w
  7469     1DCC  0277               	subwf	___llmod@dividend+3,w
  7470     1DCD  1D03               	skipz
  7471     1DCE  2DD9               	goto	u5485
  7472     1DCF  0872               	movf	___llmod@divisor+2,w
  7473     1DD0  0276               	subwf	___llmod@dividend+2,w
  7474     1DD1  1D03               	skipz
  7475     1DD2  2DD9               	goto	u5485
  7476     1DD3  0871               	movf	___llmod@divisor+1,w
  7477     1DD4  0275               	subwf	___llmod@dividend+1,w
  7478     1DD5  1D03               	skipz
  7479     1DD6  2DD9               	goto	u5485
  7480     1DD7  0870               	movf	___llmod@divisor,w
  7481     1DD8  0274               	subwf	___llmod@dividend,w
  7482     1DD9                     u5485:
  7483     1DD9  1C03               	skipc
  7484     1DDA  2DDC               	goto	u5481
  7485     1DDB  2DDD               	goto	u5480
  7486     1DDC                     u5481:
  7487     1DDC  2DEB               	goto	l3394
  7488     1DDD                     u5480:
  7489     1DDD                     l3392:
  7490     1DDD  0870               	movf	___llmod@divisor,w
  7491     1DDE  02F4               	subwf	___llmod@dividend,f
  7492     1DDF  0871               	movf	___llmod@divisor+1,w
  7493     1DE0  1C03               	skipc
  7494     1DE1  0F71               	incfsz	___llmod@divisor+1,w
  7495     1DE2  02F5               	subwf	___llmod@dividend+1,f
  7496     1DE3  0872               	movf	___llmod@divisor+2,w
  7497     1DE4  1C03               	skipc
  7498     1DE5  0F72               	incfsz	___llmod@divisor+2,w
  7499     1DE6  02F6               	subwf	___llmod@dividend+2,f
  7500     1DE7  0873               	movf	___llmod@divisor+3,w
  7501     1DE8  1C03               	skipc
  7502     1DE9  0F73               	incfsz	___llmod@divisor+3,w
  7503     1DEA  02F7               	subwf	___llmod@dividend+3,f
  7504     1DEB                     l3394:
  7505     1DEB  3001               	movlw	1
  7506     1DEC                     u5495:
  7507     1DEC  1003               	clrc
  7508     1DED  0CF3               	rrf	___llmod@divisor+3,f
  7509     1DEE  0CF2               	rrf	___llmod@divisor+2,f
  7510     1DEF  0CF1               	rrf	___llmod@divisor+1,f
  7511     1DF0  0CF0               	rrf	___llmod@divisor,f
  7512     1DF1  3EFF               	addlw	-1
  7513     1DF2  1D03               	skipz
  7514     1DF3  2DEC               	goto	u5495
  7515     1DF4                     l3396:
  7516     1DF4  3001               	movlw	1
  7517     1DF5  02F9               	subwf	___llmod@counter,f
  7518     1DF6  1D03               	btfss	3,2
  7519     1DF7  2DF9               	goto	u5501
  7520     1DF8  2DFA               	goto	u5500
  7521     1DF9                     u5501:
  7522     1DF9  2DCB               	goto	l3390
  7523     1DFA                     u5500:
  7524     1DFA                     l3398:
  7525     1DFA  0877               	movf	___llmod@dividend+3,w
  7526     1DFB  00F3               	movwf	?___llmod+3
  7527     1DFC  0876               	movf	___llmod@dividend+2,w
  7528     1DFD  00F2               	movwf	?___llmod+2
  7529     1DFE  0875               	movf	___llmod@dividend+1,w
  7530     1DFF  00F1               	movwf	?___llmod+1
  7531     1E00  0874               	movf	___llmod@dividend,w
  7532     1E01  00F0               	movwf	?___llmod
  7533     1E02                     l675:
  7534     1E02  0008               	return
  7535     1E03                     __end_of___llmod:
  7536                           
  7537                           	psect	text16
  7538     1F88                     __ptext16:	
  7539 ;; *************** function ___fltol *****************
  7540 ;; Defined at:
  7541 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;  f1              4   49[BANK0 ] unsigned long 
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;  exp1            1   58[BANK0 ] unsigned char 
  7546 ;;  sign1           1   57[BANK0 ] unsigned char 
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  4   49[BANK0 ] long 
  7549 ;; Registers used:
  7550 ;;		wreg, status,2, status,0
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7556 ;;      Params:         0       4       0       0       0
  7557 ;;      Locals:         0       2       0       0       0
  7558 ;;      Temps:          0       4       0       0       0
  7559 ;;      Totals:         0      10       0       0       0
  7560 ;;Total ram usage:       10 bytes
  7561 ;; Hardware stack levels used: 1
  7562 ;; This function calls:
  7563 ;;		Nothing
  7564 ;; This function is called by:
  7565 ;;		_sprintf
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569     1F88                     ___fltol:	
  7570                           ;psect for function ___fltol
  7571                           
  7572     1F88                     l3346:	
  7573                           ;incstack = 0
  7574                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7575                           
  7576     1F88  1003               	clrc
  7577     1F89  1283               	bcf	3,5	;RP0=0, select bank0
  7578     1F8A  1303               	bcf	3,6	;RP1=0, select bank0
  7579     1F8B  0D53               	rlf	___fltol@f1+2,w
  7580     1F8C  0D54               	rlf	___fltol@f1+3,w
  7581     1F8D  00DA               	movwf	___fltol@exp1
  7582     1F8E  085A               	movf	___fltol@exp1,w
  7583     1F8F  1D03               	btfss	3,2
  7584     1F90  2F92               	goto	u5351
  7585     1F91  2F93               	goto	u5350
  7586     1F92                     u5351:
  7587     1F92  2F9C               	goto	l3352
  7588     1F93                     u5350:
  7589     1F93                     l3348:
  7590     1F93  3000               	movlw	0
  7591     1F94  00D4               	movwf	?___fltol+3
  7592     1F95  3000               	movlw	0
  7593     1F96  00D3               	movwf	?___fltol+2
  7594     1F97  3000               	movlw	0
  7595     1F98  00D2               	movwf	?___fltol+1
  7596     1F99  3000               	movlw	0
  7597     1F9A  00D1               	movwf	?___fltol
  7598     1F9B  2FFF               	goto	l622
  7599     1F9C                     l3352:
  7600     1F9C  0851               	movf	___fltol@f1,w
  7601     1F9D  00D5               	movwf	??___fltol
  7602     1F9E  0852               	movf	___fltol@f1+1,w
  7603     1F9F  00D6               	movwf	??___fltol+1
  7604     1FA0  0853               	movf	___fltol@f1+2,w
  7605     1FA1  00D7               	movwf	??___fltol+2
  7606     1FA2  0854               	movf	___fltol@f1+3,w
  7607     1FA3  00D8               	movwf	??___fltol+3
  7608     1FA4  301F               	movlw	31
  7609     1FA5                     u5365:
  7610     1FA5  1003               	clrc
  7611     1FA6  0CD8               	rrf	??___fltol+3,f
  7612     1FA7  0CD7               	rrf	??___fltol+2,f
  7613     1FA8  0CD6               	rrf	??___fltol+1,f
  7614     1FA9  0CD5               	rrf	??___fltol,f
  7615     1FAA                     u5360:
  7616     1FAA  3EFF               	addlw	-1
  7617     1FAB  1D03               	skipz
  7618     1FAC  2FA5               	goto	u5365
  7619     1FAD  0855               	movf	??___fltol,w
  7620     1FAE  00D9               	movwf	___fltol@sign1
  7621     1FAF                     l3354:
  7622     1FAF  17D3               	bsf	___fltol@f1+2,7
  7623     1FB0                     l3356:
  7624     1FB0  30FF               	movlw	255
  7625     1FB1  05D1               	andwf	___fltol@f1,f
  7626     1FB2  30FF               	movlw	255
  7627     1FB3  05D2               	andwf	___fltol@f1+1,f
  7628     1FB4  30FF               	movlw	255
  7629     1FB5  05D3               	andwf	___fltol@f1+2,f
  7630     1FB6  3000               	movlw	0
  7631     1FB7  05D4               	andwf	___fltol@f1+3,f
  7632     1FB8                     l3358:
  7633     1FB8  3096               	movlw	150
  7634     1FB9  02DA               	subwf	___fltol@exp1,f
  7635     1FBA                     l3360:
  7636     1FBA  1FDA               	btfss	___fltol@exp1,7
  7637     1FBB  2FBD               	goto	u5371
  7638     1FBC  2FBE               	goto	u5370
  7639     1FBD                     u5371:
  7640     1FBD  2FD8               	goto	l3370
  7641     1FBE                     u5370:
  7642     1FBE                     l3362:
  7643     1FBE  085A               	movf	___fltol@exp1,w
  7644     1FBF  3A80               	xorlw	128
  7645     1FC0  3E97               	addlw	151
  7646     1FC1  1803               	skipnc
  7647     1FC2  2FC4               	goto	u5381
  7648     1FC3  2FC5               	goto	u5380
  7649     1FC4                     u5381:
  7650     1FC4  2FC6               	goto	l3368
  7651     1FC5                     u5380:
  7652     1FC5  2F93               	goto	l3348
  7653     1FC6                     l3368:
  7654     1FC6  3001               	movlw	1
  7655     1FC7                     u5395:
  7656     1FC7  1003               	clrc
  7657     1FC8  0CD4               	rrf	___fltol@f1+3,f
  7658     1FC9  0CD3               	rrf	___fltol@f1+2,f
  7659     1FCA  0CD2               	rrf	___fltol@f1+1,f
  7660     1FCB  0CD1               	rrf	___fltol@f1,f
  7661     1FCC  3EFF               	addlw	-1
  7662     1FCD  1D03               	skipz
  7663     1FCE  2FC7               	goto	u5395
  7664     1FCF  3001               	movlw	1
  7665     1FD0  00D5               	movwf	??___fltol
  7666     1FD1  0855               	movf	??___fltol,w
  7667     1FD2  07DA               	addwf	___fltol@exp1,f
  7668     1FD3  1D03               	btfss	3,2
  7669     1FD4  2FD6               	goto	u5401
  7670     1FD5  2FD7               	goto	u5400
  7671     1FD6                     u5401:
  7672     1FD6  2FC6               	goto	l3368
  7673     1FD7                     u5400:
  7674     1FD7  2FEF               	goto	l3378
  7675     1FD8                     l3370:
  7676     1FD8  3020               	movlw	32
  7677     1FD9  025A               	subwf	___fltol@exp1,w
  7678     1FDA  1C03               	skipc
  7679     1FDB  2FDD               	goto	u5411
  7680     1FDC  2FDE               	goto	u5410
  7681     1FDD                     u5411:
  7682     1FDD  2FEA               	goto	l629
  7683     1FDE                     u5410:
  7684     1FDE  2F93               	goto	l3348
  7685     1FDF                     l3376:
  7686     1FDF  3001               	movlw	1
  7687     1FE0  00D5               	movwf	??___fltol
  7688     1FE1                     u5425:
  7689     1FE1  1003               	clrc
  7690     1FE2  0DD1               	rlf	___fltol@f1,f
  7691     1FE3  0DD2               	rlf	___fltol@f1+1,f
  7692     1FE4  0DD3               	rlf	___fltol@f1+2,f
  7693     1FE5  0DD4               	rlf	___fltol@f1+3,f
  7694     1FE6  0BD5               	decfsz	??___fltol,f
  7695     1FE7  2FE1               	goto	u5425
  7696     1FE8  3001               	movlw	1
  7697     1FE9  02DA               	subwf	___fltol@exp1,f
  7698     1FEA                     l629:
  7699     1FEA  085A               	movf	___fltol@exp1,w
  7700     1FEB  1D03               	btfss	3,2
  7701     1FEC  2FEE               	goto	u5431
  7702     1FED  2FEF               	goto	u5430
  7703     1FEE                     u5431:
  7704     1FEE  2FDF               	goto	l3376
  7705     1FEF                     u5430:
  7706     1FEF                     l3378:
  7707     1FEF  0859               	movf	___fltol@sign1,w
  7708     1FF0  1903               	btfsc	3,2
  7709     1FF1  2FF3               	goto	u5441
  7710     1FF2  2FF4               	goto	u5440
  7711     1FF3                     u5441:
  7712     1FF3  2FFF               	goto	l632
  7713     1FF4                     u5440:
  7714     1FF4                     l3380:
  7715     1FF4  09D1               	comf	___fltol@f1,f
  7716     1FF5  09D2               	comf	___fltol@f1+1,f
  7717     1FF6  09D3               	comf	___fltol@f1+2,f
  7718     1FF7  09D4               	comf	___fltol@f1+3,f
  7719     1FF8  0AD1               	incf	___fltol@f1,f
  7720     1FF9  1903               	skipnz
  7721     1FFA  0AD2               	incf	___fltol@f1+1,f
  7722     1FFB  1903               	skipnz
  7723     1FFC  0AD3               	incf	___fltol@f1+2,f
  7724     1FFD  1903               	skipnz
  7725     1FFE  0AD4               	incf	___fltol@f1+3,f
  7726     1FFF                     l632:
  7727     1FFF                     l622:
  7728     1FFF  0008               	return
  7729     2000                     __end_of___fltol:
  7730                           
  7731                           	psect	text17
  7732     1B52                     __ptext17:	
  7733 ;; *************** function ___flsub *****************
  7734 ;; Defined at:
  7735 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  a               4   70[BANK0 ] long 
  7738 ;;  b               4   74[BANK0 ] long 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;		None
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  4   70[BANK0 ] long 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7750 ;;      Params:         0       8       0       0       0
  7751 ;;      Locals:         0       0       0       0       0
  7752 ;;      Temps:          0       0       0       0       0
  7753 ;;      Totals:         0       8       0       0       0
  7754 ;;Total ram usage:        8 bytes
  7755 ;; Hardware stack levels used: 1
  7756 ;; Hardware stack levels required when called: 1
  7757 ;; This function calls:
  7758 ;;		___fladd
  7759 ;; This function is called by:
  7760 ;;		_sprintf
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764     1B52                     ___flsub:	
  7765                           ;psect for function ___flsub
  7766                           
  7767     1B52                     l3402:	
  7768                           ;incstack = 0
  7769                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7770                           
  7771     1B52  3080               	movlw	128
  7772     1B53  1283               	bcf	3,5	;RP0=0, select bank0
  7773     1B54  1303               	bcf	3,6	;RP1=0, select bank0
  7774     1B55  06E9               	xorwf	___flsub@a+3,f
  7775     1B56                     l3404:
  7776     1B56  086D               	movf	___flsub@b+3,w
  7777     1B57  00D5               	movwf	___fladd@b+3
  7778     1B58  086C               	movf	___flsub@b+2,w
  7779     1B59  00D4               	movwf	___fladd@b+2
  7780     1B5A  086B               	movf	___flsub@b+1,w
  7781     1B5B  00D3               	movwf	___fladd@b+1
  7782     1B5C  086A               	movf	___flsub@b,w
  7783     1B5D  00D2               	movwf	___fladd@b
  7784     1B5E  0869               	movf	___flsub@a+3,w
  7785     1B5F  00D9               	movwf	___fladd@a+3
  7786     1B60  0868               	movf	___flsub@a+2,w
  7787     1B61  00D8               	movwf	___fladd@a+2
  7788     1B62  0867               	movf	___flsub@a+1,w
  7789     1B63  00D7               	movwf	___fladd@a+1
  7790     1B64  0866               	movf	___flsub@a,w
  7791     1B65  00D6               	movwf	___fladd@a
  7792     1B66  160A  118A  25A8  160A  158A  	fcall	___fladd
  7793     1B6B  1283               	bcf	3,5	;RP0=0, select bank0
  7794     1B6C  1303               	bcf	3,6	;RP1=0, select bank0
  7795     1B6D  0855               	movf	?___fladd+3,w
  7796     1B6E  00E9               	movwf	?___flsub+3
  7797     1B6F  0854               	movf	?___fladd+2,w
  7798     1B70  00E8               	movwf	?___flsub+2
  7799     1B71  0853               	movf	?___fladd+1,w
  7800     1B72  00E7               	movwf	?___flsub+1
  7801     1B73  0852               	movf	?___fladd,w
  7802     1B74  00E6               	movwf	?___flsub
  7803     1B75                     l792:
  7804     1B75  0008               	return
  7805     1B76                     __end_of___flsub:
  7806                           
  7807                           	psect	text18
  7808     15A8                     __ptext18:	
  7809 ;; *************** function ___fladd *****************
  7810 ;; Defined at:
  7811 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;  b               4   50[BANK0 ] long 
  7814 ;;  a               4   54[BANK0 ] long 
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;  grs             1   69[BANK0 ] unsigned char 
  7817 ;;  bexp            1   68[BANK0 ] unsigned char 
  7818 ;;  aexp            1   67[BANK0 ] unsigned char 
  7819 ;;  signs           1   66[BANK0 ] unsigned char 
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  4   50[BANK0 ] unsigned char 
  7822 ;; Registers used:
  7823 ;;		wreg, status,2, status,0, btemp+1
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7829 ;;      Params:         0       8       0       0       0
  7830 ;;      Locals:         0       4       0       0       0
  7831 ;;      Temps:          0       8       0       0       0
  7832 ;;      Totals:         0      20       0       0       0
  7833 ;;Total ram usage:       20 bytes
  7834 ;; Hardware stack levels used: 1
  7835 ;; This function calls:
  7836 ;;		Nothing
  7837 ;; This function is called by:
  7838 ;;		_sprintf
  7839 ;;		___flsub
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843     15A8                     ___fladd:	
  7844                           ;psect for function ___fladd
  7845                           
  7846     15A8                     l2738:	
  7847                           ;incstack = 0
  7848                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7849                           
  7850     15A8  1283               	bcf	3,5	;RP0=0, select bank0
  7851     15A9  1303               	bcf	3,6	;RP1=0, select bank0
  7852     15AA  0855               	movf	___fladd@b+3,w
  7853     15AB  3980               	andlw	128
  7854     15AC  00E2               	movwf	___fladd@signs
  7855     15AD                     l2740:
  7856     15AD  0855               	movf	___fladd@b+3,w
  7857     15AE  00DA               	movwf	??___fladd
  7858     15AF  075A               	addwf	??___fladd,w
  7859     15B0  00E4               	movwf	___fladd@bexp
  7860     15B1                     l2742:
  7861     15B1  1FD4               	btfss	___fladd@b+2,7
  7862     15B2  2DB4               	goto	u3801
  7863     15B3  2DB5               	goto	u3800
  7864     15B4                     u3801:
  7865     15B4  2DB6               	goto	l2746
  7866     15B5                     u3800:
  7867     15B5                     l2744:
  7868     15B5  1464               	bsf	___fladd@bexp,0
  7869     15B6                     l2746:
  7870     15B6  0864               	movf	___fladd@bexp,w
  7871     15B7  1903               	btfsc	3,2
  7872     15B8  2DBA               	goto	u3811
  7873     15B9  2DBB               	goto	u3810
  7874     15BA                     u3811:
  7875     15BA  2DCB               	goto	l2756
  7876     15BB                     u3810:
  7877     15BB                     l2748:
  7878     15BB  0A64               	incf	___fladd@bexp,w
  7879     15BC  1D03               	btfss	3,2
  7880     15BD  2DBF               	goto	u3821
  7881     15BE  2DC0               	goto	u3820
  7882     15BF                     u3821:
  7883     15BF  2DC8               	goto	l2752
  7884     15C0                     u3820:
  7885     15C0                     l2750:
  7886     15C0  3000               	movlw	0
  7887     15C1  00D5               	movwf	___fladd@b+3
  7888     15C2  3000               	movlw	0
  7889     15C3  00D4               	movwf	___fladd@b+2
  7890     15C4  3000               	movlw	0
  7891     15C5  00D3               	movwf	___fladd@b+1
  7892     15C6  3000               	movlw	0
  7893     15C7  00D2               	movwf	___fladd@b
  7894     15C8                     l2752:
  7895     15C8  17D4               	bsf	___fladd@b+2,7
  7896     15C9                     l2754:
  7897     15C9  01D5               	clrf	___fladd@b+3
  7898     15CA  2DD3               	goto	l2758
  7899     15CB                     l2756:
  7900     15CB  3000               	movlw	0
  7901     15CC  00D5               	movwf	___fladd@b+3
  7902     15CD  3000               	movlw	0
  7903     15CE  00D4               	movwf	___fladd@b+2
  7904     15CF  3000               	movlw	0
  7905     15D0  00D3               	movwf	___fladd@b+1
  7906     15D1  3000               	movlw	0
  7907     15D2  00D2               	movwf	___fladd@b
  7908     15D3                     l2758:
  7909     15D3  0859               	movf	___fladd@a+3,w
  7910     15D4  3980               	andlw	128
  7911     15D5  00E3               	movwf	___fladd@aexp
  7912     15D6                     l2760:
  7913     15D6  0863               	movf	___fladd@aexp,w
  7914     15D7  0662               	xorwf	___fladd@signs,w
  7915     15D8  1903               	skipnz
  7916     15D9  2DDB               	goto	u3831
  7917     15DA  2DDC               	goto	u3830
  7918     15DB                     u3831:
  7919     15DB  2DDD               	goto	l2764
  7920     15DC                     u3830:
  7921     15DC                     l2762:
  7922     15DC  1762               	bsf	___fladd@signs,6
  7923     15DD                     l2764:
  7924     15DD  0859               	movf	___fladd@a+3,w
  7925     15DE  00DA               	movwf	??___fladd
  7926     15DF  075A               	addwf	??___fladd,w
  7927     15E0  00E3               	movwf	___fladd@aexp
  7928     15E1                     l2766:
  7929     15E1  1FD8               	btfss	___fladd@a+2,7
  7930     15E2  2DE4               	goto	u3841
  7931     15E3  2DE5               	goto	u3840
  7932     15E4                     u3841:
  7933     15E4  2DE6               	goto	l2770
  7934     15E5                     u3840:
  7935     15E5                     l2768:
  7936     15E5  1463               	bsf	___fladd@aexp,0
  7937     15E6                     l2770:
  7938     15E6  0863               	movf	___fladd@aexp,w
  7939     15E7  1903               	btfsc	3,2
  7940     15E8  2DEA               	goto	u3851
  7941     15E9  2DEB               	goto	u3850
  7942     15EA                     u3851:
  7943     15EA  2DFB               	goto	l2780
  7944     15EB                     u3850:
  7945     15EB                     l2772:
  7946     15EB  0A63               	incf	___fladd@aexp,w
  7947     15EC  1D03               	btfss	3,2
  7948     15ED  2DEF               	goto	u3861
  7949     15EE  2DF0               	goto	u3860
  7950     15EF                     u3861:
  7951     15EF  2DF8               	goto	l2776
  7952     15F0                     u3860:
  7953     15F0                     l2774:
  7954     15F0  3000               	movlw	0
  7955     15F1  00D9               	movwf	___fladd@a+3
  7956     15F2  3000               	movlw	0
  7957     15F3  00D8               	movwf	___fladd@a+2
  7958     15F4  3000               	movlw	0
  7959     15F5  00D7               	movwf	___fladd@a+1
  7960     15F6  3000               	movlw	0
  7961     15F7  00D6               	movwf	___fladd@a
  7962     15F8                     l2776:
  7963     15F8  17D8               	bsf	___fladd@a+2,7
  7964     15F9                     l2778:
  7965     15F9  01D9               	clrf	___fladd@a+3
  7966     15FA  2E03               	goto	l746
  7967     15FB                     l2780:
  7968     15FB  3000               	movlw	0
  7969     15FC  00D9               	movwf	___fladd@a+3
  7970     15FD  3000               	movlw	0
  7971     15FE  00D8               	movwf	___fladd@a+2
  7972     15FF  3000               	movlw	0
  7973     1600  00D7               	movwf	___fladd@a+1
  7974     1601  3000               	movlw	0
  7975     1602  00D6               	movwf	___fladd@a
  7976     1603                     l746:
  7977     1603  0864               	movf	___fladd@bexp,w
  7978     1604  0263               	subwf	___fladd@aexp,w
  7979     1605  1803               	skipnc
  7980     1606  2E08               	goto	u3871
  7981     1607  2E09               	goto	u3870
  7982     1608                     u3871:
  7983     1608  2E2F               	goto	l2816
  7984     1609                     u3870:
  7985     1609                     l2782:
  7986     1609  1F62               	btfss	___fladd@signs,6
  7987     160A  2E0C               	goto	u3881
  7988     160B  2E0D               	goto	u3880
  7989     160C                     u3881:
  7990     160C  2E11               	goto	l2786
  7991     160D                     u3880:
  7992     160D                     l2784:
  7993     160D  3080               	movlw	128
  7994     160E  00DA               	movwf	??___fladd
  7995     160F  085A               	movf	??___fladd,w
  7996     1610  06E2               	xorwf	___fladd@signs,f
  7997     1611                     l2786:
  7998     1611  0864               	movf	___fladd@bexp,w
  7999     1612  00E5               	movwf	___fladd@grs
  8000     1613                     l2788:
  8001     1613  0863               	movf	___fladd@aexp,w
  8002     1614  00E4               	movwf	___fladd@bexp
  8003     1615                     l2790:
  8004     1615  0865               	movf	___fladd@grs,w
  8005     1616  00E3               	movwf	___fladd@aexp
  8006     1617                     l2792:
  8007     1617  0852               	movf	___fladd@b,w
  8008     1618  00E5               	movwf	___fladd@grs
  8009     1619                     l2794:
  8010     1619  0856               	movf	___fladd@a,w
  8011     161A  00D2               	movwf	___fladd@b
  8012     161B                     l2796:
  8013     161B  0865               	movf	___fladd@grs,w
  8014     161C  00D6               	movwf	___fladd@a
  8015     161D                     l2798:
  8016     161D  0853               	movf	___fladd@b+1,w
  8017     161E  00E5               	movwf	___fladd@grs
  8018     161F                     l2800:
  8019     161F  0857               	movf	___fladd@a+1,w
  8020     1620  00D3               	movwf	___fladd@b+1
  8021     1621                     l2802:
  8022     1621  0865               	movf	___fladd@grs,w
  8023     1622  00D7               	movwf	___fladd@a+1
  8024     1623                     l2804:
  8025     1623  0854               	movf	___fladd@b+2,w
  8026     1624  00E5               	movwf	___fladd@grs
  8027     1625                     l2806:
  8028     1625  0858               	movf	___fladd@a+2,w
  8029     1626  00D4               	movwf	___fladd@b+2
  8030     1627                     l2808:
  8031     1627  0865               	movf	___fladd@grs,w
  8032     1628  00D8               	movwf	___fladd@a+2
  8033     1629                     l2810:
  8034     1629  0855               	movf	___fladd@b+3,w
  8035     162A  00E5               	movwf	___fladd@grs
  8036     162B                     l2812:
  8037     162B  0859               	movf	___fladd@a+3,w
  8038     162C  00D5               	movwf	___fladd@b+3
  8039     162D                     l2814:
  8040     162D  0865               	movf	___fladd@grs,w
  8041     162E  00D9               	movwf	___fladd@a+3
  8042     162F                     l2816:
  8043     162F  01E5               	clrf	___fladd@grs
  8044     1630                     l2818:
  8045     1630  0863               	movf	___fladd@aexp,w
  8046     1631  00DA               	movwf	??___fladd
  8047     1632  01DB               	clrf	??___fladd+1
  8048     1633  085B               	movf	??___fladd+1,w
  8049     1634  00DD               	movwf	??___fladd+3
  8050     1635  0864               	movf	___fladd@bexp,w
  8051     1636  025A               	subwf	??___fladd,w
  8052     1637  00DC               	movwf	??___fladd+2
  8053     1638  1C03               	skipc
  8054     1639  03DD               	decf	??___fladd+3,f
  8055     163A  085D               	movf	??___fladd+3,w
  8056     163B  3A80               	xorlw	128
  8057     163C  00FF               	movwf	btemp+1
  8058     163D  3080               	movlw	128
  8059     163E  027F               	subwf	btemp+1,w
  8060     163F  1D03               	skipz
  8061     1640  2E43               	goto	u3895
  8062     1641  301A               	movlw	26
  8063     1642  025C               	subwf	??___fladd+2,w
  8064     1643                     u3895:
  8065     1643  1C03               	skipc
  8066     1644  2E46               	goto	u3891
  8067     1645  2E47               	goto	u3890
  8068     1646                     u3891:
  8069     1646  2E7E               	goto	l2834
  8070     1647                     u3890:
  8071     1647                     l2820:
  8072     1647  1283               	bcf	3,5	;RP0=0, select bank0
  8073     1648  1303               	bcf	3,6	;RP1=0, select bank0
  8074     1649  0855               	movf	___fladd@b+3,w
  8075     164A  0454               	iorwf	___fladd@b+2,w
  8076     164B  0453               	iorwf	___fladd@b+1,w
  8077     164C  0452               	iorwf	___fladd@b,w
  8078     164D  1D03               	skipz
  8079     164E  2E50               	goto	u3901
  8080     164F  2E52               	goto	u3900
  8081     1650                     u3901:
  8082     1650  3001               	movlw	1
  8083     1651  2E53               	goto	u3910
  8084     1652                     u3900:
  8085     1652  3000               	movlw	0
  8086     1653                     u3910:
  8087     1653  00E5               	movwf	___fladd@grs
  8088     1654  3000               	movlw	0
  8089     1655  00D5               	movwf	___fladd@b+3
  8090     1656  3000               	movlw	0
  8091     1657  00D4               	movwf	___fladd@b+2
  8092     1658  3000               	movlw	0
  8093     1659  00D3               	movwf	___fladd@b+1
  8094     165A  3000               	movlw	0
  8095     165B  00D2               	movwf	___fladd@b
  8096     165C  0863               	movf	___fladd@aexp,w
  8097     165D  00E4               	movwf	___fladd@bexp
  8098     165E  2E86               	goto	l750
  8099     165F                     l752:
  8100     165F  1C65               	btfss	___fladd@grs,0
  8101     1660  2E62               	goto	u3921
  8102     1661  2E63               	goto	u3920
  8103     1662                     u3921:
  8104     1662  2E6A               	goto	l2824
  8105     1663                     u3920:
  8106     1663                     l2822:
  8107     1663  0865               	movf	___fladd@grs,w
  8108     1664  00DA               	movwf	??___fladd
  8109     1665  1003               	clrc
  8110     1666  0C5A               	rrf	??___fladd,w
  8111     1667  3801               	iorlw	1
  8112     1668  00E5               	movwf	___fladd@grs
  8113     1669  2E6C               	goto	l2826
  8114     166A                     l2824:
  8115     166A  1003               	clrc
  8116     166B  0CE5               	rrf	___fladd@grs,f
  8117     166C                     l2826:
  8118     166C  1C52               	btfss	___fladd@b,0
  8119     166D  2E6F               	goto	u3931
  8120     166E  2E70               	goto	u3930
  8121     166F                     u3931:
  8122     166F  2E71               	goto	l2830
  8123     1670                     u3930:
  8124     1670                     l2828:
  8125     1670  17E5               	bsf	___fladd@grs,7
  8126     1671                     l2830:
  8127     1671  3001               	movlw	1
  8128     1672  00DA               	movwf	??___fladd
  8129     1673                     u3945:
  8130     1673  0D55               	rlf	___fladd@b+3,w
  8131     1674  0CD5               	rrf	___fladd@b+3,f
  8132     1675  0CD4               	rrf	___fladd@b+2,f
  8133     1676  0CD3               	rrf	___fladd@b+1,f
  8134     1677  0CD2               	rrf	___fladd@b,f
  8135     1678  0BDA               	decfsz	??___fladd& (0+127),f
  8136     1679  2E73               	goto	u3945
  8137     167A                     l2832:
  8138     167A  3001               	movlw	1
  8139     167B  00DA               	movwf	??___fladd
  8140     167C  085A               	movf	??___fladd,w
  8141     167D  07E4               	addwf	___fladd@bexp,f
  8142     167E                     l2834:
  8143     167E  1283               	bcf	3,5	;RP0=0, select bank0
  8144     167F  1303               	bcf	3,6	;RP1=0, select bank0
  8145     1680  0863               	movf	___fladd@aexp,w
  8146     1681  0264               	subwf	___fladd@bexp,w
  8147     1682  1C03               	skipc
  8148     1683  2E85               	goto	u3951
  8149     1684  2E86               	goto	u3950
  8150     1685                     u3951:
  8151     1685  2E5F               	goto	l752
  8152     1686                     u3950:
  8153     1686                     l750:
  8154     1686  1B62               	btfsc	___fladd@signs,6
  8155     1687  2E89               	goto	u3961
  8156     1688  2E8A               	goto	u3960
  8157     1689                     u3961:
  8158     1689  2ED3               	goto	l2860
  8159     168A                     u3960:
  8160     168A                     l2836:
  8161     168A  0864               	movf	___fladd@bexp,w
  8162     168B  1D03               	btfss	3,2
  8163     168C  2E8E               	goto	u3971
  8164     168D  2E8F               	goto	u3970
  8165     168E                     u3971:
  8166     168E  2E98               	goto	l2842
  8167     168F                     u3970:
  8168     168F                     l2838:
  8169     168F  3000               	movlw	0
  8170     1690  00D5               	movwf	?___fladd+3
  8171     1691  3000               	movlw	0
  8172     1692  00D4               	movwf	?___fladd+2
  8173     1693  3000               	movlw	0
  8174     1694  00D3               	movwf	?___fladd+1
  8175     1695  3000               	movlw	0
  8176     1696  00D2               	movwf	?___fladd
  8177     1697  2FFF               	goto	l759
  8178     1698                     l2842:
  8179     1698  0856               	movf	___fladd@a,w
  8180     1699  07D2               	addwf	___fladd@b,f
  8181     169A  0857               	movf	___fladd@a+1,w
  8182     169B  1103               	clrz
  8183     169C  1803               	skipnc
  8184     169D  3E01               	addlw	1
  8185     169E  1903               	skipnz
  8186     169F  2EA1               	goto	u3981
  8187     16A0  07D3               	addwf	___fladd@b+1,f
  8188     16A1                     u3981:
  8189     16A1  0858               	movf	___fladd@a+2,w
  8190     16A2  1103               	clrz
  8191     16A3  1803               	skipnc
  8192     16A4  3E01               	addlw	1
  8193     16A5  1903               	skipnz
  8194     16A6  2EA8               	goto	u3982
  8195     16A7  07D4               	addwf	___fladd@b+2,f
  8196     16A8                     u3982:
  8197     16A8  0859               	movf	___fladd@a+3,w
  8198     16A9  1103               	clrz
  8199     16AA  1803               	skipnc
  8200     16AB  3E01               	addlw	1
  8201     16AC  1903               	skipnz
  8202     16AD  2EAF               	goto	u3983
  8203     16AE  07D5               	addwf	___fladd@b+3,f
  8204     16AF                     u3983:
  8205     16AF                     l2844:
  8206     16AF  1C55               	btfss	___fladd@b+3,0
  8207     16B0  2EB2               	goto	u3991
  8208     16B1  2EB3               	goto	u3990
  8209     16B2                     u3991:
  8210     16B2  2F87               	goto	l2894
  8211     16B3                     u3990:
  8212     16B3                     l2846:
  8213     16B3  1C65               	btfss	___fladd@grs,0
  8214     16B4  2EB6               	goto	u4001
  8215     16B5  2EB7               	goto	u4000
  8216     16B6                     u4001:
  8217     16B6  2EBE               	goto	l2850
  8218     16B7                     u4000:
  8219     16B7                     l2848:
  8220     16B7  0865               	movf	___fladd@grs,w
  8221     16B8  00DA               	movwf	??___fladd
  8222     16B9  1003               	clrc
  8223     16BA  0C5A               	rrf	??___fladd,w
  8224     16BB  3801               	iorlw	1
  8225     16BC  00E5               	movwf	___fladd@grs
  8226     16BD  2EC0               	goto	l2852
  8227     16BE                     l2850:
  8228     16BE  1003               	clrc
  8229     16BF  0CE5               	rrf	___fladd@grs,f
  8230     16C0                     l2852:
  8231     16C0  1C52               	btfss	___fladd@b,0
  8232     16C1  2EC3               	goto	u4011
  8233     16C2  2EC4               	goto	u4010
  8234     16C3                     u4011:
  8235     16C3  2EC5               	goto	l2856
  8236     16C4                     u4010:
  8237     16C4                     l2854:
  8238     16C4  17E5               	bsf	___fladd@grs,7
  8239     16C5                     l2856:
  8240     16C5  3001               	movlw	1
  8241     16C6  00DA               	movwf	??___fladd
  8242     16C7                     u4025:
  8243     16C7  0D55               	rlf	___fladd@b+3,w
  8244     16C8  0CD5               	rrf	___fladd@b+3,f
  8245     16C9  0CD4               	rrf	___fladd@b+2,f
  8246     16CA  0CD3               	rrf	___fladd@b+1,f
  8247     16CB  0CD2               	rrf	___fladd@b,f
  8248     16CC  0BDA               	decfsz	??___fladd& (0+127),f
  8249     16CD  2EC7               	goto	u4025
  8250     16CE                     l2858:
  8251     16CE  3001               	movlw	1
  8252     16CF  00DA               	movwf	??___fladd
  8253     16D0  085A               	movf	??___fladd,w
  8254     16D1  07E4               	addwf	___fladd@bexp,f
  8255     16D2  2F87               	goto	l2894
  8256     16D3                     l2860:
  8257     16D3  0855               	movf	___fladd@b+3,w
  8258     16D4  3A80               	xorlw	128
  8259     16D5  00FF               	movwf	btemp+1
  8260     16D6  0859               	movf	___fladd@a+3,w
  8261     16D7  3A80               	xorlw	128
  8262     16D8  027F               	subwf	btemp+1,w
  8263     16D9  1D03               	skipz
  8264     16DA  2EE5               	goto	u4033
  8265     16DB  0858               	movf	___fladd@a+2,w
  8266     16DC  0254               	subwf	___fladd@b+2,w
  8267     16DD  1D03               	skipz
  8268     16DE  2EE5               	goto	u4033
  8269     16DF  0857               	movf	___fladd@a+1,w
  8270     16E0  0253               	subwf	___fladd@b+1,w
  8271     16E1  1D03               	skipz
  8272     16E2  2EE5               	goto	u4033
  8273     16E3  0856               	movf	___fladd@a,w
  8274     16E4  0252               	subwf	___fladd@b,w
  8275     16E5                     u4033:
  8276     16E5  1803               	skipnc
  8277     16E6  2EE8               	goto	u4031
  8278     16E7  2EE9               	goto	u4030
  8279     16E8                     u4031:
  8280     16E8  2F41               	goto	l2870
  8281     16E9                     u4030:
  8282     16E9                     l2862:
  8283     16E9  30FF               	movlw	255
  8284     16EA  00DA               	movwf	??___fladd
  8285     16EB  30FF               	movlw	255
  8286     16EC  00DB               	movwf	??___fladd+1
  8287     16ED  30FF               	movlw	255
  8288     16EE  00DC               	movwf	??___fladd+2
  8289     16EF  30FF               	movlw	255
  8290     16F0  00DD               	movwf	??___fladd+3
  8291     16F1  0856               	movf	___fladd@a,w
  8292     16F2  00DE               	movwf	??___fladd+4
  8293     16F3  0857               	movf	___fladd@a+1,w
  8294     16F4  00DF               	movwf	??___fladd+5
  8295     16F5  0858               	movf	___fladd@a+2,w
  8296     16F6  00E0               	movwf	??___fladd+6
  8297     16F7  0859               	movf	___fladd@a+3,w
  8298     16F8  00E1               	movwf	??___fladd+7
  8299     16F9  0852               	movf	___fladd@b,w
  8300     16FA  02DE               	subwf	??___fladd+4,f
  8301     16FB  0853               	movf	___fladd@b+1,w
  8302     16FC  1C03               	skipc
  8303     16FD  0F53               	incfsz	___fladd@b+1,w
  8304     16FE  2F00               	goto	u4041
  8305     16FF  2F01               	goto	u4042
  8306     1700                     u4041:
  8307     1700  02DF               	subwf	??___fladd+5,f
  8308     1701                     u4042:
  8309     1701  0854               	movf	___fladd@b+2,w
  8310     1702  1C03               	skipc
  8311     1703  0F54               	incfsz	___fladd@b+2,w
  8312     1704  2F06               	goto	u4043
  8313     1705  2F07               	goto	u4044
  8314     1706                     u4043:
  8315     1706  02E0               	subwf	??___fladd+6,f
  8316     1707                     u4044:
  8317     1707  0855               	movf	___fladd@b+3,w
  8318     1708  1C03               	skipc
  8319     1709  0F55               	incfsz	___fladd@b+3,w
  8320     170A  2F0C               	goto	u4045
  8321     170B  2F0D               	goto	u4046
  8322     170C                     u4045:
  8323     170C  02E1               	subwf	??___fladd+7,f
  8324     170D                     u4046:
  8325     170D  085E               	movf	??___fladd+4,w
  8326     170E  07DA               	addwf	??___fladd,f
  8327     170F  085F               	movf	??___fladd+5,w
  8328     1710  1803               	skipnc
  8329     1711  0F5F               	incfsz	??___fladd+5,w
  8330     1712  2F14               	goto	u4050
  8331     1713  2F15               	goto	u4051
  8332     1714                     u4050:
  8333     1714  07DB               	addwf	??___fladd+1,f
  8334     1715                     u4051:
  8335     1715  0860               	movf	??___fladd+6,w
  8336     1716  1803               	skipnc
  8337     1717  0F60               	incfsz	??___fladd+6,w
  8338     1718  2F1A               	goto	u4052
  8339     1719  2F1B               	goto	u4053
  8340     171A                     u4052:
  8341     171A  07DC               	addwf	??___fladd+2,f
  8342     171B                     u4053:
  8343     171B  0861               	movf	??___fladd+7,w
  8344     171C  1803               	skipnc
  8345     171D  0A61               	incf	??___fladd+7,w
  8346     171E  07DD               	addwf	??___fladd+3,f
  8347     171F  085D               	movf	??___fladd+3,w
  8348     1720  00D5               	movwf	___fladd@b+3
  8349     1721  085C               	movf	??___fladd+2,w
  8350     1722  00D4               	movwf	___fladd@b+2
  8351     1723  085B               	movf	??___fladd+1,w
  8352     1724  00D3               	movwf	___fladd@b+1
  8353     1725  085A               	movf	??___fladd,w
  8354     1726  00D2               	movwf	___fladd@b
  8355     1727                     l2864:
  8356     1727  3080               	movlw	128
  8357     1728  00DA               	movwf	??___fladd
  8358     1729  085A               	movf	??___fladd,w
  8359     172A  06E2               	xorwf	___fladd@signs,f
  8360     172B  09E5               	comf	___fladd@grs,f
  8361     172C  0AE5               	incf	___fladd@grs,f
  8362     172D                     l2866:
  8363     172D  0865               	movf	___fladd@grs,w
  8364     172E  1D03               	btfss	3,2
  8365     172F  2F31               	goto	u4061
  8366     1730  2F32               	goto	u4060
  8367     1731                     u4061:
  8368     1731  2F4F               	goto	l767
  8369     1732                     u4060:
  8370     1732                     l2868:
  8371     1732  3001               	movlw	1
  8372     1733  07D2               	addwf	___fladd@b,f
  8373     1734  3000               	movlw	0
  8374     1735  1803               	skipnc
  8375     1736  3001               	movlw	1
  8376     1737  07D3               	addwf	___fladd@b+1,f
  8377     1738  3000               	movlw	0
  8378     1739  1803               	skipnc
  8379     173A  3001               	movlw	1
  8380     173B  07D4               	addwf	___fladd@b+2,f
  8381     173C  3000               	movlw	0
  8382     173D  1803               	skipnc
  8383     173E  3001               	movlw	1
  8384     173F  07D5               	addwf	___fladd@b+3,f
  8385     1740  2F4F               	goto	l767
  8386     1741                     l2870:
  8387     1741  0856               	movf	___fladd@a,w
  8388     1742  02D2               	subwf	___fladd@b,f
  8389     1743  0857               	movf	___fladd@a+1,w
  8390     1744  1C03               	skipc
  8391     1745  0F57               	incfsz	___fladd@a+1,w
  8392     1746  02D3               	subwf	___fladd@b+1,f
  8393     1747  0858               	movf	___fladd@a+2,w
  8394     1748  1C03               	skipc
  8395     1749  0F58               	incfsz	___fladd@a+2,w
  8396     174A  02D4               	subwf	___fladd@b+2,f
  8397     174B  0859               	movf	___fladd@a+3,w
  8398     174C  1C03               	skipc
  8399     174D  0F59               	incfsz	___fladd@a+3,w
  8400     174E  02D5               	subwf	___fladd@b+3,f
  8401     174F                     l767:
  8402     174F  0855               	movf	___fladd@b+3,w
  8403     1750  0454               	iorwf	___fladd@b+2,w
  8404     1751  0453               	iorwf	___fladd@b+1,w
  8405     1752  0452               	iorwf	___fladd@b,w
  8406     1753  1D03               	skipz
  8407     1754  2F56               	goto	u4071
  8408     1755  2F57               	goto	u4070
  8409     1756                     u4071:
  8410     1756  2F83               	goto	l2892
  8411     1757                     u4070:
  8412     1757                     l2872:
  8413     1757  0865               	movf	___fladd@grs,w
  8414     1758  1D03               	btfss	3,2
  8415     1759  2F5B               	goto	u4081
  8416     175A  2F5C               	goto	u4080
  8417     175B                     u4081:
  8418     175B  2F83               	goto	l2892
  8419     175C                     u4080:
  8420     175C                     l2874:
  8421     175C  3000               	movlw	0
  8422     175D  00D5               	movwf	?___fladd+3
  8423     175E  3000               	movlw	0
  8424     175F  00D4               	movwf	?___fladd+2
  8425     1760  3000               	movlw	0
  8426     1761  00D3               	movwf	?___fladd+1
  8427     1762  3000               	movlw	0
  8428     1763  00D2               	movwf	?___fladd
  8429     1764  2FFF               	goto	l759
  8430     1765                     l2878:
  8431     1765  3001               	movlw	1
  8432     1766  00DA               	movwf	??___fladd
  8433     1767                     u4095:
  8434     1767  1003               	clrc
  8435     1768  0DD2               	rlf	___fladd@b,f
  8436     1769  0DD3               	rlf	___fladd@b+1,f
  8437     176A  0DD4               	rlf	___fladd@b+2,f
  8438     176B  0DD5               	rlf	___fladd@b+3,f
  8439     176C  0BDA               	decfsz	??___fladd,f
  8440     176D  2F67               	goto	u4095
  8441     176E                     l2880:
  8442     176E  1FE5               	btfss	___fladd@grs,7
  8443     176F  2F71               	goto	u4101
  8444     1770  2F72               	goto	u4100
  8445     1771                     u4101:
  8446     1771  2F73               	goto	l771
  8447     1772                     u4100:
  8448     1772                     l2882:
  8449     1772  1452               	bsf	___fladd@b,0
  8450     1773                     l771:
  8451     1773  1C65               	btfss	___fladd@grs,0
  8452     1774  2F76               	goto	u4111
  8453     1775  2F77               	goto	u4110
  8454     1776                     u4111:
  8455     1776  2F7A               	goto	l2886
  8456     1777                     u4110:
  8457     1777                     l2884:
  8458     1777  1403               	setc
  8459     1778  0DE5               	rlf	___fladd@grs,f
  8460     1779  2F7C               	goto	l2888
  8461     177A                     l2886:
  8462     177A  1003               	clrc
  8463     177B  0DE5               	rlf	___fladd@grs,f
  8464     177C                     l2888:
  8465     177C  0864               	movf	___fladd@bexp,w
  8466     177D  1903               	btfsc	3,2
  8467     177E  2F80               	goto	u4121
  8468     177F  2F81               	goto	u4120
  8469     1780                     u4121:
  8470     1780  2F83               	goto	l2892
  8471     1781                     u4120:
  8472     1781                     l2890:
  8473     1781  3001               	movlw	1
  8474     1782  02E4               	subwf	___fladd@bexp,f
  8475     1783                     l2892:
  8476     1783  1FD4               	btfss	___fladd@b+2,7
  8477     1784  2F86               	goto	u4131
  8478     1785  2F87               	goto	u4130
  8479     1786                     u4131:
  8480     1786  2F65               	goto	l2878
  8481     1787                     u4130:
  8482     1787                     l2894:
  8483     1787  01E3               	clrf	___fladd@aexp
  8484     1788                     l2896:
  8485     1788  1FE5               	btfss	___fladd@grs,7
  8486     1789  2F8B               	goto	u4141
  8487     178A  2F8C               	goto	u4140
  8488     178B                     u4141:
  8489     178B  2F9A               	goto	l2904
  8490     178C                     u4140:
  8491     178C                     l2898:
  8492     178C  0865               	movf	___fladd@grs,w
  8493     178D  397F               	andlw	127
  8494     178E  1903               	btfsc	3,2
  8495     178F  2F91               	goto	u4151
  8496     1790  2F92               	goto	u4150
  8497     1791                     u4151:
  8498     1791  2F95               	goto	l777
  8499     1792                     u4150:
  8500     1792                     l2900:
  8501     1792  01E3               	clrf	___fladd@aexp
  8502     1793  0AE3               	incf	___fladd@aexp,f
  8503     1794  2F9A               	goto	l2904
  8504     1795                     l777:
  8505     1795  1C52               	btfss	___fladd@b,0
  8506     1796  2F98               	goto	u4161
  8507     1797  2F99               	goto	u4160
  8508     1798                     u4161:
  8509     1798  2F9A               	goto	l2904
  8510     1799                     u4160:
  8511     1799  2F92               	goto	l2900
  8512     179A                     l2904:
  8513     179A  0863               	movf	___fladd@aexp,w
  8514     179B  1903               	btfsc	3,2
  8515     179C  2F9E               	goto	u4171
  8516     179D  2F9F               	goto	u4170
  8517     179E                     u4171:
  8518     179E  2FD3               	goto	l780
  8519     179F                     u4170:
  8520     179F                     l2906:
  8521     179F  3001               	movlw	1
  8522     17A0  07D2               	addwf	___fladd@b,f
  8523     17A1  3000               	movlw	0
  8524     17A2  1803               	skipnc
  8525     17A3  3001               	movlw	1
  8526     17A4  07D3               	addwf	___fladd@b+1,f
  8527     17A5  3000               	movlw	0
  8528     17A6  1803               	skipnc
  8529     17A7  3001               	movlw	1
  8530     17A8  07D4               	addwf	___fladd@b+2,f
  8531     17A9  3000               	movlw	0
  8532     17AA  1803               	skipnc
  8533     17AB  3001               	movlw	1
  8534     17AC  07D5               	addwf	___fladd@b+3,f
  8535     17AD                     l2908:
  8536     17AD  1C55               	btfss	___fladd@b+3,0
  8537     17AE  2FB0               	goto	u4181
  8538     17AF  2FB1               	goto	u4180
  8539     17B0                     u4181:
  8540     17B0  2FD3               	goto	l780
  8541     17B1                     u4180:
  8542     17B1                     l2910:
  8543     17B1  0852               	movf	___fladd@b,w
  8544     17B2  00DA               	movwf	??___fladd
  8545     17B3  0853               	movf	___fladd@b+1,w
  8546     17B4  00DB               	movwf	??___fladd+1
  8547     17B5  0854               	movf	___fladd@b+2,w
  8548     17B6  00DC               	movwf	??___fladd+2
  8549     17B7  0855               	movf	___fladd@b+3,w
  8550     17B8  00DD               	movwf	??___fladd+3
  8551     17B9  3001               	movlw	1
  8552     17BA  00DE               	movwf	??___fladd+4
  8553     17BB                     u4195:
  8554     17BB  0D5D               	rlf	??___fladd+3,w
  8555     17BC  0CDD               	rrf	??___fladd+3,f
  8556     17BD  0CDC               	rrf	??___fladd+2,f
  8557     17BE  0CDB               	rrf	??___fladd+1,f
  8558     17BF  0CDA               	rrf	??___fladd,f
  8559     17C0                     u4190:
  8560     17C0  0BDE               	decfsz	??___fladd+4,f
  8561     17C1  2FBB               	goto	u4195
  8562     17C2  085D               	movf	??___fladd+3,w
  8563     17C3  00D5               	movwf	___fladd@b+3
  8564     17C4  085C               	movf	??___fladd+2,w
  8565     17C5  00D4               	movwf	___fladd@b+2
  8566     17C6  085B               	movf	??___fladd+1,w
  8567     17C7  00D3               	movwf	___fladd@b+1
  8568     17C8  085A               	movf	??___fladd,w
  8569     17C9  00D2               	movwf	___fladd@b
  8570     17CA  0A64               	incf	___fladd@bexp,w
  8571     17CB  1903               	btfsc	3,2
  8572     17CC  2FCE               	goto	u4201
  8573     17CD  2FCF               	goto	u4200
  8574     17CE                     u4201:
  8575     17CE  2FD3               	goto	l780
  8576     17CF                     u4200:
  8577     17CF                     l2912:
  8578     17CF  3001               	movlw	1
  8579     17D0  00DA               	movwf	??___fladd
  8580     17D1  085A               	movf	??___fladd,w
  8581     17D2  07E4               	addwf	___fladd@bexp,f
  8582     17D3                     l780:
  8583     17D3  0A64               	incf	___fladd@bexp,w
  8584     17D4  1903               	btfsc	3,2
  8585     17D5  2FD7               	goto	u4211
  8586     17D6  2FD8               	goto	u4210
  8587     17D7                     u4211:
  8588     17D7  2FDD               	goto	l2916
  8589     17D8                     u4210:
  8590     17D8                     l2914:
  8591     17D8  0864               	movf	___fladd@bexp,w
  8592     17D9  1D03               	btfss	3,2
  8593     17DA  2FDC               	goto	u4221
  8594     17DB  2FDD               	goto	u4220
  8595     17DC                     u4221:
  8596     17DC  2FEB               	goto	l2922
  8597     17DD                     u4220:
  8598     17DD                     l2916:
  8599     17DD  3000               	movlw	0
  8600     17DE  00D5               	movwf	___fladd@b+3
  8601     17DF  3000               	movlw	0
  8602     17E0  00D4               	movwf	___fladd@b+2
  8603     17E1  3000               	movlw	0
  8604     17E2  00D3               	movwf	___fladd@b+1
  8605     17E3  3000               	movlw	0
  8606     17E4  00D2               	movwf	___fladd@b
  8607     17E5                     l2918:
  8608     17E5  0864               	movf	___fladd@bexp,w
  8609     17E6  1D03               	btfss	3,2
  8610     17E7  2FE9               	goto	u4231
  8611     17E8  2FEA               	goto	u4230
  8612     17E9                     u4231:
  8613     17E9  2FEB               	goto	l2922
  8614     17EA                     u4230:
  8615     17EA                     l2920:
  8616     17EA  01E2               	clrf	___fladd@signs
  8617     17EB                     l2922:
  8618     17EB  1C64               	btfss	___fladd@bexp,0
  8619     17EC  2FEE               	goto	u4241
  8620     17ED  2FEF               	goto	u4240
  8621     17EE                     u4241:
  8622     17EE  2FF1               	goto	l2926
  8623     17EF                     u4240:
  8624     17EF                     l2924:
  8625     17EF  17D4               	bsf	___fladd@b+2,7
  8626     17F0  2FF5               	goto	l788
  8627     17F1                     l2926:
  8628     17F1  307F               	movlw	127
  8629     17F2  00DA               	movwf	??___fladd
  8630     17F3  085A               	movf	??___fladd,w
  8631     17F4  05D4               	andwf	___fladd@b+2,f
  8632     17F5                     l788:
  8633     17F5  0864               	movf	___fladd@bexp,w
  8634     17F6  00DA               	movwf	??___fladd
  8635     17F7  1003               	clrc
  8636     17F8  0C5A               	rrf	??___fladd,w
  8637     17F9  00D5               	movwf	___fladd@b+3
  8638     17FA                     l2928:
  8639     17FA  1FE2               	btfss	___fladd@signs,7
  8640     17FB  2FFD               	goto	u4251
  8641     17FC  2FFE               	goto	u4250
  8642     17FD                     u4251:
  8643     17FD  2FFF               	goto	l789
  8644     17FE                     u4250:
  8645     17FE                     l2930:
  8646     17FE  17D5               	bsf	___fladd@b+3,7
  8647     17FF                     l789:
  8648     17FF                     l759:
  8649     17FF  0008               	return
  8650     1800                     __end_of___fladd:
  8651                           
  8652                           	psect	text19
  8653     1AC8                     __ptext19:	
  8654 ;; *************** function ___flneg *****************
  8655 ;; Defined at:
  8656 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;  f1              4    0[COMMON] unsigned char 
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;		None
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  4    0[COMMON] unsigned char 
  8663 ;; Registers used:
  8664 ;;		wreg
  8665 ;; Tracked objects:
  8666 ;;		On entry : 0/0
  8667 ;;		On exit  : 0/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8670 ;;      Params:         4       0       0       0       0
  8671 ;;      Locals:         0       0       0       0       0
  8672 ;;      Temps:          0       0       0       0       0
  8673 ;;      Totals:         4       0       0       0       0
  8674 ;;Total ram usage:        4 bytes
  8675 ;; Hardware stack levels used: 1
  8676 ;; This function calls:
  8677 ;;		Nothing
  8678 ;; This function is called by:
  8679 ;;		_sprintf
  8680 ;; This function uses a non-reentrant model
  8681 ;;
  8682                           
  8683     1AC8                     ___flneg:	
  8684                           ;psect for function ___flneg
  8685                           
  8686     1AC8                     l3338:	
  8687                           ;incstack = 0
  8688                           ; Regs used in ___flneg: [wreg]
  8689                           
  8690     1AC8  0873               	movf	___flneg@f1+3,w
  8691     1AC9  0472               	iorwf	___flneg@f1+2,w
  8692     1ACA  0471               	iorwf	___flneg@f1+1,w
  8693     1ACB  0470               	iorwf	___flneg@f1,w
  8694     1ACC  1903               	skipnz
  8695     1ACD  2ACF               	goto	u5341
  8696     1ACE  2AD0               	goto	u5340
  8697     1ACF                     u5341:
  8698     1ACF  2AD2               	goto	l3342
  8699     1AD0                     u5340:
  8700     1AD0                     l3340:
  8701     1AD0  3080               	movlw	128
  8702     1AD1  06F3               	xorwf	___flneg@f1+3,f
  8703     1AD2                     l3342:
  8704     1AD2                     l618:
  8705     1AD2  0008               	return
  8706     1AD3                     __end_of___flneg:
  8707                           
  8708                           	psect	text20
  8709     0802                     __ptext20:	
  8710 ;; *************** function ___flge *****************
  8711 ;; Defined at:
  8712 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  8713 ;; Parameters:    Size  Location     Type
  8714 ;;  ff1             4    0[COMMON] unsigned char 
  8715 ;;  ff2             4    4[COMMON] unsigned char 
  8716 ;; Auto vars:     Size  Location     Type
  8717 ;;		None
  8718 ;; Return value:  Size  Location     Type
  8719 ;;		None               void
  8720 ;; Registers used:
  8721 ;;		wreg, status,2, status,0
  8722 ;; Tracked objects:
  8723 ;;		On entry : 0/0
  8724 ;;		On exit  : 0/0
  8725 ;;		Unchanged: 0/0
  8726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8727 ;;      Params:         8       0       0       0       0
  8728 ;;      Locals:         0       0       0       0       0
  8729 ;;      Temps:          4       0       0       0       0
  8730 ;;      Totals:        12       0       0       0       0
  8731 ;;Total ram usage:       12 bytes
  8732 ;; Hardware stack levels used: 1
  8733 ;; This function calls:
  8734 ;;		Nothing
  8735 ;; This function is called by:
  8736 ;;		_sprintf
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740     0802                     ___flge:	
  8741                           ;psect for function ___flge
  8742                           
  8743     0802                     l3318:	
  8744                           ;incstack = 0
  8745                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8746                           
  8747     0802  3000               	movlw	0
  8748     0803  0570               	andwf	___flge@ff1,w
  8749     0804  00F8               	movwf	??___flge
  8750     0805  3000               	movlw	0
  8751     0806  0571               	andwf	___flge@ff1+1,w
  8752     0807  00F9               	movwf	??___flge+1
  8753     0808  3080               	movlw	128
  8754     0809  0572               	andwf	___flge@ff1+2,w
  8755     080A  00FA               	movwf	??___flge+2
  8756     080B  307F               	movlw	127
  8757     080C  0573               	andwf	___flge@ff1+3,w
  8758     080D  00FB               	movwf	??___flge+3
  8759     080E  087B               	movf	??___flge+3,w
  8760     080F  047A               	iorwf	??___flge+2,w
  8761     0810  0479               	iorwf	??___flge+1,w
  8762     0811  0478               	iorwf	??___flge,w
  8763     0812  1D03               	skipz
  8764     0813  2815               	goto	u5271
  8765     0814  2816               	goto	u5270
  8766     0815                     u5271:
  8767     0815  281E               	goto	l610
  8768     0816                     u5270:
  8769     0816                     l3320:
  8770     0816  3000               	movlw	0
  8771     0817  00F3               	movwf	___flge@ff1+3
  8772     0818  3000               	movlw	0
  8773     0819  00F2               	movwf	___flge@ff1+2
  8774     081A  3000               	movlw	0
  8775     081B  00F1               	movwf	___flge@ff1+1
  8776     081C  3000               	movlw	0
  8777     081D  00F0               	movwf	___flge@ff1
  8778     081E                     l610:
  8779     081E  3000               	movlw	0
  8780     081F  0574               	andwf	___flge@ff2,w
  8781     0820  00F8               	movwf	??___flge
  8782     0821  3000               	movlw	0
  8783     0822  0575               	andwf	___flge@ff2+1,w
  8784     0823  00F9               	movwf	??___flge+1
  8785     0824  3080               	movlw	128
  8786     0825  0576               	andwf	___flge@ff2+2,w
  8787     0826  00FA               	movwf	??___flge+2
  8788     0827  307F               	movlw	127
  8789     0828  0577               	andwf	___flge@ff2+3,w
  8790     0829  00FB               	movwf	??___flge+3
  8791     082A  087B               	movf	??___flge+3,w
  8792     082B  047A               	iorwf	??___flge+2,w
  8793     082C  0479               	iorwf	??___flge+1,w
  8794     082D  0478               	iorwf	??___flge,w
  8795     082E  1D03               	skipz
  8796     082F  2831               	goto	u5281
  8797     0830  2832               	goto	u5280
  8798     0831                     u5281:
  8799     0831  283A               	goto	l3324
  8800     0832                     u5280:
  8801     0832                     l3322:
  8802     0832  3000               	movlw	0
  8803     0833  00F7               	movwf	___flge@ff2+3
  8804     0834  3000               	movlw	0
  8805     0835  00F6               	movwf	___flge@ff2+2
  8806     0836  3000               	movlw	0
  8807     0837  00F5               	movwf	___flge@ff2+1
  8808     0838  3000               	movlw	0
  8809     0839  00F4               	movwf	___flge@ff2
  8810     083A                     l3324:
  8811     083A  1FF3               	btfss	___flge@ff1+3,7
  8812     083B  283D               	goto	u5291
  8813     083C  283E               	goto	u5290
  8814     083D                     u5291:
  8815     083D  2862               	goto	l3328
  8816     083E                     u5290:
  8817     083E                     l3326:
  8818     083E  3000               	movlw	0
  8819     083F  00F8               	movwf	??___flge
  8820     0840  3000               	movlw	0
  8821     0841  00F9               	movwf	??___flge+1
  8822     0842  3000               	movlw	0
  8823     0843  00FA               	movwf	??___flge+2
  8824     0844  3080               	movlw	128
  8825     0845  00FB               	movwf	??___flge+3
  8826     0846  0870               	movf	___flge@ff1,w
  8827     0847  02F8               	subwf	??___flge,f
  8828     0848  0871               	movf	___flge@ff1+1,w
  8829     0849  1C03               	skipc
  8830     084A  0F71               	incfsz	___flge@ff1+1,w
  8831     084B  284D               	goto	u5301
  8832     084C  284E               	goto	u5302
  8833     084D                     u5301:
  8834     084D  02F9               	subwf	??___flge+1,f
  8835     084E                     u5302:
  8836     084E  0872               	movf	___flge@ff1+2,w
  8837     084F  1C03               	skipc
  8838     0850  0F72               	incfsz	___flge@ff1+2,w
  8839     0851  2853               	goto	u5303
  8840     0852  2854               	goto	u5304
  8841     0853                     u5303:
  8842     0853  02FA               	subwf	??___flge+2,f
  8843     0854                     u5304:
  8844     0854  0873               	movf	___flge@ff1+3,w
  8845     0855  1C03               	skipc
  8846     0856  0F73               	incfsz	___flge@ff1+3,w
  8847     0857  2859               	goto	u5305
  8848     0858  285A               	goto	u5306
  8849     0859                     u5305:
  8850     0859  02FB               	subwf	??___flge+3,f
  8851     085A                     u5306:
  8852     085A  087B               	movf	??___flge+3,w
  8853     085B  00F3               	movwf	___flge@ff1+3
  8854     085C  087A               	movf	??___flge+2,w
  8855     085D  00F2               	movwf	___flge@ff1+2
  8856     085E  0879               	movf	??___flge+1,w
  8857     085F  00F1               	movwf	___flge@ff1+1
  8858     0860  0878               	movf	??___flge,w
  8859     0861  00F0               	movwf	___flge@ff1
  8860     0862                     l3328:
  8861     0862  1FF7               	btfss	___flge@ff2+3,7
  8862     0863  2865               	goto	u5311
  8863     0864  2866               	goto	u5310
  8864     0865                     u5311:
  8865     0865  288A               	goto	l613
  8866     0866                     u5310:
  8867     0866                     l3330:
  8868     0866  3000               	movlw	0
  8869     0867  00F8               	movwf	??___flge
  8870     0868  3000               	movlw	0
  8871     0869  00F9               	movwf	??___flge+1
  8872     086A  3000               	movlw	0
  8873     086B  00FA               	movwf	??___flge+2
  8874     086C  3080               	movlw	128
  8875     086D  00FB               	movwf	??___flge+3
  8876     086E  0874               	movf	___flge@ff2,w
  8877     086F  02F8               	subwf	??___flge,f
  8878     0870  0875               	movf	___flge@ff2+1,w
  8879     0871  1C03               	skipc
  8880     0872  0F75               	incfsz	___flge@ff2+1,w
  8881     0873  2875               	goto	u5321
  8882     0874  2876               	goto	u5322
  8883     0875                     u5321:
  8884     0875  02F9               	subwf	??___flge+1,f
  8885     0876                     u5322:
  8886     0876  0876               	movf	___flge@ff2+2,w
  8887     0877  1C03               	skipc
  8888     0878  0F76               	incfsz	___flge@ff2+2,w
  8889     0879  287B               	goto	u5323
  8890     087A  287C               	goto	u5324
  8891     087B                     u5323:
  8892     087B  02FA               	subwf	??___flge+2,f
  8893     087C                     u5324:
  8894     087C  0877               	movf	___flge@ff2+3,w
  8895     087D  1C03               	skipc
  8896     087E  0F77               	incfsz	___flge@ff2+3,w
  8897     087F  2881               	goto	u5325
  8898     0880  2882               	goto	u5326
  8899     0881                     u5325:
  8900     0881  02FB               	subwf	??___flge+3,f
  8901     0882                     u5326:
  8902     0882  087B               	movf	??___flge+3,w
  8903     0883  00F7               	movwf	___flge@ff2+3
  8904     0884  087A               	movf	??___flge+2,w
  8905     0885  00F6               	movwf	___flge@ff2+2
  8906     0886  0879               	movf	??___flge+1,w
  8907     0887  00F5               	movwf	___flge@ff2+1
  8908     0888  0878               	movf	??___flge,w
  8909     0889  00F4               	movwf	___flge@ff2
  8910     088A                     l613:
  8911     088A  3080               	movlw	128
  8912     088B  06F3               	xorwf	___flge@ff1+3,f
  8913     088C  3080               	movlw	128
  8914     088D  06F7               	xorwf	___flge@ff2+3,f
  8915     088E  0877               	movf	___flge@ff2+3,w
  8916     088F  0273               	subwf	___flge@ff1+3,w
  8917     0890  1D03               	skipz
  8918     0891  289C               	goto	u5335
  8919     0892  0876               	movf	___flge@ff2+2,w
  8920     0893  0272               	subwf	___flge@ff1+2,w
  8921     0894  1D03               	skipz
  8922     0895  289C               	goto	u5335
  8923     0896  0875               	movf	___flge@ff2+1,w
  8924     0897  0271               	subwf	___flge@ff1+1,w
  8925     0898  1D03               	skipz
  8926     0899  289C               	goto	u5335
  8927     089A  0874               	movf	___flge@ff2,w
  8928     089B  0270               	subwf	___flge@ff1,w
  8929     089C                     u5335:
  8930     089C  1803               	skipnc
  8931     089D  289F               	goto	u5331
  8932     089E  28A0               	goto	u5330
  8933     089F                     u5331:
  8934     089F  28A2               	goto	l3334
  8935     08A0                     u5330:
  8936     08A0                     l3332:
  8937     08A0  1003               	clrc
  8938     08A1  28A3               	goto	l614
  8939     08A2                     l3334:
  8940     08A2  1403               	setc
  8941     08A3                     l614:
  8942     08A3  0008               	return
  8943     08A4                     __end_of___flge:
  8944                           
  8945                           	psect	text21
  8946     1D61                     __ptext21:	
  8947 ;; *************** function ___fleq *****************
  8948 ;; Defined at:
  8949 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  8950 ;; Parameters:    Size  Location     Type
  8951 ;;  ff1             4    0[COMMON] unsigned char 
  8952 ;;  ff2             4    4[COMMON] unsigned char 
  8953 ;; Auto vars:     Size  Location     Type
  8954 ;;		None
  8955 ;; Return value:  Size  Location     Type
  8956 ;;		None               void
  8957 ;; Registers used:
  8958 ;;		wreg, status,2, status,0
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8964 ;;      Params:         8       0       0       0       0
  8965 ;;      Locals:         0       0       0       0       0
  8966 ;;      Temps:          4       0       0       0       0
  8967 ;;      Totals:        12       0       0       0       0
  8968 ;;Total ram usage:       12 bytes
  8969 ;; Hardware stack levels used: 1
  8970 ;; This function calls:
  8971 ;;		Nothing
  8972 ;; This function is called by:
  8973 ;;		_sprintf
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977     1D61                     ___fleq:	
  8978                           ;psect for function ___fleq
  8979                           
  8980     1D61                     l3306:	
  8981                           ;incstack = 0
  8982                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8983                           
  8984     1D61  3000               	movlw	0
  8985     1D62  0570               	andwf	___fleq@ff1,w
  8986     1D63  00F8               	movwf	??___fleq
  8987     1D64  3000               	movlw	0
  8988     1D65  0571               	andwf	___fleq@ff1+1,w
  8989     1D66  00F9               	movwf	??___fleq+1
  8990     1D67  3080               	movlw	128
  8991     1D68  0572               	andwf	___fleq@ff1+2,w
  8992     1D69  00FA               	movwf	??___fleq+2
  8993     1D6A  307F               	movlw	127
  8994     1D6B  0573               	andwf	___fleq@ff1+3,w
  8995     1D6C  00FB               	movwf	??___fleq+3
  8996     1D6D  087B               	movf	??___fleq+3,w
  8997     1D6E  047A               	iorwf	??___fleq+2,w
  8998     1D6F  0479               	iorwf	??___fleq+1,w
  8999     1D70  0478               	iorwf	??___fleq,w
  9000     1D71  1D03               	skipz
  9001     1D72  2D74               	goto	u5241
  9002     1D73  2D75               	goto	u5240
  9003     1D74                     u5241:
  9004     1D74  2D7D               	goto	l605
  9005     1D75                     u5240:
  9006     1D75                     l3308:
  9007     1D75  3000               	movlw	0
  9008     1D76  00F3               	movwf	___fleq@ff1+3
  9009     1D77  3000               	movlw	0
  9010     1D78  00F2               	movwf	___fleq@ff1+2
  9011     1D79  3000               	movlw	0
  9012     1D7A  00F1               	movwf	___fleq@ff1+1
  9013     1D7B  3000               	movlw	0
  9014     1D7C  00F0               	movwf	___fleq@ff1
  9015     1D7D                     l605:
  9016     1D7D  3000               	movlw	0
  9017     1D7E  0574               	andwf	___fleq@ff2,w
  9018     1D7F  00F8               	movwf	??___fleq
  9019     1D80  3000               	movlw	0
  9020     1D81  0575               	andwf	___fleq@ff2+1,w
  9021     1D82  00F9               	movwf	??___fleq+1
  9022     1D83  3080               	movlw	128
  9023     1D84  0576               	andwf	___fleq@ff2+2,w
  9024     1D85  00FA               	movwf	??___fleq+2
  9025     1D86  307F               	movlw	127
  9026     1D87  0577               	andwf	___fleq@ff2+3,w
  9027     1D88  00FB               	movwf	??___fleq+3
  9028     1D89  087B               	movf	??___fleq+3,w
  9029     1D8A  047A               	iorwf	??___fleq+2,w
  9030     1D8B  0479               	iorwf	??___fleq+1,w
  9031     1D8C  0478               	iorwf	??___fleq,w
  9032     1D8D  1D03               	skipz
  9033     1D8E  2D90               	goto	u5251
  9034     1D8F  2D91               	goto	u5250
  9035     1D90                     u5251:
  9036     1D90  2D99               	goto	l606
  9037     1D91                     u5250:
  9038     1D91                     l3310:
  9039     1D91  3000               	movlw	0
  9040     1D92  00F7               	movwf	___fleq@ff2+3
  9041     1D93  3000               	movlw	0
  9042     1D94  00F6               	movwf	___fleq@ff2+2
  9043     1D95  3000               	movlw	0
  9044     1D96  00F5               	movwf	___fleq@ff2+1
  9045     1D97  3000               	movlw	0
  9046     1D98  00F4               	movwf	___fleq@ff2
  9047     1D99                     l606:
  9048     1D99  0877               	movf	___fleq@ff2+3,w
  9049     1D9A  0673               	xorwf	___fleq@ff1+3,w
  9050     1D9B  1D03               	skipz
  9051     1D9C  2DA7               	goto	u5265
  9052     1D9D  0876               	movf	___fleq@ff2+2,w
  9053     1D9E  0672               	xorwf	___fleq@ff1+2,w
  9054     1D9F  1D03               	skipz
  9055     1DA0  2DA7               	goto	u5265
  9056     1DA1  0875               	movf	___fleq@ff2+1,w
  9057     1DA2  0671               	xorwf	___fleq@ff1+1,w
  9058     1DA3  1D03               	skipz
  9059     1DA4  2DA7               	goto	u5265
  9060     1DA5  0874               	movf	___fleq@ff2,w
  9061     1DA6  0670               	xorwf	___fleq@ff1,w
  9062     1DA7                     u5265:
  9063     1DA7  1903               	skipnz
  9064     1DA8  2DAA               	goto	u5261
  9065     1DA9  2DAB               	goto	u5260
  9066     1DAA                     u5261:
  9067     1DAA  2DAD               	goto	l3314
  9068     1DAB                     u5260:
  9069     1DAB                     l3312:
  9070     1DAB  1003               	clrc
  9071     1DAC  2DAE               	goto	l607
  9072     1DAD                     l3314:
  9073     1DAD  1403               	setc
  9074     1DAE                     l607:
  9075     1DAE  0008               	return
  9076     1DAF                     __end_of___fleq:
  9077                           
  9078                           	psect	text22
  9079     10B4                     __ptext22:	
  9080 ;; *************** function _setupINTOSC *****************
  9081 ;; Defined at:
  9082 ;;		line 10 in file "oscilador.c"
  9083 ;; Parameters:    Size  Location     Type
  9084 ;;  IRCF            1    wreg     unsigned char 
  9085 ;; Auto vars:     Size  Location     Type
  9086 ;;  IRCF            1    0[COMMON] unsigned char 
  9087 ;; Return value:  Size  Location     Type
  9088 ;;                  1    wreg      void 
  9089 ;; Registers used:
  9090 ;;		wreg, status,2, status,0
  9091 ;; Tracked objects:
  9092 ;;		On entry : 0/0
  9093 ;;		On exit  : 0/0
  9094 ;;		Unchanged: 0/0
  9095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9096 ;;      Params:         0       0       0       0       0
  9097 ;;      Locals:         1       0       0       0       0
  9098 ;;      Temps:          0       0       0       0       0
  9099 ;;      Totals:         1       0       0       0       0
  9100 ;;Total ram usage:        1 bytes
  9101 ;; Hardware stack levels used: 1
  9102 ;; This function calls:
  9103 ;;		Nothing
  9104 ;; This function is called by:
  9105 ;;		_main
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109     10B4                     _setupINTOSC:	
  9110                           ;psect for function _setupINTOSC
  9111                           
  9112                           
  9113                           ;incstack = 0
  9114                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  9115                           ;setupINTOSC@IRCF stored from wreg
  9116     10B4  00F0               	movwf	setupINTOSC@IRCF
  9117     10B5                     l3452:
  9118                           
  9119                           ;oscilador.c: 11:     if (IRCF == 7){
  9120     10B5  3007               	movlw	7
  9121     10B6  0670               	xorwf	setupINTOSC@IRCF,w
  9122     10B7  1D03               	btfss	3,2
  9123     10B8  28BA               	goto	u5651
  9124     10B9  28BB               	goto	u5650
  9125     10BA                     u5651:
  9126     10BA  28BF               	goto	l177
  9127     10BB                     u5650:
  9128     10BB                     l3454:
  9129                           
  9130                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  9131     10BB  3070               	movlw	112
  9132     10BC  1683               	bsf	3,5	;RP0=1, select bank1
  9133     10BD  1303               	bcf	3,6	;RP1=0, select bank1
  9134     10BE  048F               	iorwf	15,f	;volatile
  9135     10BF                     l177:	
  9136                           ;oscilador.c: 13:     }
  9137                           
  9138                           
  9139                           ;oscilador.c: 14:     if (IRCF == 6){
  9140     10BF  3006               	movlw	6
  9141     10C0  0670               	xorwf	setupINTOSC@IRCF,w
  9142     10C1  1D03               	btfss	3,2
  9143     10C2  28C4               	goto	u5661
  9144     10C3  28C5               	goto	u5660
  9145     10C4                     u5661:
  9146     10C4  28CB               	goto	l178
  9147     10C5                     u5660:
  9148     10C5                     l3456:
  9149                           
  9150                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  9151     10C5  1683               	bsf	3,5	;RP0=1, select bank1
  9152     10C6  1303               	bcf	3,6	;RP1=0, select bank1
  9153     10C7  080F               	movf	15,w	;volatile
  9154     10C8  398F               	andlw	-113
  9155     10C9  3860               	iorlw	96
  9156     10CA  008F               	movwf	15	;volatile
  9157     10CB                     l178:	
  9158                           ;oscilador.c: 16:     }
  9159                           
  9160                           
  9161                           ;oscilador.c: 17:     if (IRCF == 5){
  9162     10CB  3005               	movlw	5
  9163     10CC  0670               	xorwf	setupINTOSC@IRCF,w
  9164     10CD  1D03               	btfss	3,2
  9165     10CE  28D0               	goto	u5671
  9166     10CF  28D1               	goto	u5670
  9167     10D0                     u5671:
  9168     10D0  28D7               	goto	l179
  9169     10D1                     u5670:
  9170     10D1                     l3458:
  9171                           
  9172                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  9173     10D1  1683               	bsf	3,5	;RP0=1, select bank1
  9174     10D2  1303               	bcf	3,6	;RP1=0, select bank1
  9175     10D3  080F               	movf	15,w	;volatile
  9176     10D4  398F               	andlw	-113
  9177     10D5  3850               	iorlw	80
  9178     10D6  008F               	movwf	15	;volatile
  9179     10D7                     l179:	
  9180                           ;oscilador.c: 19:     }
  9181                           
  9182                           
  9183                           ;oscilador.c: 20:     if (IRCF == 4){
  9184     10D7  3004               	movlw	4
  9185     10D8  0670               	xorwf	setupINTOSC@IRCF,w
  9186     10D9  1D03               	btfss	3,2
  9187     10DA  28DC               	goto	u5681
  9188     10DB  28DD               	goto	u5680
  9189     10DC                     u5681:
  9190     10DC  28E3               	goto	l180
  9191     10DD                     u5680:
  9192     10DD                     l3460:
  9193                           
  9194                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  9195     10DD  1683               	bsf	3,5	;RP0=1, select bank1
  9196     10DE  1303               	bcf	3,6	;RP1=0, select bank1
  9197     10DF  080F               	movf	15,w	;volatile
  9198     10E0  398F               	andlw	-113
  9199     10E1  3840               	iorlw	64
  9200     10E2  008F               	movwf	15	;volatile
  9201     10E3                     l180:	
  9202                           ;oscilador.c: 22:     }
  9203                           
  9204                           
  9205                           ;oscilador.c: 23:     if (IRCF == 3){
  9206     10E3  3003               	movlw	3
  9207     10E4  0670               	xorwf	setupINTOSC@IRCF,w
  9208     10E5  1D03               	btfss	3,2
  9209     10E6  28E8               	goto	u5691
  9210     10E7  28E9               	goto	u5690
  9211     10E8                     u5691:
  9212     10E8  28EF               	goto	l181
  9213     10E9                     u5690:
  9214     10E9                     l3462:
  9215                           
  9216                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  9217     10E9  1683               	bsf	3,5	;RP0=1, select bank1
  9218     10EA  1303               	bcf	3,6	;RP1=0, select bank1
  9219     10EB  080F               	movf	15,w	;volatile
  9220     10EC  398F               	andlw	-113
  9221     10ED  3830               	iorlw	48
  9222     10EE  008F               	movwf	15	;volatile
  9223     10EF                     l181:	
  9224                           ;oscilador.c: 25:     }
  9225                           
  9226                           
  9227                           ;oscilador.c: 26:     if (IRCF == 2){
  9228     10EF  3002               	movlw	2
  9229     10F0  0670               	xorwf	setupINTOSC@IRCF,w
  9230     10F1  1D03               	btfss	3,2
  9231     10F2  28F4               	goto	u5701
  9232     10F3  28F5               	goto	u5700
  9233     10F4                     u5701:
  9234     10F4  28FB               	goto	l182
  9235     10F5                     u5700:
  9236     10F5                     l3464:
  9237                           
  9238                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  9239     10F5  1683               	bsf	3,5	;RP0=1, select bank1
  9240     10F6  1303               	bcf	3,6	;RP1=0, select bank1
  9241     10F7  080F               	movf	15,w	;volatile
  9242     10F8  398F               	andlw	-113
  9243     10F9  3820               	iorlw	32
  9244     10FA  008F               	movwf	15	;volatile
  9245     10FB                     l182:	
  9246                           ;oscilador.c: 28:     }
  9247                           
  9248                           
  9249                           ;oscilador.c: 29:     if (IRCF == 1){
  9250     10FB  0370               	decf	setupINTOSC@IRCF,w
  9251     10FC  1D03               	btfss	3,2
  9252     10FD  28FF               	goto	u5711
  9253     10FE  2900               	goto	u5710
  9254     10FF                     u5711:
  9255     10FF  2906               	goto	l183
  9256     1100                     u5710:
  9257     1100                     l3466:
  9258                           
  9259                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  9260     1100  1683               	bsf	3,5	;RP0=1, select bank1
  9261     1101  1303               	bcf	3,6	;RP1=0, select bank1
  9262     1102  080F               	movf	15,w	;volatile
  9263     1103  398F               	andlw	-113
  9264     1104  3810               	iorlw	16
  9265     1105  008F               	movwf	15	;volatile
  9266     1106                     l183:	
  9267                           ;oscilador.c: 31:     }
  9268                           
  9269                           
  9270                           ;oscilador.c: 32:     if (IRCF == 0){
  9271     1106  0870               	movf	setupINTOSC@IRCF,w
  9272     1107  1D03               	btfss	3,2
  9273     1108  290A               	goto	u5721
  9274     1109  290B               	goto	u5720
  9275     110A                     u5721:
  9276     110A  290F               	goto	l3470
  9277     110B                     u5720:
  9278     110B                     l3468:
  9279                           
  9280                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  9281     110B  308F               	movlw	-113
  9282     110C  1683               	bsf	3,5	;RP0=1, select bank1
  9283     110D  1303               	bcf	3,6	;RP1=0, select bank1
  9284     110E  058F               	andwf	15,f	;volatile
  9285     110F                     l3470:
  9286                           
  9287                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  9288     110F  1683               	bsf	3,5	;RP0=1, select bank1
  9289     1110  1303               	bcf	3,6	;RP1=0, select bank1
  9290     1111  140F               	bsf	15,0	;volatile
  9291     1112                     l185:
  9292     1112  0008               	return
  9293     1113                     __end_of_setupINTOSC:
  9294                           
  9295                           	psect	text23
  9296     1B2E                     __ptext23:	
  9297 ;; *************** function _portsetup *****************
  9298 ;; Defined at:
  9299 ;;		line 79 in file "main.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;		None
  9302 ;; Auto vars:     Size  Location     Type
  9303 ;;		None
  9304 ;; Return value:  Size  Location     Type
  9305 ;;                  1    wreg      void 
  9306 ;; Registers used:
  9307 ;;		wreg, status,2, status,0, pclath, cstack
  9308 ;; Tracked objects:
  9309 ;;		On entry : 0/0
  9310 ;;		On exit  : 0/0
  9311 ;;		Unchanged: 0/0
  9312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9313 ;;      Params:         0       0       0       0       0
  9314 ;;      Locals:         0       0       0       0       0
  9315 ;;      Temps:          0       0       0       0       0
  9316 ;;      Totals:         0       0       0       0       0
  9317 ;;Total ram usage:        0 bytes
  9318 ;; Hardware stack levels used: 1
  9319 ;; Hardware stack levels required when called: 2
  9320 ;; This function calls:
  9321 ;;		_I2C_Master_Init
  9322 ;; This function is called by:
  9323 ;;		_main
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327     1B2E                     _portsetup:	
  9328                           ;psect for function _portsetup
  9329                           
  9330     1B2E                     l3472:	
  9331                           ;incstack = 0
  9332                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  9333                           
  9334                           
  9335                           ;main.c: 80:     ANSEL = 0;
  9336     1B2E  1683               	bsf	3,5	;RP0=1, select bank3
  9337     1B2F  1703               	bsf	3,6	;RP1=1, select bank3
  9338     1B30  0188               	clrf	8	;volatile
  9339                           
  9340                           ;main.c: 81:     ANSELH = 0;
  9341     1B31  0189               	clrf	9	;volatile
  9342                           
  9343                           ;main.c: 82:     TRISA = 0;
  9344     1B32  1683               	bsf	3,5	;RP0=1, select bank1
  9345     1B33  1303               	bcf	3,6	;RP1=0, select bank1
  9346     1B34  0185               	clrf	5	;volatile
  9347                           
  9348                           ;main.c: 83:     PORTA = 0;
  9349     1B35  1283               	bcf	3,5	;RP0=0, select bank0
  9350     1B36  1303               	bcf	3,6	;RP1=0, select bank0
  9351     1B37  0185               	clrf	5	;volatile
  9352                           
  9353                           ;main.c: 84:     TRISD = 0;
  9354     1B38  1683               	bsf	3,5	;RP0=1, select bank1
  9355     1B39  1303               	bcf	3,6	;RP1=0, select bank1
  9356     1B3A  0188               	clrf	8	;volatile
  9357                           
  9358                           ;main.c: 85:     PORTD = 0;
  9359     1B3B  1283               	bcf	3,5	;RP0=0, select bank0
  9360     1B3C  1303               	bcf	3,6	;RP1=0, select bank0
  9361     1B3D  0188               	clrf	8	;volatile
  9362                           
  9363                           ;main.c: 86:     TRISB = 0;
  9364     1B3E  1683               	bsf	3,5	;RP0=1, select bank1
  9365     1B3F  1303               	bcf	3,6	;RP1=0, select bank1
  9366     1B40  0186               	clrf	6	;volatile
  9367                           
  9368                           ;main.c: 87:     PORTB = 0;
  9369     1B41  1283               	bcf	3,5	;RP0=0, select bank0
  9370     1B42  1303               	bcf	3,6	;RP1=0, select bank0
  9371     1B43  0186               	clrf	6	;volatile
  9372     1B44                     l3474:
  9373                           
  9374                           ;main.c: 88:     I2C_Master_Init(100000);
  9375     1B44  3000               	movlw	0
  9376     1B45  00A3               	movwf	I2C_Master_Init@c+3
  9377     1B46  3001               	movlw	1
  9378     1B47  00A2               	movwf	I2C_Master_Init@c+2
  9379     1B48  3086               	movlw	134
  9380     1B49  00A1               	movwf	I2C_Master_Init@c+1
  9381     1B4A  30A0               	movlw	160
  9382     1B4B  00A0               	movwf	I2C_Master_Init@c
  9383     1B4C  160A  158A  2423  160A  158A  	fcall	_I2C_Master_Init
  9384     1B51                     l59:
  9385     1B51  0008               	return
  9386     1B52                     __end_of_portsetup:
  9387                           
  9388                           	psect	text24
  9389     1C23                     __ptext24:	
  9390 ;; *************** function _I2C_Master_Init *****************
  9391 ;; Defined at:
  9392 ;;		line 16 in file "I2C.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;  c               4    0[BANK0 ] const unsigned long 
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;		None
  9397 ;; Return value:  Size  Location     Type
  9398 ;;                  1    wreg      void 
  9399 ;; Registers used:
  9400 ;;		wreg, status,2, status,0, pclath, cstack
  9401 ;; Tracked objects:
  9402 ;;		On entry : 0/0
  9403 ;;		On exit  : 0/0
  9404 ;;		Unchanged: 0/0
  9405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9406 ;;      Params:         0       4       0       0       0
  9407 ;;      Locals:         0       0       0       0       0
  9408 ;;      Temps:          0       4       0       0       0
  9409 ;;      Totals:         0       8       0       0       0
  9410 ;;Total ram usage:        8 bytes
  9411 ;; Hardware stack levels used: 1
  9412 ;; Hardware stack levels required when called: 1
  9413 ;; This function calls:
  9414 ;;		___lldiv
  9415 ;; This function is called by:
  9416 ;;		_portsetup
  9417 ;; This function uses a non-reentrant model
  9418 ;;
  9419                           
  9420     1C23                     _I2C_Master_Init:	
  9421                           ;psect for function _I2C_Master_Init
  9422                           
  9423     1C23                     l3072:	
  9424                           ;incstack = 0
  9425                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  9426                           
  9427                           
  9428                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  9429     1C23  3028               	movlw	40
  9430     1C24  1283               	bcf	3,5	;RP0=0, select bank0
  9431     1C25  1303               	bcf	3,6	;RP1=0, select bank0
  9432     1C26  0094               	movwf	20	;volatile
  9433     1C27                     l3074:
  9434                           
  9435                           ;I2C.c: 19:     SSPCON2 = 0;
  9436     1C27  1683               	bsf	3,5	;RP0=1, select bank1
  9437     1C28  1303               	bcf	3,6	;RP1=0, select bank1
  9438     1C29  0191               	clrf	17	;volatile
  9439     1C2A                     l3076:
  9440                           
  9441                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  9442     1C2A  1283               	bcf	3,5	;RP0=0, select bank0
  9443     1C2B  1303               	bcf	3,6	;RP1=0, select bank0
  9444     1C2C  0820               	movf	I2C_Master_Init@c,w
  9445     1C2D  00A4               	movwf	??_I2C_Master_Init
  9446     1C2E  0821               	movf	I2C_Master_Init@c+1,w
  9447     1C2F  00A5               	movwf	??_I2C_Master_Init+1
  9448     1C30  0822               	movf	I2C_Master_Init@c+2,w
  9449     1C31  00A6               	movwf	??_I2C_Master_Init+2
  9450     1C32  0823               	movf	I2C_Master_Init@c+3,w
  9451     1C33  00A7               	movwf	??_I2C_Master_Init+3
  9452     1C34  3002               	movlw	2
  9453     1C35                     u4635:
  9454     1C35  1003               	clrc
  9455     1C36  0DA4               	rlf	??_I2C_Master_Init,f
  9456     1C37  0DA5               	rlf	??_I2C_Master_Init+1,f
  9457     1C38  0DA6               	rlf	??_I2C_Master_Init+2,f
  9458     1C39  0DA7               	rlf	??_I2C_Master_Init+3,f
  9459     1C3A                     u4630:
  9460     1C3A  3EFF               	addlw	-1
  9461     1C3B  1D03               	skipz
  9462     1C3C  2C35               	goto	u4635
  9463     1C3D  0827               	movf	??_I2C_Master_Init+3,w
  9464     1C3E  00F3               	movwf	___lldiv@divisor+3
  9465     1C3F  0826               	movf	??_I2C_Master_Init+2,w
  9466     1C40  00F2               	movwf	___lldiv@divisor+2
  9467     1C41  0825               	movf	??_I2C_Master_Init+1,w
  9468     1C42  00F1               	movwf	___lldiv@divisor+1
  9469     1C43  0824               	movf	??_I2C_Master_Init,w
  9470     1C44  00F0               	movwf	___lldiv@divisor
  9471     1C45  3000               	movlw	0
  9472     1C46  00F7               	movwf	___lldiv@dividend+3
  9473     1C47  307A               	movlw	122
  9474     1C48  00F6               	movwf	___lldiv@dividend+2
  9475     1C49  3012               	movlw	18
  9476     1C4A  00F5               	movwf	___lldiv@dividend+1
  9477     1C4B  3000               	movlw	0
  9478     1C4C  00F4               	movwf	___lldiv@dividend
  9479     1C4D  160A  158A  26B9  160A  158A  	fcall	___lldiv
  9480     1C52  0870               	movf	?___lldiv,w
  9481     1C53  3EFF               	addlw	255
  9482     1C54  1683               	bsf	3,5	;RP0=1, select bank1
  9483     1C55  1303               	bcf	3,6	;RP1=0, select bank1
  9484     1C56  0093               	movwf	19	;volatile
  9485     1C57                     l3078:
  9486                           
  9487                           ;I2C.c: 21:     SSPSTAT = 0;
  9488     1C57  0194               	clrf	20	;volatile
  9489     1C58                     l3080:
  9490                           
  9491                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  9492     1C58  1587               	bsf	7,3	;volatile
  9493     1C59                     l3082:
  9494                           
  9495                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  9496     1C59  1607               	bsf	7,4	;volatile
  9497     1C5A                     l214:
  9498     1C5A  0008               	return
  9499     1C5B                     __end_of_I2C_Master_Init:
  9500                           
  9501                           	psect	text25
  9502     1EB9                     __ptext25:	
  9503 ;; *************** function ___lldiv *****************
  9504 ;; Defined at:
  9505 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;  divisor         4    0[COMMON] unsigned long 
  9508 ;;  dividend        4    4[COMMON] unsigned long 
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;  quotient        4    9[COMMON] unsigned long 
  9511 ;;  counter         1   13[COMMON] unsigned char 
  9512 ;; Return value:  Size  Location     Type
  9513 ;;                  4    0[COMMON] unsigned long 
  9514 ;; Registers used:
  9515 ;;		wreg, status,2, status,0
  9516 ;; Tracked objects:
  9517 ;;		On entry : 0/0
  9518 ;;		On exit  : 0/0
  9519 ;;		Unchanged: 0/0
  9520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9521 ;;      Params:         8       0       0       0       0
  9522 ;;      Locals:         5       0       0       0       0
  9523 ;;      Temps:          1       0       0       0       0
  9524 ;;      Totals:        14       0       0       0       0
  9525 ;;Total ram usage:       14 bytes
  9526 ;; Hardware stack levels used: 1
  9527 ;; This function calls:
  9528 ;;		Nothing
  9529 ;; This function is called by:
  9530 ;;		_I2C_Master_Init
  9531 ;;		_sprintf
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535     1EB9                     ___lldiv:	
  9536                           ;psect for function ___lldiv
  9537                           
  9538     1EB9                     l2584:	
  9539                           ;incstack = 0
  9540                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9541                           
  9542     1EB9  3000               	movlw	0
  9543     1EBA  00FC               	movwf	___lldiv@quotient+3
  9544     1EBB  3000               	movlw	0
  9545     1EBC  00FB               	movwf	___lldiv@quotient+2
  9546     1EBD  3000               	movlw	0
  9547     1EBE  00FA               	movwf	___lldiv@quotient+1
  9548     1EBF  3000               	movlw	0
  9549     1EC0  00F9               	movwf	___lldiv@quotient
  9550     1EC1  0873               	movf	___lldiv@divisor+3,w
  9551     1EC2  0472               	iorwf	___lldiv@divisor+2,w
  9552     1EC3  0471               	iorwf	___lldiv@divisor+1,w
  9553     1EC4  0470               	iorwf	___lldiv@divisor,w
  9554     1EC5  1903               	skipnz
  9555     1EC6  2EC8               	goto	u3411
  9556     1EC7  2EC9               	goto	u3410
  9557     1EC8                     u3411:
  9558     1EC8  2F16               	goto	l2604
  9559     1EC9                     u3410:
  9560     1EC9                     l2586:
  9561     1EC9  01FD               	clrf	___lldiv@counter
  9562     1ECA  0AFD               	incf	___lldiv@counter,f
  9563     1ECB  2ED9               	goto	l2590
  9564     1ECC                     l2588:
  9565     1ECC  3001               	movlw	1
  9566     1ECD  00F8               	movwf	??___lldiv
  9567     1ECE                     u3425:
  9568     1ECE  1003               	clrc
  9569     1ECF  0DF0               	rlf	___lldiv@divisor,f
  9570     1ED0  0DF1               	rlf	___lldiv@divisor+1,f
  9571     1ED1  0DF2               	rlf	___lldiv@divisor+2,f
  9572     1ED2  0DF3               	rlf	___lldiv@divisor+3,f
  9573     1ED3  0BF8               	decfsz	??___lldiv,f
  9574     1ED4  2ECE               	goto	u3425
  9575     1ED5  3001               	movlw	1
  9576     1ED6  00F8               	movwf	??___lldiv
  9577     1ED7  0878               	movf	??___lldiv,w
  9578     1ED8  07FD               	addwf	___lldiv@counter,f
  9579     1ED9                     l2590:
  9580     1ED9  1FF3               	btfss	___lldiv@divisor+3,7
  9581     1EDA  2EDC               	goto	u3431
  9582     1EDB  2EDD               	goto	u3430
  9583     1EDC                     u3431:
  9584     1EDC  2ECC               	goto	l2588
  9585     1EDD                     u3430:
  9586     1EDD                     l2592:
  9587     1EDD  3001               	movlw	1
  9588     1EDE  00F8               	movwf	??___lldiv
  9589     1EDF                     u3445:
  9590     1EDF  1003               	clrc
  9591     1EE0  0DF9               	rlf	___lldiv@quotient,f
  9592     1EE1  0DFA               	rlf	___lldiv@quotient+1,f
  9593     1EE2  0DFB               	rlf	___lldiv@quotient+2,f
  9594     1EE3  0DFC               	rlf	___lldiv@quotient+3,f
  9595     1EE4  0BF8               	decfsz	??___lldiv,f
  9596     1EE5  2EDF               	goto	u3445
  9597     1EE6                     l2594:
  9598     1EE6  0873               	movf	___lldiv@divisor+3,w
  9599     1EE7  0277               	subwf	___lldiv@dividend+3,w
  9600     1EE8  1D03               	skipz
  9601     1EE9  2EF4               	goto	u3455
  9602     1EEA  0872               	movf	___lldiv@divisor+2,w
  9603     1EEB  0276               	subwf	___lldiv@dividend+2,w
  9604     1EEC  1D03               	skipz
  9605     1EED  2EF4               	goto	u3455
  9606     1EEE  0871               	movf	___lldiv@divisor+1,w
  9607     1EEF  0275               	subwf	___lldiv@dividend+1,w
  9608     1EF0  1D03               	skipz
  9609     1EF1  2EF4               	goto	u3455
  9610     1EF2  0870               	movf	___lldiv@divisor,w
  9611     1EF3  0274               	subwf	___lldiv@dividend,w
  9612     1EF4                     u3455:
  9613     1EF4  1C03               	skipc
  9614     1EF5  2EF7               	goto	u3451
  9615     1EF6  2EF8               	goto	u3450
  9616     1EF7                     u3451:
  9617     1EF7  2F07               	goto	l2600
  9618     1EF8                     u3450:
  9619     1EF8                     l2596:
  9620     1EF8  0870               	movf	___lldiv@divisor,w
  9621     1EF9  02F4               	subwf	___lldiv@dividend,f
  9622     1EFA  0871               	movf	___lldiv@divisor+1,w
  9623     1EFB  1C03               	skipc
  9624     1EFC  0F71               	incfsz	___lldiv@divisor+1,w
  9625     1EFD  02F5               	subwf	___lldiv@dividend+1,f
  9626     1EFE  0872               	movf	___lldiv@divisor+2,w
  9627     1EFF  1C03               	skipc
  9628     1F00  0F72               	incfsz	___lldiv@divisor+2,w
  9629     1F01  02F6               	subwf	___lldiv@dividend+2,f
  9630     1F02  0873               	movf	___lldiv@divisor+3,w
  9631     1F03  1C03               	skipc
  9632     1F04  0F73               	incfsz	___lldiv@divisor+3,w
  9633     1F05  02F7               	subwf	___lldiv@dividend+3,f
  9634     1F06                     l2598:
  9635     1F06  1479               	bsf	___lldiv@quotient,0
  9636     1F07                     l2600:
  9637     1F07  3001               	movlw	1
  9638     1F08                     u3465:
  9639     1F08  1003               	clrc
  9640     1F09  0CF3               	rrf	___lldiv@divisor+3,f
  9641     1F0A  0CF2               	rrf	___lldiv@divisor+2,f
  9642     1F0B  0CF1               	rrf	___lldiv@divisor+1,f
  9643     1F0C  0CF0               	rrf	___lldiv@divisor,f
  9644     1F0D  3EFF               	addlw	-1
  9645     1F0E  1D03               	skipz
  9646     1F0F  2F08               	goto	u3465
  9647     1F10                     l2602:
  9648     1F10  3001               	movlw	1
  9649     1F11  02FD               	subwf	___lldiv@counter,f
  9650     1F12  1D03               	btfss	3,2
  9651     1F13  2F15               	goto	u3471
  9652     1F14  2F16               	goto	u3470
  9653     1F15                     u3471:
  9654     1F15  2EDD               	goto	l2592
  9655     1F16                     u3470:
  9656     1F16                     l2604:
  9657     1F16  087C               	movf	___lldiv@quotient+3,w
  9658     1F17  00F3               	movwf	?___lldiv+3
  9659     1F18  087B               	movf	___lldiv@quotient+2,w
  9660     1F19  00F2               	movwf	?___lldiv+2
  9661     1F1A  087A               	movf	___lldiv@quotient+1,w
  9662     1F1B  00F1               	movwf	?___lldiv+1
  9663     1F1C  0879               	movf	___lldiv@quotient,w
  9664     1F1D  00F0               	movwf	?___lldiv
  9665     1F1E                     l455:
  9666     1F1E  0008               	return
  9667     1F1F                     __end_of___lldiv:
  9668                           
  9669                           	psect	text26
  9670     11CA                     __ptext26:	
  9671 ;; *************** function ___fldiv *****************
  9672 ;; Defined at:
  9673 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
  9674 ;; Parameters:    Size  Location     Type
  9675 ;;  a               4   30[BANK0 ] unsigned long 
  9676 ;;  b               4   34[BANK0 ] unsigned long 
  9677 ;; Auto vars:     Size  Location     Type
  9678 ;;  grs             4   50[BANK0 ] unsigned long 
  9679 ;;  rem             4   43[BANK0 ] unsigned long 
  9680 ;;  new_exp         2   48[BANK0 ] int 
  9681 ;;  aexp            1   55[BANK0 ] unsigned char 
  9682 ;;  bexp            1   54[BANK0 ] unsigned char 
  9683 ;;  sign            1   47[BANK0 ] unsigned char 
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  4   30[BANK0 ] unsigned char 
  9686 ;; Registers used:
  9687 ;;		wreg, status,2, status,0, btemp+1
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9693 ;;      Params:         0       8       0       0       0
  9694 ;;      Locals:         0      13       0       0       0
  9695 ;;      Temps:          0       5       0       0       0
  9696 ;;      Totals:         0      26       0       0       0
  9697 ;;Total ram usage:       26 bytes
  9698 ;; Hardware stack levels used: 1
  9699 ;; This function calls:
  9700 ;;		Nothing
  9701 ;; This function is called by:
  9702 ;;		_main
  9703 ;; This function uses a non-reentrant model
  9704 ;;
  9705                           
  9706     11CA                     ___fldiv:	
  9707                           ;psect for function ___fldiv
  9708                           
  9709     11CA                     l3750:	
  9710                           ;incstack = 0
  9711                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9712                           
  9713     11CA  1283               	bcf	3,5	;RP0=0, select bank0
  9714     11CB  1303               	bcf	3,6	;RP1=0, select bank0
  9715     11CC  0845               	movf	___fldiv@b+3,w
  9716     11CD  3980               	andlw	128
  9717     11CE  00CF               	movwf	___fldiv@sign
  9718     11CF                     l3752:
  9719     11CF  0845               	movf	___fldiv@b+3,w
  9720     11D0  00C6               	movwf	??___fldiv
  9721     11D1  0746               	addwf	??___fldiv,w
  9722     11D2  00D6               	movwf	___fldiv@bexp
  9723     11D3                     l3754:
  9724     11D3  1FC4               	btfss	___fldiv@b+2,7
  9725     11D4  29D6               	goto	u6161
  9726     11D5  29D7               	goto	u6160
  9727     11D6                     u6161:
  9728     11D6  29D8               	goto	l3758
  9729     11D7                     u6160:
  9730     11D7                     l3756:
  9731     11D7  1456               	bsf	___fldiv@bexp,0
  9732     11D8                     l3758:
  9733     11D8  0856               	movf	___fldiv@bexp,w
  9734     11D9  1903               	btfsc	3,2
  9735     11DA  29DC               	goto	u6171
  9736     11DB  29DD               	goto	u6170
  9737     11DC                     u6171:
  9738     11DC  29ED               	goto	l3768
  9739     11DD                     u6170:
  9740     11DD                     l3760:
  9741     11DD  0A56               	incf	___fldiv@bexp,w
  9742     11DE  1D03               	btfss	3,2
  9743     11DF  29E1               	goto	u6181
  9744     11E0  29E2               	goto	u6180
  9745     11E1                     u6181:
  9746     11E1  29EA               	goto	l3764
  9747     11E2                     u6180:
  9748     11E2                     l3762:
  9749     11E2  3000               	movlw	0
  9750     11E3  00C5               	movwf	___fldiv@b+3
  9751     11E4  3000               	movlw	0
  9752     11E5  00C4               	movwf	___fldiv@b+2
  9753     11E6  3000               	movlw	0
  9754     11E7  00C3               	movwf	___fldiv@b+1
  9755     11E8  3000               	movlw	0
  9756     11E9  00C2               	movwf	___fldiv@b
  9757     11EA                     l3764:
  9758     11EA  17C4               	bsf	___fldiv@b+2,7
  9759     11EB                     l3766:
  9760     11EB  01C5               	clrf	___fldiv@b+3
  9761     11EC  29F5               	goto	l3770
  9762     11ED                     l3768:
  9763     11ED  3000               	movlw	0
  9764     11EE  00C5               	movwf	___fldiv@b+3
  9765     11EF  3000               	movlw	0
  9766     11F0  00C4               	movwf	___fldiv@b+2
  9767     11F1  3000               	movlw	0
  9768     11F2  00C3               	movwf	___fldiv@b+1
  9769     11F3  3000               	movlw	0
  9770     11F4  00C2               	movwf	___fldiv@b
  9771     11F5                     l3770:
  9772     11F5  0841               	movf	___fldiv@a+3,w
  9773     11F6  3980               	andlw	128
  9774     11F7  00C6               	movwf	??___fldiv
  9775     11F8  0846               	movf	??___fldiv,w
  9776     11F9  06CF               	xorwf	___fldiv@sign,f
  9777     11FA                     l3772:
  9778     11FA  0841               	movf	___fldiv@a+3,w
  9779     11FB  00C6               	movwf	??___fldiv
  9780     11FC  0746               	addwf	??___fldiv,w
  9781     11FD  00D7               	movwf	___fldiv@aexp
  9782     11FE                     l3774:
  9783     11FE  1FC0               	btfss	___fldiv@a+2,7
  9784     11FF  2A01               	goto	u6191
  9785     1200  2A02               	goto	u6190
  9786     1201                     u6191:
  9787     1201  2A03               	goto	l3778
  9788     1202                     u6190:
  9789     1202                     l3776:
  9790     1202  1457               	bsf	___fldiv@aexp,0
  9791     1203                     l3778:
  9792     1203  0857               	movf	___fldiv@aexp,w
  9793     1204  1903               	btfsc	3,2
  9794     1205  2A07               	goto	u6201
  9795     1206  2A08               	goto	u6200
  9796     1207                     u6201:
  9797     1207  2A18               	goto	l3788
  9798     1208                     u6200:
  9799     1208                     l3780:
  9800     1208  0A57               	incf	___fldiv@aexp,w
  9801     1209  1D03               	btfss	3,2
  9802     120A  2A0C               	goto	u6211
  9803     120B  2A0D               	goto	u6210
  9804     120C                     u6211:
  9805     120C  2A15               	goto	l3784
  9806     120D                     u6210:
  9807     120D                     l3782:
  9808     120D  3000               	movlw	0
  9809     120E  00C1               	movwf	___fldiv@a+3
  9810     120F  3000               	movlw	0
  9811     1210  00C0               	movwf	___fldiv@a+2
  9812     1211  3000               	movlw	0
  9813     1212  00BF               	movwf	___fldiv@a+1
  9814     1213  3000               	movlw	0
  9815     1214  00BE               	movwf	___fldiv@a
  9816     1215                     l3784:
  9817     1215  17C0               	bsf	___fldiv@a+2,7
  9818     1216                     l3786:
  9819     1216  01C1               	clrf	___fldiv@a+3
  9820     1217  2A20               	goto	l802
  9821     1218                     l3788:
  9822     1218  3000               	movlw	0
  9823     1219  00C1               	movwf	___fldiv@a+3
  9824     121A  3000               	movlw	0
  9825     121B  00C0               	movwf	___fldiv@a+2
  9826     121C  3000               	movlw	0
  9827     121D  00BF               	movwf	___fldiv@a+1
  9828     121E  3000               	movlw	0
  9829     121F  00BE               	movwf	___fldiv@a
  9830     1220                     l802:
  9831     1220  0841               	movf	___fldiv@a+3,w
  9832     1221  0440               	iorwf	___fldiv@a+2,w
  9833     1222  043F               	iorwf	___fldiv@a+1,w
  9834     1223  043E               	iorwf	___fldiv@a,w
  9835     1224  1D03               	skipz
  9836     1225  2A27               	goto	u6221
  9837     1226  2A28               	goto	u6220
  9838     1227                     u6221:
  9839     1227  2A41               	goto	l3798
  9840     1228                     u6220:
  9841     1228                     l3790:
  9842     1228  3000               	movlw	0
  9843     1229  00C5               	movwf	___fldiv@b+3
  9844     122A  3000               	movlw	0
  9845     122B  00C4               	movwf	___fldiv@b+2
  9846     122C  3000               	movlw	0
  9847     122D  00C3               	movwf	___fldiv@b+1
  9848     122E  3000               	movlw	0
  9849     122F  00C2               	movwf	___fldiv@b
  9850     1230  3080               	movlw	128
  9851     1231  04C4               	iorwf	___fldiv@b+2,f
  9852     1232  307F               	movlw	127
  9853     1233  04C5               	iorwf	___fldiv@b+3,f
  9854     1234                     l3792:
  9855     1234  084F               	movf	___fldiv@sign,w
  9856     1235  00C6               	movwf	??___fldiv
  9857     1236  0846               	movf	??___fldiv,w
  9858     1237  04C5               	iorwf	___fldiv@b+3,f
  9859     1238                     l3794:
  9860     1238  0845               	movf	___fldiv@b+3,w
  9861     1239  00C1               	movwf	?___fldiv+3
  9862     123A  0844               	movf	___fldiv@b+2,w
  9863     123B  00C0               	movwf	?___fldiv+2
  9864     123C  0843               	movf	___fldiv@b+1,w
  9865     123D  00BF               	movwf	?___fldiv+1
  9866     123E  0842               	movf	___fldiv@b,w
  9867     123F  00BE               	movwf	?___fldiv
  9868     1240  2B9C               	goto	l804
  9869     1241                     l3798:
  9870     1241  0856               	movf	___fldiv@bexp,w
  9871     1242  1D03               	btfss	3,2
  9872     1243  2A45               	goto	u6231
  9873     1244  2A46               	goto	u6230
  9874     1245                     u6231:
  9875     1245  2A4F               	goto	l3804
  9876     1246                     u6230:
  9877     1246                     l3800:
  9878     1246  3000               	movlw	0
  9879     1247  00C1               	movwf	?___fldiv+3
  9880     1248  3000               	movlw	0
  9881     1249  00C0               	movwf	?___fldiv+2
  9882     124A  3000               	movlw	0
  9883     124B  00BF               	movwf	?___fldiv+1
  9884     124C  3000               	movlw	0
  9885     124D  00BE               	movwf	?___fldiv
  9886     124E  2B9C               	goto	l804
  9887     124F                     l3804:
  9888     124F  0856               	movf	___fldiv@bexp,w
  9889     1250  00C6               	movwf	??___fldiv
  9890     1251  01C7               	clrf	??___fldiv+1
  9891     1252  0847               	movf	??___fldiv+1,w
  9892     1253  00C9               	movwf	??___fldiv+3
  9893     1254  0857               	movf	___fldiv@aexp,w
  9894     1255  0246               	subwf	??___fldiv,w
  9895     1256  00C8               	movwf	??___fldiv+2
  9896     1257  1C03               	skipc
  9897     1258  03C9               	decf	??___fldiv+3,f
  9898     1259  0848               	movf	??___fldiv+2,w
  9899     125A  3E7F               	addlw	127
  9900     125B  00D0               	movwf	___fldiv@new_exp
  9901     125C  0849               	movf	??___fldiv+3,w
  9902     125D  1803               	skipnc
  9903     125E  3E01               	addlw	1
  9904     125F  3E00               	addlw	0
  9905     1260  00D1               	movwf	___fldiv@new_exp+1
  9906     1261                     l3806:
  9907     1261  0845               	movf	___fldiv@b+3,w
  9908     1262  00CE               	movwf	___fldiv@rem+3
  9909     1263  0844               	movf	___fldiv@b+2,w
  9910     1264  00CD               	movwf	___fldiv@rem+2
  9911     1265  0843               	movf	___fldiv@b+1,w
  9912     1266  00CC               	movwf	___fldiv@rem+1
  9913     1267  0842               	movf	___fldiv@b,w
  9914     1268  00CB               	movwf	___fldiv@rem
  9915     1269                     l3808:
  9916     1269  3000               	movlw	0
  9917     126A  00C5               	movwf	___fldiv@b+3
  9918     126B  3000               	movlw	0
  9919     126C  00C4               	movwf	___fldiv@b+2
  9920     126D  3000               	movlw	0
  9921     126E  00C3               	movwf	___fldiv@b+1
  9922     126F  3000               	movlw	0
  9923     1270  00C2               	movwf	___fldiv@b
  9924     1271                     l3810:
  9925     1271  3000               	movlw	0
  9926     1272  00D5               	movwf	___fldiv@grs+3
  9927     1273  3000               	movlw	0
  9928     1274  00D4               	movwf	___fldiv@grs+2
  9929     1275  3000               	movlw	0
  9930     1276  00D3               	movwf	___fldiv@grs+1
  9931     1277  3000               	movlw	0
  9932     1278  00D2               	movwf	___fldiv@grs
  9933     1279                     l3812:
  9934     1279  01D7               	clrf	___fldiv@aexp
  9935     127A  2AC5               	goto	l3832
  9936     127B                     l3814:
  9937     127B  0857               	movf	___fldiv@aexp,w
  9938     127C  1903               	btfsc	3,2
  9939     127D  2A7F               	goto	u6241
  9940     127E  2A80               	goto	u6240
  9941     127F                     u6241:
  9942     127F  2AA0               	goto	l3824
  9943     1280                     u6240:
  9944     1280                     l3816:
  9945     1280  3001               	movlw	1
  9946     1281  00C6               	movwf	??___fldiv
  9947     1282                     u6255:
  9948     1282  1003               	clrc
  9949     1283  0DCB               	rlf	___fldiv@rem,f
  9950     1284  0DCC               	rlf	___fldiv@rem+1,f
  9951     1285  0DCD               	rlf	___fldiv@rem+2,f
  9952     1286  0DCE               	rlf	___fldiv@rem+3,f
  9953     1287  0BC6               	decfsz	??___fldiv,f
  9954     1288  2A82               	goto	u6255
  9955     1289  3001               	movlw	1
  9956     128A  00C6               	movwf	??___fldiv
  9957     128B                     u6265:
  9958     128B  1003               	clrc
  9959     128C  0DC2               	rlf	___fldiv@b,f
  9960     128D  0DC3               	rlf	___fldiv@b+1,f
  9961     128E  0DC4               	rlf	___fldiv@b+2,f
  9962     128F  0DC5               	rlf	___fldiv@b+3,f
  9963     1290  0BC6               	decfsz	??___fldiv,f
  9964     1291  2A8B               	goto	u6265
  9965     1292                     l3818:
  9966     1292  1FD5               	btfss	___fldiv@grs+3,7
  9967     1293  2A95               	goto	u6271
  9968     1294  2A96               	goto	u6270
  9969     1295                     u6271:
  9970     1295  2A97               	goto	l3822
  9971     1296                     u6270:
  9972     1296                     l3820:
  9973     1296  1442               	bsf	___fldiv@b,0
  9974     1297                     l3822:
  9975     1297  3001               	movlw	1
  9976     1298  00C6               	movwf	??___fldiv
  9977     1299                     u6285:
  9978     1299  1003               	clrc
  9979     129A  0DD2               	rlf	___fldiv@grs,f
  9980     129B  0DD3               	rlf	___fldiv@grs+1,f
  9981     129C  0DD4               	rlf	___fldiv@grs+2,f
  9982     129D  0DD5               	rlf	___fldiv@grs+3,f
  9983     129E  0BC6               	decfsz	??___fldiv,f
  9984     129F  2A99               	goto	u6285
  9985     12A0                     l3824:
  9986     12A0  0841               	movf	___fldiv@a+3,w
  9987     12A1  024E               	subwf	___fldiv@rem+3,w
  9988     12A2  1D03               	skipz
  9989     12A3  2AAE               	goto	u6295
  9990     12A4  0840               	movf	___fldiv@a+2,w
  9991     12A5  024D               	subwf	___fldiv@rem+2,w
  9992     12A6  1D03               	skipz
  9993     12A7  2AAE               	goto	u6295
  9994     12A8  083F               	movf	___fldiv@a+1,w
  9995     12A9  024C               	subwf	___fldiv@rem+1,w
  9996     12AA  1D03               	skipz
  9997     12AB  2AAE               	goto	u6295
  9998     12AC  083E               	movf	___fldiv@a,w
  9999     12AD  024B               	subwf	___fldiv@rem,w
 10000     12AE                     u6295:
 10001     12AE  1C03               	skipc
 10002     12AF  2AB1               	goto	u6291
 10003     12B0  2AB2               	goto	u6290
 10004     12B1                     u6291:
 10005     12B1  2AC1               	goto	l3830
 10006     12B2                     u6290:
 10007     12B2                     l3826:
 10008     12B2  1755               	bsf	___fldiv@grs+3,6
 10009     12B3                     l3828:
 10010     12B3  083E               	movf	___fldiv@a,w
 10011     12B4  02CB               	subwf	___fldiv@rem,f
 10012     12B5  083F               	movf	___fldiv@a+1,w
 10013     12B6  1C03               	skipc
 10014     12B7  0F3F               	incfsz	___fldiv@a+1,w
 10015     12B8  02CC               	subwf	___fldiv@rem+1,f
 10016     12B9  0840               	movf	___fldiv@a+2,w
 10017     12BA  1C03               	skipc
 10018     12BB  0F40               	incfsz	___fldiv@a+2,w
 10019     12BC  02CD               	subwf	___fldiv@rem+2,f
 10020     12BD  0841               	movf	___fldiv@a+3,w
 10021     12BE  1C03               	skipc
 10022     12BF  0F41               	incfsz	___fldiv@a+3,w
 10023     12C0  02CE               	subwf	___fldiv@rem+3,f
 10024     12C1                     l3830:
 10025     12C1  3001               	movlw	1
 10026     12C2  00C6               	movwf	??___fldiv
 10027     12C3  0846               	movf	??___fldiv,w
 10028     12C4  07D7               	addwf	___fldiv@aexp,f
 10029     12C5                     l3832:
 10030     12C5  301A               	movlw	26
 10031     12C6  0257               	subwf	___fldiv@aexp,w
 10032     12C7  1C03               	skipc
 10033     12C8  2ACA               	goto	u6301
 10034     12C9  2ACB               	goto	u6300
 10035     12CA                     u6301:
 10036     12CA  2A7B               	goto	l3814
 10037     12CB                     u6300:
 10038     12CB                     l3834:
 10039     12CB  084E               	movf	___fldiv@rem+3,w
 10040     12CC  044D               	iorwf	___fldiv@rem+2,w
 10041     12CD  044C               	iorwf	___fldiv@rem+1,w
 10042     12CE  044B               	iorwf	___fldiv@rem,w
 10043     12CF  1903               	skipnz
 10044     12D0  2AD2               	goto	u6311
 10045     12D1  2AD3               	goto	u6310
 10046     12D2                     u6311:
 10047     12D2  2AF2               	goto	l3848
 10048     12D3                     u6310:
 10049     12D3                     l3836:
 10050     12D3  1452               	bsf	___fldiv@grs,0
 10051     12D4  2AF2               	goto	l3848
 10052     12D5                     l3838:
 10053     12D5  3001               	movlw	1
 10054     12D6  00C6               	movwf	??___fldiv
 10055     12D7                     u6325:
 10056     12D7  1003               	clrc
 10057     12D8  0DC2               	rlf	___fldiv@b,f
 10058     12D9  0DC3               	rlf	___fldiv@b+1,f
 10059     12DA  0DC4               	rlf	___fldiv@b+2,f
 10060     12DB  0DC5               	rlf	___fldiv@b+3,f
 10061     12DC  0BC6               	decfsz	??___fldiv,f
 10062     12DD  2AD7               	goto	u6325
 10063     12DE                     l3840:
 10064     12DE  1FD5               	btfss	___fldiv@grs+3,7
 10065     12DF  2AE1               	goto	u6331
 10066     12E0  2AE2               	goto	u6330
 10067     12E1                     u6331:
 10068     12E1  2AE3               	goto	l3844
 10069     12E2                     u6330:
 10070     12E2                     l3842:
 10071     12E2  1442               	bsf	___fldiv@b,0
 10072     12E3                     l3844:
 10073     12E3  3001               	movlw	1
 10074     12E4  00C6               	movwf	??___fldiv
 10075     12E5                     u6345:
 10076     12E5  1003               	clrc
 10077     12E6  0DD2               	rlf	___fldiv@grs,f
 10078     12E7  0DD3               	rlf	___fldiv@grs+1,f
 10079     12E8  0DD4               	rlf	___fldiv@grs+2,f
 10080     12E9  0DD5               	rlf	___fldiv@grs+3,f
 10081     12EA  0BC6               	decfsz	??___fldiv,f
 10082     12EB  2AE5               	goto	u6345
 10083     12EC                     l3846:
 10084     12EC  30FF               	movlw	255
 10085     12ED  07D0               	addwf	___fldiv@new_exp,f
 10086     12EE  1803               	skipnc
 10087     12EF  0AD1               	incf	___fldiv@new_exp+1,f
 10088     12F0  30FF               	movlw	255
 10089     12F1  07D1               	addwf	___fldiv@new_exp+1,f
 10090     12F2                     l3848:
 10091     12F2  1FC4               	btfss	___fldiv@b+2,7
 10092     12F3  2AF5               	goto	u6351
 10093     12F4  2AF6               	goto	u6350
 10094     12F5                     u6351:
 10095     12F5  2AD5               	goto	l3838
 10096     12F6                     u6350:
 10097     12F6                     l3850:
 10098     12F6  01D7               	clrf	___fldiv@aexp
 10099     12F7                     l3852:
 10100     12F7  1FD5               	btfss	___fldiv@grs+3,7
 10101     12F8  2AFA               	goto	u6361
 10102     12F9  2AFB               	goto	u6360
 10103     12FA                     u6361:
 10104     12FA  2B17               	goto	l3860
 10105     12FB                     u6360:
 10106     12FB                     l3854:
 10107     12FB  30FF               	movlw	255
 10108     12FC  0552               	andwf	___fldiv@grs,w
 10109     12FD  00C6               	movwf	??___fldiv
 10110     12FE  30FF               	movlw	255
 10111     12FF  0553               	andwf	___fldiv@grs+1,w
 10112     1300  00C7               	movwf	??___fldiv+1
 10113     1301  30FF               	movlw	255
 10114     1302  0554               	andwf	___fldiv@grs+2,w
 10115     1303  00C8               	movwf	??___fldiv+2
 10116     1304  307F               	movlw	127
 10117     1305  0555               	andwf	___fldiv@grs+3,w
 10118     1306  00C9               	movwf	??___fldiv+3
 10119     1307  0849               	movf	??___fldiv+3,w
 10120     1308  0448               	iorwf	??___fldiv+2,w
 10121     1309  0447               	iorwf	??___fldiv+1,w
 10122     130A  0446               	iorwf	??___fldiv,w
 10123     130B  1903               	skipnz
 10124     130C  2B0E               	goto	u6371
 10125     130D  2B0F               	goto	u6370
 10126     130E                     u6371:
 10127     130E  2B12               	goto	l818
 10128     130F                     u6370:
 10129     130F                     l3856:
 10130     130F  01D7               	clrf	___fldiv@aexp
 10131     1310  0AD7               	incf	___fldiv@aexp,f
 10132     1311  2B17               	goto	l3860
 10133     1312                     l818:
 10134     1312  1C42               	btfss	___fldiv@b,0
 10135     1313  2B15               	goto	u6381
 10136     1314  2B16               	goto	u6380
 10137     1315                     u6381:
 10138     1315  2B17               	goto	l3860
 10139     1316                     u6380:
 10140     1316  2B0F               	goto	l3856
 10141     1317                     l3860:
 10142     1317  0857               	movf	___fldiv@aexp,w
 10143     1318  1903               	btfsc	3,2
 10144     1319  2B1B               	goto	u6391
 10145     131A  2B1C               	goto	u6390
 10146     131B                     u6391:
 10147     131B  2B4D               	goto	l3870
 10148     131C                     u6390:
 10149     131C                     l3862:
 10150     131C  3001               	movlw	1
 10151     131D  07C2               	addwf	___fldiv@b,f
 10152     131E  3000               	movlw	0
 10153     131F  1803               	skipnc
 10154     1320  3001               	movlw	1
 10155     1321  07C3               	addwf	___fldiv@b+1,f
 10156     1322  3000               	movlw	0
 10157     1323  1803               	skipnc
 10158     1324  3001               	movlw	1
 10159     1325  07C4               	addwf	___fldiv@b+2,f
 10160     1326  3000               	movlw	0
 10161     1327  1803               	skipnc
 10162     1328  3001               	movlw	1
 10163     1329  07C5               	addwf	___fldiv@b+3,f
 10164     132A                     l3864:
 10165     132A  1C45               	btfss	___fldiv@b+3,0
 10166     132B  2B2D               	goto	u6401
 10167     132C  2B2E               	goto	u6400
 10168     132D                     u6401:
 10169     132D  2B4D               	goto	l3870
 10170     132E                     u6400:
 10171     132E                     l3866:
 10172     132E  0842               	movf	___fldiv@b,w
 10173     132F  00C6               	movwf	??___fldiv
 10174     1330  0843               	movf	___fldiv@b+1,w
 10175     1331  00C7               	movwf	??___fldiv+1
 10176     1332  0844               	movf	___fldiv@b+2,w
 10177     1333  00C8               	movwf	??___fldiv+2
 10178     1334  0845               	movf	___fldiv@b+3,w
 10179     1335  00C9               	movwf	??___fldiv+3
 10180     1336  3001               	movlw	1
 10181     1337  00CA               	movwf	??___fldiv+4
 10182     1338                     u6415:
 10183     1338  0D49               	rlf	??___fldiv+3,w
 10184     1339  0CC9               	rrf	??___fldiv+3,f
 10185     133A  0CC8               	rrf	??___fldiv+2,f
 10186     133B  0CC7               	rrf	??___fldiv+1,f
 10187     133C  0CC6               	rrf	??___fldiv,f
 10188     133D                     u6410:
 10189     133D  0BCA               	decfsz	??___fldiv+4,f
 10190     133E  2B38               	goto	u6415
 10191     133F  0849               	movf	??___fldiv+3,w
 10192     1340  00C5               	movwf	___fldiv@b+3
 10193     1341  0848               	movf	??___fldiv+2,w
 10194     1342  00C4               	movwf	___fldiv@b+2
 10195     1343  0847               	movf	??___fldiv+1,w
 10196     1344  00C3               	movwf	___fldiv@b+1
 10197     1345  0846               	movf	??___fldiv,w
 10198     1346  00C2               	movwf	___fldiv@b
 10199     1347                     l3868:
 10200     1347  3001               	movlw	1
 10201     1348  07D0               	addwf	___fldiv@new_exp,f
 10202     1349  1803               	skipnc
 10203     134A  0AD1               	incf	___fldiv@new_exp+1,f
 10204     134B  3000               	movlw	0
 10205     134C  07D1               	addwf	___fldiv@new_exp+1,f
 10206     134D                     l3870:
 10207     134D  0851               	movf	___fldiv@new_exp+1,w
 10208     134E  3A80               	xorlw	128
 10209     134F  00FF               	movwf	btemp+1
 10210     1350  3080               	movlw	128
 10211     1351  027F               	subwf	btemp+1,w
 10212     1352  1D03               	skipz
 10213     1353  2B56               	goto	u6425
 10214     1354  30FF               	movlw	255
 10215     1355  0250               	subwf	___fldiv@new_exp,w
 10216     1356                     u6425:
 10217     1356  1C03               	skipc
 10218     1357  2B59               	goto	u6421
 10219     1358  2B5A               	goto	u6420
 10220     1359                     u6421:
 10221     1359  2B68               	goto	l3874
 10222     135A                     u6420:
 10223     135A                     l3872:
 10224     135A  30FF               	movlw	255
 10225     135B  1283               	bcf	3,5	;RP0=0, select bank0
 10226     135C  1303               	bcf	3,6	;RP1=0, select bank0
 10227     135D  00D0               	movwf	___fldiv@new_exp
 10228     135E  3000               	movlw	0
 10229     135F  00D1               	movwf	___fldiv@new_exp+1
 10230     1360  3000               	movlw	0
 10231     1361  00C5               	movwf	___fldiv@b+3
 10232     1362  3000               	movlw	0
 10233     1363  00C4               	movwf	___fldiv@b+2
 10234     1364  3000               	movlw	0
 10235     1365  00C3               	movwf	___fldiv@b+1
 10236     1366  3000               	movlw	0
 10237     1367  00C2               	movwf	___fldiv@b
 10238     1368                     l3874:
 10239     1368  1283               	bcf	3,5	;RP0=0, select bank0
 10240     1369  1303               	bcf	3,6	;RP1=0, select bank0
 10241     136A  0851               	movf	___fldiv@new_exp+1,w
 10242     136B  3A80               	xorlw	128
 10243     136C  00FF               	movwf	btemp+1
 10244     136D  3080               	movlw	128
 10245     136E  027F               	subwf	btemp+1,w
 10246     136F  1D03               	skipz
 10247     1370  2B73               	goto	u6435
 10248     1371  3001               	movlw	1
 10249     1372  0250               	subwf	___fldiv@new_exp,w
 10250     1373                     u6435:
 10251     1373  1803               	skipnc
 10252     1374  2B76               	goto	u6431
 10253     1375  2B77               	goto	u6430
 10254     1376                     u6431:
 10255     1376  2B84               	goto	l824
 10256     1377                     u6430:
 10257     1377                     l3876:
 10258     1377  1283               	bcf	3,5	;RP0=0, select bank0
 10259     1378  1303               	bcf	3,6	;RP1=0, select bank0
 10260     1379  01D0               	clrf	___fldiv@new_exp
 10261     137A  01D1               	clrf	___fldiv@new_exp+1
 10262     137B                     l3878:
 10263     137B  3000               	movlw	0
 10264     137C  00C5               	movwf	___fldiv@b+3
 10265     137D  3000               	movlw	0
 10266     137E  00C4               	movwf	___fldiv@b+2
 10267     137F  3000               	movlw	0
 10268     1380  00C3               	movwf	___fldiv@b+1
 10269     1381  3000               	movlw	0
 10270     1382  00C2               	movwf	___fldiv@b
 10271     1383                     l3880:
 10272     1383  01CF               	clrf	___fldiv@sign
 10273     1384                     l824:
 10274     1384  1283               	bcf	3,5	;RP0=0, select bank0
 10275     1385  1303               	bcf	3,6	;RP1=0, select bank0
 10276     1386  0850               	movf	___fldiv@new_exp,w
 10277     1387  00D6               	movwf	___fldiv@bexp
 10278     1388                     l3882:
 10279     1388  1C56               	btfss	___fldiv@bexp,0
 10280     1389  2B8B               	goto	u6441
 10281     138A  2B8C               	goto	u6440
 10282     138B                     u6441:
 10283     138B  2B8E               	goto	l3886
 10284     138C                     u6440:
 10285     138C                     l3884:
 10286     138C  17C4               	bsf	___fldiv@b+2,7
 10287     138D  2B92               	goto	l826
 10288     138E                     l3886:
 10289     138E  307F               	movlw	127
 10290     138F  00C6               	movwf	??___fldiv
 10291     1390  0846               	movf	??___fldiv,w
 10292     1391  05C4               	andwf	___fldiv@b+2,f
 10293     1392                     l826:
 10294     1392  0856               	movf	___fldiv@bexp,w
 10295     1393  00C6               	movwf	??___fldiv
 10296     1394  1003               	clrc
 10297     1395  0C46               	rrf	??___fldiv,w
 10298     1396  00C5               	movwf	___fldiv@b+3
 10299     1397  084F               	movf	___fldiv@sign,w
 10300     1398  00C6               	movwf	??___fldiv
 10301     1399  0846               	movf	??___fldiv,w
 10302     139A  04C5               	iorwf	___fldiv@b+3,f
 10303     139B  2A38               	goto	l3794
 10304     139C                     l804:
 10305     139C  0008               	return
 10306     139D                     __end_of___fldiv:
 10307                           
 10308                           	psect	text27
 10309     1C95                     __ptext27:	
 10310 ;; *************** function _Lcd_Write_String *****************
 10311 ;; Defined at:
 10312 ;;		line 98 in file "LCD.c"
 10313 ;; Parameters:    Size  Location     Type
 10314 ;;  a               2    5[COMMON] PTR unsigned char 
 10315 ;;		 -> valADC(3), STR_2(6), STR_1(5), 
 10316 ;; Auto vars:     Size  Location     Type
 10317 ;;  i               2   10[COMMON] int 
 10318 ;; Return value:  Size  Location     Type
 10319 ;;                  1    wreg      void 
 10320 ;; Registers used:
 10321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10322 ;; Tracked objects:
 10323 ;;		On entry : 0/0
 10324 ;;		On exit  : 0/0
 10325 ;;		Unchanged: 0/0
 10326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10327 ;;      Params:         2       0       0       0       0
 10328 ;;      Locals:         2       0       0       0       0
 10329 ;;      Temps:          3       0       0       0       0
 10330 ;;      Totals:         7       0       0       0       0
 10331 ;;Total ram usage:        7 bytes
 10332 ;; Hardware stack levels used: 1
 10333 ;; Hardware stack levels required when called: 2
 10334 ;; This function calls:
 10335 ;;		_Lcd_Write_Char
 10336 ;; This function is called by:
 10337 ;;		_main
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341     1C95                     _Lcd_Write_String:	
 10342                           ;psect for function _Lcd_Write_String
 10343                           
 10344     1C95                     l3508:	
 10345                           ;incstack = 0
 10346                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10347                           
 10348                           
 10349                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
 10350     1C95  01FA               	clrf	Lcd_Write_String@i
 10351     1C96  01FB               	clrf	Lcd_Write_String@i+1
 10352     1C97  2CBA               	goto	l3514
 10353     1C98                     l3510:
 10354                           
 10355                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
 10356     1C98  087A               	movf	Lcd_Write_String@i,w
 10357     1C99  0775               	addwf	Lcd_Write_String@a,w
 10358     1C9A  00F8               	movwf	??_Lcd_Write_String+1
 10359     1C9B  0876               	movf	Lcd_Write_String@a+1,w
 10360     1C9C  00F7               	movwf	??_Lcd_Write_String
 10361     1C9D  1803               	skipnc
 10362     1C9E  0AF7               	incf	??_Lcd_Write_String,f
 10363     1C9F  1FFA               	btfss	Lcd_Write_String@i,7
 10364     1CA0  2CA2               	goto	u5770
 10365     1CA1  03F7               	decf	??_Lcd_Write_String,f
 10366     1CA2                     u5770:
 10367     1CA2  0877               	movf	??_Lcd_Write_String,w
 10368     1CA3  00F9               	movwf	??_Lcd_Write_String+2
 10369     1CA4  0879               	movf	??_Lcd_Write_String+2,w
 10370     1CA5  1283               	bcf	3,5	;RP0=0, select bank0
 10371     1CA6  1303               	bcf	3,6	;RP1=0, select bank0
 10372     1CA7  00FF               	movwf	btemp+1
 10373     1CA8  0878               	movf	??_Lcd_Write_String+1,w
 10374     1CA9  0084               	movwf	4
 10375     1CAA  160A  118A  2000  160A  158A  	fcall	stringtab
 10376     1CAF  160A  158A  23F0  160A  158A  	fcall	_Lcd_Write_Char
 10377     1CB4                     l3512:
 10378     1CB4  3001               	movlw	1
 10379     1CB5  07FA               	addwf	Lcd_Write_String@i,f
 10380     1CB6  1803               	skipnc
 10381     1CB7  0AFB               	incf	Lcd_Write_String@i+1,f
 10382     1CB8  3000               	movlw	0
 10383     1CB9  07FB               	addwf	Lcd_Write_String@i+1,f
 10384     1CBA                     l3514:
 10385     1CBA  087A               	movf	Lcd_Write_String@i,w
 10386     1CBB  0775               	addwf	Lcd_Write_String@a,w
 10387     1CBC  00F8               	movwf	??_Lcd_Write_String+1
 10388     1CBD  0876               	movf	Lcd_Write_String@a+1,w
 10389     1CBE  00F7               	movwf	??_Lcd_Write_String
 10390     1CBF  1803               	skipnc
 10391     1CC0  0AF7               	incf	??_Lcd_Write_String,f
 10392     1CC1  1FFA               	btfss	Lcd_Write_String@i,7
 10393     1CC2  2CC4               	goto	u5780
 10394     1CC3  03F7               	decf	??_Lcd_Write_String,f
 10395     1CC4                     u5780:
 10396     1CC4  0877               	movf	??_Lcd_Write_String,w
 10397     1CC5  00F9               	movwf	??_Lcd_Write_String+2
 10398     1CC6  0879               	movf	??_Lcd_Write_String+2,w
 10399     1CC7  1283               	bcf	3,5	;RP0=0, select bank0
 10400     1CC8  1303               	bcf	3,6	;RP1=0, select bank0
 10401     1CC9  00FF               	movwf	btemp+1
 10402     1CCA  0878               	movf	??_Lcd_Write_String+1,w
 10403     1CCB  0084               	movwf	4
 10404     1CCC  160A  118A  2000  160A  158A  	fcall	stringtab
 10405     1CD1  3A00               	xorlw	0
 10406     1CD2  1D03               	skipz
 10407     1CD3  2CD5               	goto	u5791
 10408     1CD4  2CD6               	goto	u5790
 10409     1CD5                     u5791:
 10410     1CD5  2C98               	goto	l3510
 10411     1CD6                     u5790:
 10412     1CD6                     l108:
 10413     1CD6  0008               	return
 10414     1CD7                     __end_of_Lcd_Write_String:
 10415                           
 10416                           	psect	text28
 10417     1BF0                     __ptext28:	
 10418 ;; *************** function _Lcd_Write_Char *****************
 10419 ;; Defined at:
 10420 ;;		line 83 in file "LCD.c"
 10421 ;; Parameters:    Size  Location     Type
 10422 ;;  a               1    wreg     unsigned char 
 10423 ;; Auto vars:     Size  Location     Type
 10424 ;;  a               1    4[COMMON] unsigned char 
 10425 ;;  y               1    3[COMMON] unsigned char 
 10426 ;;  temp            1    2[COMMON] unsigned char 
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  1    wreg      void 
 10429 ;; Registers used:
 10430 ;;		wreg, status,2, status,0, pclath, cstack
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10436 ;;      Params:         0       0       0       0       0
 10437 ;;      Locals:         3       0       0       0       0
 10438 ;;      Temps:          1       0       0       0       0
 10439 ;;      Totals:         4       0       0       0       0
 10440 ;;Total ram usage:        4 bytes
 10441 ;; Hardware stack levels used: 1
 10442 ;; Hardware stack levels required when called: 1
 10443 ;; This function calls:
 10444 ;;		_Lcd_Port
 10445 ;; This function is called by:
 10446 ;;		_Lcd_Write_String
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450     1BF0                     _Lcd_Write_Char:	
 10451                           ;psect for function _Lcd_Write_Char
 10452                           
 10453                           
 10454                           ;incstack = 0
 10455                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10456                           ;Lcd_Write_Char@a stored from wreg
 10457     1BF0  00F4               	movwf	Lcd_Write_Char@a
 10458     1BF1                     l3094:
 10459                           
 10460                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
 10461     1BF1  0874               	movf	Lcd_Write_Char@a,w
 10462     1BF2  390F               	andlw	15
 10463     1BF3  00F2               	movwf	Lcd_Write_Char@temp
 10464                           
 10465                           ;LCD.c: 86:     y = a & 0xF0;
 10466     1BF4  0874               	movf	Lcd_Write_Char@a,w
 10467     1BF5  39F0               	andlw	240
 10468     1BF6  00F3               	movwf	Lcd_Write_Char@y
 10469     1BF7                     l3096:
 10470                           
 10471                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
 10472     1BF7  1283               	bcf	3,5	;RP0=0, select bank0
 10473     1BF8  1303               	bcf	3,6	;RP1=0, select bank0
 10474     1BF9  1508               	bsf	8,2	;volatile
 10475     1BFA                     l3098:
 10476                           
 10477                           ;LCD.c: 88:     Lcd_Port(y >> 4);
 10478     1BFA  0873               	movf	Lcd_Write_Char@y,w
 10479     1BFB  00F1               	movwf	??_Lcd_Write_Char
 10480     1BFC  3004               	movlw	4
 10481     1BFD                     u4645:
 10482     1BFD  1003               	clrc
 10483     1BFE  0CF1               	rrf	??_Lcd_Write_Char,f
 10484     1BFF  3EFF               	addlw	-1
 10485     1C00  1D03               	skipz
 10486     1C01  2BFD               	goto	u4645
 10487     1C02  0871               	movf	??_Lcd_Write_Char,w
 10488     1C03  160A  158A  230C  160A  158A  	fcall	_Lcd_Port
 10489     1C08                     l3100:
 10490                           
 10491                           ;LCD.c: 89:     RD3 = 1;
 10492     1C08  1283               	bcf	3,5	;RP0=0, select bank0
 10493     1C09  1303               	bcf	3,6	;RP1=0, select bank0
 10494     1C0A  1588               	bsf	8,3	;volatile
 10495     1C0B                     l3102:
 10496                           
 10497                           ;LCD.c: 90:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 10498     1C0B  300D               	movlw	13
 10499     1C0C  00F1               	movwf	??_Lcd_Write_Char
 10500     1C0D                     u6487:
 10501     1C0D  0BF1               	decfsz	??_Lcd_Write_Char,f
 10502     1C0E  2C0D               	goto	u6487
 10503     1C0F                     l3104:
 10504                           
 10505                           ;LCD.c: 91:     RD3 = 0;
 10506     1C0F  1283               	bcf	3,5	;RP0=0, select bank0
 10507     1C10  1303               	bcf	3,6	;RP1=0, select bank0
 10508     1C11  1188               	bcf	8,3	;volatile
 10509     1C12                     l3106:
 10510                           
 10511                           ;LCD.c: 92:     Lcd_Port(temp);
 10512     1C12  0872               	movf	Lcd_Write_Char@temp,w
 10513     1C13  160A  158A  230C  160A  158A  	fcall	_Lcd_Port
 10514     1C18                     l3108:
 10515                           
 10516                           ;LCD.c: 93:     RD3 = 1;
 10517     1C18  1283               	bcf	3,5	;RP0=0, select bank0
 10518     1C19  1303               	bcf	3,6	;RP1=0, select bank0
 10519     1C1A  1588               	bsf	8,3	;volatile
 10520     1C1B                     l3110:
 10521                           
 10522                           ;LCD.c: 94:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 10523     1C1B  300D               	movlw	13
 10524     1C1C  00F1               	movwf	??_Lcd_Write_Char
 10525     1C1D                     u6497:
 10526     1C1D  0BF1               	decfsz	??_Lcd_Write_Char,f
 10527     1C1E  2C1D               	goto	u6497
 10528     1C1F                     l3112:
 10529                           
 10530                           ;LCD.c: 95:     RD3 = 0;
 10531     1C1F  1283               	bcf	3,5	;RP0=0, select bank0
 10532     1C20  1303               	bcf	3,6	;RP1=0, select bank0
 10533     1C21  1188               	bcf	8,3	;volatile
 10534     1C22                     l102:
 10535     1C22  0008               	return
 10536     1C23                     __end_of_Lcd_Write_Char:
 10537                           
 10538                           	psect	text29
 10539     1D1B                     __ptext29:	
 10540 ;; *************** function _Lcd_Set_Cursor *****************
 10541 ;; Defined at:
 10542 ;;		line 48 in file "LCD.c"
 10543 ;; Parameters:    Size  Location     Type
 10544 ;;  a               1    wreg     unsigned char 
 10545 ;;  b               1    4[COMMON] unsigned char 
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;  a               1    6[COMMON] unsigned char 
 10548 ;;  temp            1    9[COMMON] unsigned char 
 10549 ;;  y               1    8[COMMON] unsigned char 
 10550 ;;  z               1    7[COMMON] unsigned char 
 10551 ;; Return value:  Size  Location     Type
 10552 ;;                  1    wreg      void 
 10553 ;; Registers used:
 10554 ;;		wreg, status,2, status,0, pclath, cstack
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10560 ;;      Params:         1       0       0       0       0
 10561 ;;      Locals:         4       0       0       0       0
 10562 ;;      Temps:          1       0       0       0       0
 10563 ;;      Totals:         6       0       0       0       0
 10564 ;;Total ram usage:        6 bytes
 10565 ;; Hardware stack levels used: 1
 10566 ;; Hardware stack levels required when called: 2
 10567 ;; This function calls:
 10568 ;;		_Lcd_Cmd
 10569 ;; This function is called by:
 10570 ;;		_main
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574     1D1B                     _Lcd_Set_Cursor:	
 10575                           ;psect for function _Lcd_Set_Cursor
 10576                           
 10577                           
 10578                           ;incstack = 0
 10579                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10580                           ;Lcd_Set_Cursor@a stored from wreg
 10581     1D1B  00F6               	movwf	Lcd_Set_Cursor@a
 10582     1D1C                     l3488:
 10583                           
 10584                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
 10585     1D1C  0376               	decf	Lcd_Set_Cursor@a,w
 10586     1D1D  1D03               	btfss	3,2
 10587     1D1E  2D20               	goto	u5731
 10588     1D1F  2D21               	goto	u5730
 10589     1D20                     u5731:
 10590     1D20  2D3E               	goto	l3498
 10591     1D21                     u5730:
 10592     1D21                     l3490:
 10593                           
 10594                           ;LCD.c: 51:         temp = 0x80 + b - 1;
 10595     1D21  0874               	movf	Lcd_Set_Cursor@b,w
 10596     1D22  3E7F               	addlw	127
 10597     1D23  00F9               	movwf	Lcd_Set_Cursor@temp
 10598                           
 10599                           ;LCD.c: 52:         z = temp >> 4;
 10600     1D24  0879               	movf	Lcd_Set_Cursor@temp,w
 10601     1D25  00F5               	movwf	??_Lcd_Set_Cursor
 10602     1D26  3004               	movlw	4
 10603     1D27                     u5745:
 10604     1D27  1003               	clrc
 10605     1D28  0CF5               	rrf	??_Lcd_Set_Cursor,f
 10606     1D29  3EFF               	addlw	-1
 10607     1D2A  1D03               	skipz
 10608     1D2B  2D27               	goto	u5745
 10609     1D2C  0875               	movf	??_Lcd_Set_Cursor,w
 10610     1D2D  00F7               	movwf	Lcd_Set_Cursor@z
 10611     1D2E                     l3492:
 10612                           
 10613                           ;LCD.c: 53:         y = temp & 0x0F;
 10614     1D2E  0879               	movf	Lcd_Set_Cursor@temp,w
 10615     1D2F  390F               	andlw	15
 10616     1D30  00F8               	movwf	Lcd_Set_Cursor@y
 10617     1D31                     l3494:
 10618                           
 10619                           ;LCD.c: 54:         Lcd_Cmd(z);
 10620     1D31  0877               	movf	Lcd_Set_Cursor@z,w
 10621     1D32  160A  158A  22F2  160A  158A  	fcall	_Lcd_Cmd
 10622     1D37                     l3496:
 10623                           
 10624                           ;LCD.c: 55:         Lcd_Cmd(y);
 10625     1D37  0878               	movf	Lcd_Set_Cursor@y,w
 10626     1D38  160A  158A  22F2  160A  158A  	fcall	_Lcd_Cmd
 10627                           
 10628                           ;LCD.c: 56:     } else if (a == 2) {
 10629     1D3D  2D60               	goto	l96
 10630     1D3E                     l3498:
 10631     1D3E  3002               	movlw	2
 10632     1D3F  0676               	xorwf	Lcd_Set_Cursor@a,w
 10633     1D40  1D03               	btfss	3,2
 10634     1D41  2D43               	goto	u5751
 10635     1D42  2D44               	goto	u5750
 10636     1D43                     u5751:
 10637     1D43  2D60               	goto	l96
 10638     1D44                     u5750:
 10639     1D44                     l3500:
 10640                           
 10641                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
 10642     1D44  0874               	movf	Lcd_Set_Cursor@b,w
 10643     1D45  3EBF               	addlw	191
 10644     1D46  00F9               	movwf	Lcd_Set_Cursor@temp
 10645                           
 10646                           ;LCD.c: 58:         z = temp >> 4;
 10647     1D47  0879               	movf	Lcd_Set_Cursor@temp,w
 10648     1D48  00F5               	movwf	??_Lcd_Set_Cursor
 10649     1D49  3004               	movlw	4
 10650     1D4A                     u5765:
 10651     1D4A  1003               	clrc
 10652     1D4B  0CF5               	rrf	??_Lcd_Set_Cursor,f
 10653     1D4C  3EFF               	addlw	-1
 10654     1D4D  1D03               	skipz
 10655     1D4E  2D4A               	goto	u5765
 10656     1D4F  0875               	movf	??_Lcd_Set_Cursor,w
 10657     1D50  00F7               	movwf	Lcd_Set_Cursor@z
 10658     1D51                     l3502:
 10659                           
 10660                           ;LCD.c: 59:         y = temp & 0x0F;
 10661     1D51  0879               	movf	Lcd_Set_Cursor@temp,w
 10662     1D52  390F               	andlw	15
 10663     1D53  00F8               	movwf	Lcd_Set_Cursor@y
 10664     1D54                     l3504:
 10665                           
 10666                           ;LCD.c: 60:         Lcd_Cmd(z);
 10667     1D54  0877               	movf	Lcd_Set_Cursor@z,w
 10668     1D55  160A  158A  22F2  160A  158A  	fcall	_Lcd_Cmd
 10669     1D5A                     l3506:
 10670                           
 10671                           ;LCD.c: 61:         Lcd_Cmd(y);
 10672     1D5A  0878               	movf	Lcd_Set_Cursor@y,w
 10673     1D5B  160A  158A  22F2  160A  158A  	fcall	_Lcd_Cmd
 10674     1D60                     l96:
 10675     1D60  0008               	return
 10676     1D61                     __end_of_Lcd_Set_Cursor:
 10677                           
 10678                           	psect	text30
 10679     1E5C                     __ptext30:	
 10680 ;; *************** function _Lcd_Init *****************
 10681 ;; Defined at:
 10682 ;;		line 65 in file "LCD.c"
 10683 ;; Parameters:    Size  Location     Type
 10684 ;;		None
 10685 ;; Auto vars:     Size  Location     Type
 10686 ;;		None
 10687 ;; Return value:  Size  Location     Type
 10688 ;;                  1    wreg      void 
 10689 ;; Registers used:
 10690 ;;		wreg, status,2, status,0, pclath, cstack
 10691 ;; Tracked objects:
 10692 ;;		On entry : 0/0
 10693 ;;		On exit  : 0/0
 10694 ;;		Unchanged: 0/0
 10695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10696 ;;      Params:         0       0       0       0       0
 10697 ;;      Locals:         0       0       0       0       0
 10698 ;;      Temps:          2       0       0       0       0
 10699 ;;      Totals:         2       0       0       0       0
 10700 ;;Total ram usage:        2 bytes
 10701 ;; Hardware stack levels used: 1
 10702 ;; Hardware stack levels required when called: 2
 10703 ;; This function calls:
 10704 ;;		_Lcd_Cmd
 10705 ;;		_Lcd_Port
 10706 ;; This function is called by:
 10707 ;;		_main
 10708 ;; This function uses a non-reentrant model
 10709 ;;
 10710                           
 10711     1E5C                     _Lcd_Init:	
 10712                           ;psect for function _Lcd_Init
 10713                           
 10714     1E5C                     l3476:	
 10715                           ;incstack = 0
 10716                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10717                           
 10718                           
 10719                           ;LCD.c: 66:     Lcd_Port(0x00);
 10720     1E5C  3000               	movlw	0
 10721     1E5D  160A  158A  230C  160A  158A  	fcall	_Lcd_Port
 10722     1E62                     l3478:
 10723                           
 10724                           ;LCD.c: 67:     _delay((unsigned long)((20)*(4000000/4000.0)));
 10725     1E62  301A               	movlw	26
 10726     1E63  00F5               	movwf	??_Lcd_Init+1
 10727     1E64  30F8               	movlw	248
 10728     1E65  00F4               	movwf	??_Lcd_Init
 10729     1E66                     u6507:
 10730     1E66  0BF4               	decfsz	??_Lcd_Init,f
 10731     1E67  2E66               	goto	u6507
 10732     1E68  0BF5               	decfsz	??_Lcd_Init+1,f
 10733     1E69  2E66               	goto	u6507
 10734     1E6A  0000               	nop
 10735     1E6B                     l3480:
 10736                           
 10737                           ;LCD.c: 68:     Lcd_Cmd(0x03);
 10738     1E6B  3003               	movlw	3
 10739     1E6C  160A  158A  22F2  160A  158A  	fcall	_Lcd_Cmd
 10740                           
 10741                           ;LCD.c: 69:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10742     1E71  3007               	movlw	7
 10743     1E72  00F5               	movwf	??_Lcd_Init+1
 10744     1E73  307D               	movlw	125
 10745     1E74  00F4               	movwf	??_Lcd_Init
 10746     1E75                     u6517:
 10747     1E75  0BF4               	decfsz	??_Lcd_Init,f
 10748     1E76  2E75               	goto	u6517
 10749     1E77  0BF5               	decfsz	??_Lcd_Init+1,f
 10750     1E78  2E75               	goto	u6517
 10751     1E79                     l3482:
 10752                           
 10753                           ;LCD.c: 70:     Lcd_Cmd(0x03);
 10754     1E79  3003               	movlw	3
 10755     1E7A  160A  158A  22F2  160A  158A  	fcall	_Lcd_Cmd
 10756     1E7F                     l3484:
 10757                           
 10758                           ;LCD.c: 71:     _delay((unsigned long)((11)*(4000000/4000.0)));
 10759     1E7F  300F               	movlw	15
 10760     1E80  00F5               	movwf	??_Lcd_Init+1
 10761     1E81  3047               	movlw	71
 10762     1E82  00F4               	movwf	??_Lcd_Init
 10763     1E83                     u6527:
 10764     1E83  0BF4               	decfsz	??_Lcd_Init,f
 10765     1E84  2E83               	goto	u6527
 10766     1E85  0BF5               	decfsz	??_Lcd_Init+1,f
 10767     1E86  2E83               	goto	u6527
 10768     1E87  2E88               	nop2
 10769                           
 10770                           ;LCD.c: 72:     Lcd_Cmd(0x03);
 10771     1E88  3003               	movlw	3
 10772     1E89  160A  158A  22F2  160A  158A  	fcall	_Lcd_Cmd
 10773                           
 10774                           ;LCD.c: 74:     Lcd_Cmd(0x02);
 10775     1E8E  3002               	movlw	2
 10776     1E8F  160A  158A  22F2  160A  158A  	fcall	_Lcd_Cmd
 10777                           
 10778                           ;LCD.c: 75:     Lcd_Cmd(0x02);
 10779     1E94  3002               	movlw	2
 10780     1E95  160A  158A  22F2  160A  158A  	fcall	_Lcd_Cmd
 10781                           
 10782                           ;LCD.c: 76:     Lcd_Cmd(0x08);
 10783     1E9A  3008               	movlw	8
 10784     1E9B  160A  158A  22F2  160A  158A  	fcall	_Lcd_Cmd
 10785                           
 10786                           ;LCD.c: 77:     Lcd_Cmd(0x00);
 10787     1EA0  3000               	movlw	0
 10788     1EA1  160A  158A  22F2  160A  158A  	fcall	_Lcd_Cmd
 10789                           
 10790                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
 10791     1EA6  300C               	movlw	12
 10792     1EA7  160A  158A  22F2  160A  158A  	fcall	_Lcd_Cmd
 10793                           
 10794                           ;LCD.c: 79:     Lcd_Cmd(0x00);
 10795     1EAC  3000               	movlw	0
 10796     1EAD  160A  158A  22F2  160A  158A  	fcall	_Lcd_Cmd
 10797                           
 10798                           ;LCD.c: 80:     Lcd_Cmd(0x06);
 10799     1EB2  3006               	movlw	6
 10800     1EB3  160A  158A  22F2  160A  158A  	fcall	_Lcd_Cmd
 10801     1EB8                     l99:
 10802     1EB8  0008               	return
 10803     1EB9                     __end_of_Lcd_Init:
 10804                           
 10805                           	psect	text31
 10806     0006                     __ptext31:	
 10807 ;; *************** function _Lcd_Clear *****************
 10808 ;; Defined at:
 10809 ;;		line 43 in file "LCD.c"
 10810 ;; Parameters:    Size  Location     Type
 10811 ;;		None
 10812 ;; Auto vars:     Size  Location     Type
 10813 ;;		None
 10814 ;; Return value:  Size  Location     Type
 10815 ;;                  1    wreg      void 
 10816 ;; Registers used:
 10817 ;;		wreg, status,2, status,0, pclath, cstack
 10818 ;; Tracked objects:
 10819 ;;		On entry : 0/0
 10820 ;;		On exit  : 0/0
 10821 ;;		Unchanged: 0/0
 10822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10823 ;;      Params:         0       0       0       0       0
 10824 ;;      Locals:         0       0       0       0       0
 10825 ;;      Temps:          0       0       0       0       0
 10826 ;;      Totals:         0       0       0       0       0
 10827 ;;Total ram usage:        0 bytes
 10828 ;; Hardware stack levels used: 1
 10829 ;; Hardware stack levels required when called: 2
 10830 ;; This function calls:
 10831 ;;		_Lcd_Cmd
 10832 ;; This function is called by:
 10833 ;;		_main
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           
 10837     0006                     _Lcd_Clear:	
 10838                           ;psect for function _Lcd_Clear
 10839                           
 10840     0006                     l3486:	
 10841                           ;incstack = 0
 10842                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10843                           
 10844                           
 10845                           ;LCD.c: 44:     Lcd_Cmd(0);
 10846     0006  3000               	movlw	0
 10847     0007  160A  158A  22F2  120A  118A  	fcall	_Lcd_Cmd
 10848                           
 10849                           ;LCD.c: 45:     Lcd_Cmd(1);
 10850     000C  3001               	movlw	1
 10851     000D  160A  158A  22F2  120A  118A  	fcall	_Lcd_Cmd
 10852     0012                     l90:
 10853     0012  0008               	return
 10854     0013                     __end_of_Lcd_Clear:
 10855                           
 10856                           	psect	text32
 10857     1AF2                     __ptext32:	
 10858 ;; *************** function _Lcd_Cmd *****************
 10859 ;; Defined at:
 10860 ;;		line 35 in file "LCD.c"
 10861 ;; Parameters:    Size  Location     Type
 10862 ;;  a               1    wreg     unsigned char 
 10863 ;; Auto vars:     Size  Location     Type
 10864 ;;  a               1    3[COMMON] unsigned char 
 10865 ;; Return value:  Size  Location     Type
 10866 ;;                  1    wreg      void 
 10867 ;; Registers used:
 10868 ;;		wreg, status,2, status,0, pclath, cstack
 10869 ;; Tracked objects:
 10870 ;;		On entry : 0/0
 10871 ;;		On exit  : 0/0
 10872 ;;		Unchanged: 0/0
 10873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10874 ;;      Params:         0       0       0       0       0
 10875 ;;      Locals:         1       0       0       0       0
 10876 ;;      Temps:          2       0       0       0       0
 10877 ;;      Totals:         3       0       0       0       0
 10878 ;;Total ram usage:        3 bytes
 10879 ;; Hardware stack levels used: 1
 10880 ;; Hardware stack levels required when called: 1
 10881 ;; This function calls:
 10882 ;;		_Lcd_Port
 10883 ;; This function is called by:
 10884 ;;		_Lcd_Clear
 10885 ;;		_Lcd_Set_Cursor
 10886 ;;		_Lcd_Init
 10887 ;;		_Lcd_Shift_Right
 10888 ;;		_Lcd_Shift_Left
 10889 ;; This function uses a non-reentrant model
 10890 ;;
 10891                           
 10892     1AF2                     _Lcd_Cmd:	
 10893                           ;psect for function _Lcd_Cmd
 10894                           
 10895                           
 10896                           ;incstack = 0
 10897                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10898                           ;Lcd_Cmd@a stored from wreg
 10899     1AF2  00F3               	movwf	Lcd_Cmd@a
 10900     1AF3                     l3084:
 10901                           
 10902                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
 10903     1AF3  1283               	bcf	3,5	;RP0=0, select bank0
 10904     1AF4  1303               	bcf	3,6	;RP1=0, select bank0
 10905     1AF5  1108               	bcf	8,2	;volatile
 10906     1AF6                     l3086:
 10907                           
 10908                           ;LCD.c: 37:     Lcd_Port(a);
 10909     1AF6  0873               	movf	Lcd_Cmd@a,w
 10910     1AF7  160A  158A  230C  160A  158A  	fcall	_Lcd_Port
 10911     1AFC                     l3088:
 10912                           
 10913                           ;LCD.c: 38:     RD3 = 1;
 10914     1AFC  1283               	bcf	3,5	;RP0=0, select bank0
 10915     1AFD  1303               	bcf	3,6	;RP1=0, select bank0
 10916     1AFE  1588               	bsf	8,3	;volatile
 10917     1AFF                     l3090:
 10918                           
 10919                           ;LCD.c: 39:     _delay((unsigned long)((4)*(4000000/4000.0)));
 10920     1AFF  3006               	movlw	6
 10921     1B00  00F2               	movwf	??_Lcd_Cmd+1
 10922     1B01  3030               	movlw	48
 10923     1B02  00F1               	movwf	??_Lcd_Cmd
 10924     1B03                     u6537:
 10925     1B03  0BF1               	decfsz	??_Lcd_Cmd,f
 10926     1B04  2B03               	goto	u6537
 10927     1B05  0BF2               	decfsz	??_Lcd_Cmd+1,f
 10928     1B06  2B03               	goto	u6537
 10929     1B07  0000               	nop
 10930     1B08                     l3092:
 10931                           
 10932                           ;LCD.c: 40:     RD3 = 0;
 10933     1B08  1283               	bcf	3,5	;RP0=0, select bank0
 10934     1B09  1303               	bcf	3,6	;RP1=0, select bank0
 10935     1B0A  1188               	bcf	8,3	;volatile
 10936     1B0B                     l87:
 10937     1B0B  0008               	return
 10938     1B0C                     __end_of_Lcd_Cmd:
 10939                           
 10940                           	psect	text33
 10941     1B0C                     __ptext33:	
 10942 ;; *************** function _Lcd_Port *****************
 10943 ;; Defined at:
 10944 ;;		line 13 in file "LCD.c"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;  a               1    wreg     unsigned char 
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;  a               1    0[COMMON] unsigned char 
 10949 ;; Return value:  Size  Location     Type
 10950 ;;                  1    wreg      void 
 10951 ;; Registers used:
 10952 ;;		wreg
 10953 ;; Tracked objects:
 10954 ;;		On entry : 0/0
 10955 ;;		On exit  : 0/0
 10956 ;;		Unchanged: 0/0
 10957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10958 ;;      Params:         0       0       0       0       0
 10959 ;;      Locals:         1       0       0       0       0
 10960 ;;      Temps:          0       0       0       0       0
 10961 ;;      Totals:         1       0       0       0       0
 10962 ;;Total ram usage:        1 bytes
 10963 ;; Hardware stack levels used: 1
 10964 ;; This function calls:
 10965 ;;		Nothing
 10966 ;; This function is called by:
 10967 ;;		_Lcd_Cmd
 10968 ;;		_Lcd_Init
 10969 ;;		_Lcd_Write_Char
 10970 ;; This function uses a non-reentrant model
 10971 ;;
 10972                           
 10973     1B0C                     _Lcd_Port:	
 10974                           ;psect for function _Lcd_Port
 10975                           
 10976                           
 10977                           ;incstack = 0
 10978                           ; Regs used in _Lcd_Port: [wreg]
 10979                           ;Lcd_Port@a stored from wreg
 10980     1B0C  00F0               	movwf	Lcd_Port@a
 10981     1B0D                     l2574:
 10982                           
 10983                           ;LCD.c: 14:     if (a & 1)
 10984     1B0D  1C70               	btfss	Lcd_Port@a,0
 10985     1B0E  2B10               	goto	u3371
 10986     1B0F  2B11               	goto	u3370
 10987     1B10                     u3371:
 10988     1B10  2B15               	goto	l76
 10989     1B11                     u3370:
 10990     1B11                     l2576:
 10991                           
 10992                           ;LCD.c: 15:         RD4 = 1;
 10993     1B11  1283               	bcf	3,5	;RP0=0, select bank0
 10994     1B12  1303               	bcf	3,6	;RP1=0, select bank0
 10995     1B13  1608               	bsf	8,4	;volatile
 10996     1B14  2B18               	goto	l77
 10997     1B15                     l76:	
 10998                           ;LCD.c: 16:     else
 10999                           
 11000                           
 11001                           ;LCD.c: 17:         RD4 = 0;
 11002     1B15  1283               	bcf	3,5	;RP0=0, select bank0
 11003     1B16  1303               	bcf	3,6	;RP1=0, select bank0
 11004     1B17  1208               	bcf	8,4	;volatile
 11005     1B18                     l77:
 11006                           
 11007                           ;LCD.c: 19:     if (a & 2)
 11008     1B18  1CF0               	btfss	Lcd_Port@a,1
 11009     1B19  2B1B               	goto	u3381
 11010     1B1A  2B1C               	goto	u3380
 11011     1B1B                     u3381:
 11012     1B1B  2B1E               	goto	l78
 11013     1B1C                     u3380:
 11014     1B1C                     l2578:
 11015                           
 11016                           ;LCD.c: 20:         RD5 = 1;
 11017     1B1C  1688               	bsf	8,5	;volatile
 11018     1B1D  2B1F               	goto	l79
 11019     1B1E                     l78:	
 11020                           ;LCD.c: 21:     else
 11021                           
 11022                           
 11023                           ;LCD.c: 22:         RD5 = 0;
 11024     1B1E  1288               	bcf	8,5	;volatile
 11025     1B1F                     l79:
 11026                           
 11027                           ;LCD.c: 24:     if (a & 4)
 11028     1B1F  1D70               	btfss	Lcd_Port@a,2
 11029     1B20  2B22               	goto	u3391
 11030     1B21  2B23               	goto	u3390
 11031     1B22                     u3391:
 11032     1B22  2B25               	goto	l80
 11033     1B23                     u3390:
 11034     1B23                     l2580:
 11035                           
 11036                           ;LCD.c: 25:         RD6 = 1;
 11037     1B23  1708               	bsf	8,6	;volatile
 11038     1B24  2B26               	goto	l81
 11039     1B25                     l80:	
 11040                           ;LCD.c: 26:     else
 11041                           
 11042                           
 11043                           ;LCD.c: 27:         RD6 = 0;
 11044     1B25  1308               	bcf	8,6	;volatile
 11045     1B26                     l81:
 11046                           
 11047                           ;LCD.c: 29:     if (a & 8)
 11048     1B26  1DF0               	btfss	Lcd_Port@a,3
 11049     1B27  2B29               	goto	u3401
 11050     1B28  2B2A               	goto	u3400
 11051     1B29                     u3401:
 11052     1B29  2B2C               	goto	l82
 11053     1B2A                     u3400:
 11054     1B2A                     l2582:
 11055                           
 11056                           ;LCD.c: 30:         RD7 = 1;
 11057     1B2A  1788               	bsf	8,7	;volatile
 11058     1B2B  2B2D               	goto	l84
 11059     1B2C                     l82:	
 11060                           ;LCD.c: 31:     else
 11061                           
 11062                           
 11063                           ;LCD.c: 32:         RD7 = 0;
 11064     1B2C  1388               	bcf	8,7	;volatile
 11065     1B2D                     l84:
 11066     1B2D  0008               	return
 11067     1B2E                     __end_of_Lcd_Port:
 11068                           
 11069                           	psect	text34
 11070     1ABE                     __ptext34:	
 11071 ;; *************** function _I2C_Master_Write *****************
 11072 ;; Defined at:
 11073 ;;		line 65 in file "I2C.c"
 11074 ;; Parameters:    Size  Location     Type
 11075 ;;  d               2    0[COMMON] unsigned int 
 11076 ;; Auto vars:     Size  Location     Type
 11077 ;;		None
 11078 ;; Return value:  Size  Location     Type
 11079 ;;                  1    wreg      void 
 11080 ;; Registers used:
 11081 ;;		wreg, status,2, status,0, pclath, cstack
 11082 ;; Tracked objects:
 11083 ;;		On entry : 0/0
 11084 ;;		On exit  : 0/0
 11085 ;;		Unchanged: 0/0
 11086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11087 ;;      Params:         2       0       0       0       0
 11088 ;;      Locals:         0       0       0       0       0
 11089 ;;      Temps:          0       0       0       0       0
 11090 ;;      Totals:         2       0       0       0       0
 11091 ;;Total ram usage:        2 bytes
 11092 ;; Hardware stack levels used: 1
 11093 ;; Hardware stack levels required when called: 1
 11094 ;; This function calls:
 11095 ;;		_I2C_Master_Wait
 11096 ;; This function is called by:
 11097 ;;		_main
 11098 ;; This function uses a non-reentrant model
 11099 ;;
 11100                           
 11101     1ABE                     _I2C_Master_Write:	
 11102                           ;psect for function _I2C_Master_Write
 11103                           
 11104     1ABE                     l3520:	
 11105                           ;incstack = 0
 11106                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11107                           
 11108                           
 11109                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
 11110     1ABE  160A  158A  22D3  160A  158A  	fcall	_I2C_Master_Wait
 11111     1AC3                     l3522:
 11112                           
 11113                           ;I2C.c: 68:     SSPBUF = d;
 11114     1AC3  0870               	movf	I2C_Master_Write@d,w
 11115     1AC4  1283               	bcf	3,5	;RP0=0, select bank0
 11116     1AC5  1303               	bcf	3,6	;RP1=0, select bank0
 11117     1AC6  0093               	movwf	19	;volatile
 11118     1AC7                     l232:
 11119     1AC7  0008               	return
 11120     1AC8                     __end_of_I2C_Master_Write:
 11121                           
 11122                           	psect	text35
 11123     1AB5                     __ptext35:	
 11124 ;; *************** function _I2C_Master_Stop *****************
 11125 ;; Defined at:
 11126 ;;		line 55 in file "I2C.c"
 11127 ;; Parameters:    Size  Location     Type
 11128 ;;		None
 11129 ;; Auto vars:     Size  Location     Type
 11130 ;;		None
 11131 ;; Return value:  Size  Location     Type
 11132 ;;                  1    wreg      void 
 11133 ;; Registers used:
 11134 ;;		wreg, status,2, status,0, pclath, cstack
 11135 ;; Tracked objects:
 11136 ;;		On entry : 0/0
 11137 ;;		On exit  : 0/0
 11138 ;;		Unchanged: 0/0
 11139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11140 ;;      Params:         0       0       0       0       0
 11141 ;;      Locals:         0       0       0       0       0
 11142 ;;      Temps:          0       0       0       0       0
 11143 ;;      Totals:         0       0       0       0       0
 11144 ;;Total ram usage:        0 bytes
 11145 ;; Hardware stack levels used: 1
 11146 ;; Hardware stack levels required when called: 1
 11147 ;; This function calls:
 11148 ;;		_I2C_Master_Wait
 11149 ;; This function is called by:
 11150 ;;		_main
 11151 ;; This function uses a non-reentrant model
 11152 ;;
 11153                           
 11154     1AB5                     _I2C_Master_Stop:	
 11155                           ;psect for function _I2C_Master_Stop
 11156                           
 11157     1AB5                     l3540:	
 11158                           ;incstack = 0
 11159                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11160                           
 11161                           
 11162                           ;I2C.c: 57:     I2C_Master_Wait();
 11163     1AB5  160A  158A  22D3  160A  158A  	fcall	_I2C_Master_Wait
 11164     1ABA                     l3542:
 11165                           
 11166                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
 11167     1ABA  1683               	bsf	3,5	;RP0=1, select bank1
 11168     1ABB  1303               	bcf	3,6	;RP1=0, select bank1
 11169     1ABC  1511               	bsf	17,2	;volatile
 11170     1ABD                     l229:
 11171     1ABD  0008               	return
 11172     1ABE                     __end_of_I2C_Master_Stop:
 11173                           
 11174                           	psect	text36
 11175     1AAC                     __ptext36:	
 11176 ;; *************** function _I2C_Master_Start *****************
 11177 ;; Defined at:
 11178 ;;		line 39 in file "I2C.c"
 11179 ;; Parameters:    Size  Location     Type
 11180 ;;		None
 11181 ;; Auto vars:     Size  Location     Type
 11182 ;;		None
 11183 ;; Return value:  Size  Location     Type
 11184 ;;                  1    wreg      void 
 11185 ;; Registers used:
 11186 ;;		wreg, status,2, status,0, pclath, cstack
 11187 ;; Tracked objects:
 11188 ;;		On entry : 0/0
 11189 ;;		On exit  : 0/0
 11190 ;;		Unchanged: 0/0
 11191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11192 ;;      Params:         0       0       0       0       0
 11193 ;;      Locals:         0       0       0       0       0
 11194 ;;      Temps:          0       0       0       0       0
 11195 ;;      Totals:         0       0       0       0       0
 11196 ;;Total ram usage:        0 bytes
 11197 ;; Hardware stack levels used: 1
 11198 ;; Hardware stack levels required when called: 1
 11199 ;; This function calls:
 11200 ;;		_I2C_Master_Wait
 11201 ;; This function is called by:
 11202 ;;		_main
 11203 ;; This function uses a non-reentrant model
 11204 ;;
 11205                           
 11206     1AAC                     _I2C_Master_Start:	
 11207                           ;psect for function _I2C_Master_Start
 11208                           
 11209     1AAC                     l3516:	
 11210                           ;incstack = 0
 11211                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11212                           
 11213                           
 11214                           ;I2C.c: 41:     I2C_Master_Wait();
 11215     1AAC  160A  158A  22D3  160A  158A  	fcall	_I2C_Master_Wait
 11216     1AB1                     l3518:
 11217                           
 11218                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
 11219     1AB1  1683               	bsf	3,5	;RP0=1, select bank1
 11220     1AB2  1303               	bcf	3,6	;RP1=0, select bank1
 11221     1AB3  1411               	bsf	17,0	;volatile
 11222     1AB4                     l223:
 11223     1AB4  0008               	return
 11224     1AB5                     __end_of_I2C_Master_Start:
 11225                           
 11226                           	psect	text37
 11227     1BC2                     __ptext37:	
 11228 ;; *************** function _I2C_Master_Read *****************
 11229 ;; Defined at:
 11230 ;;		line 74 in file "I2C.c"
 11231 ;; Parameters:    Size  Location     Type
 11232 ;;  a               2    0[COMMON] unsigned short 
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;  temp            2    4[COMMON] unsigned short 
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  2    0[COMMON] unsigned short 
 11237 ;; Registers used:
 11238 ;;		wreg, status,2, status,0, pclath, cstack
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11244 ;;      Params:         2       0       0       0       0
 11245 ;;      Locals:         2       0       0       0       0
 11246 ;;      Temps:          2       0       0       0       0
 11247 ;;      Totals:         6       0       0       0       0
 11248 ;;Total ram usage:        6 bytes
 11249 ;; Hardware stack levels used: 1
 11250 ;; Hardware stack levels required when called: 1
 11251 ;; This function calls:
 11252 ;;		_I2C_Master_Wait
 11253 ;; This function is called by:
 11254 ;;		_main
 11255 ;; This function uses a non-reentrant model
 11256 ;;
 11257                           
 11258     1BC2                     _I2C_Master_Read:	
 11259                           ;psect for function _I2C_Master_Read
 11260                           
 11261     1BC2                     l3524:	
 11262                           ;incstack = 0
 11263                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11264                           
 11265                           
 11266                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
 11267     1BC2  160A  158A  22D3  160A  158A  	fcall	_I2C_Master_Wait
 11268     1BC7                     l3526:
 11269                           
 11270                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
 11271     1BC7  1683               	bsf	3,5	;RP0=1, select bank1
 11272     1BC8  1303               	bcf	3,6	;RP1=0, select bank1
 11273     1BC9  1591               	bsf	17,3	;volatile
 11274                           
 11275                           ;I2C.c: 79:     I2C_Master_Wait();
 11276     1BCA  160A  158A  22D3  160A  158A  	fcall	_I2C_Master_Wait
 11277     1BCF                     l3528:
 11278                           
 11279                           ;I2C.c: 80:     temp = SSPBUF;
 11280     1BCF  1283               	bcf	3,5	;RP0=0, select bank0
 11281     1BD0  1303               	bcf	3,6	;RP1=0, select bank0
 11282     1BD1  0813               	movf	19,w	;volatile
 11283     1BD2  00F2               	movwf	??_I2C_Master_Read
 11284     1BD3  01F3               	clrf	??_I2C_Master_Read+1
 11285     1BD4  0872               	movf	??_I2C_Master_Read,w
 11286     1BD5  00F4               	movwf	I2C_Master_Read@temp
 11287     1BD6  0873               	movf	??_I2C_Master_Read+1,w
 11288     1BD7  00F5               	movwf	I2C_Master_Read@temp+1
 11289     1BD8                     l3530:
 11290                           
 11291                           ;I2C.c: 81:     I2C_Master_Wait();
 11292     1BD8  160A  158A  22D3  160A  158A  	fcall	_I2C_Master_Wait
 11293     1BDD                     l3532:
 11294                           
 11295                           ;I2C.c: 82:     if(a == 1){
 11296     1BDD  0370               	decf	I2C_Master_Read@a,w
 11297     1BDE  0471               	iorwf	I2C_Master_Read@a+1,w
 11298     1BDF  1D03               	btfss	3,2
 11299     1BE0  2BE2               	goto	u5801
 11300     1BE1  2BE3               	goto	u5800
 11301     1BE2                     u5801:
 11302     1BE2  2BE7               	goto	l235
 11303     1BE3                     u5800:
 11304     1BE3                     l3534:
 11305                           
 11306                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
 11307     1BE3  1683               	bsf	3,5	;RP0=1, select bank1
 11308     1BE4  1303               	bcf	3,6	;RP1=0, select bank1
 11309     1BE5  1291               	bcf	17,5	;volatile
 11310                           
 11311                           ;I2C.c: 84:     }else{
 11312     1BE6  2BEA               	goto	l236
 11313     1BE7                     l235:
 11314                           
 11315                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
 11316     1BE7  1683               	bsf	3,5	;RP0=1, select bank1
 11317     1BE8  1303               	bcf	3,6	;RP1=0, select bank1
 11318     1BE9  1691               	bsf	17,5	;volatile
 11319     1BEA                     l236:	
 11320                           ;I2C.c: 86:     }
 11321                           
 11322                           
 11323                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
 11324     1BEA  1611               	bsf	17,4	;volatile
 11325     1BEB                     l3536:
 11326                           
 11327                           ;I2C.c: 88:     return temp;
 11328     1BEB  0875               	movf	I2C_Master_Read@temp+1,w
 11329     1BEC  00F1               	movwf	?_I2C_Master_Read+1
 11330     1BED  0874               	movf	I2C_Master_Read@temp,w
 11331     1BEE  00F0               	movwf	?_I2C_Master_Read
 11332     1BEF                     l237:
 11333     1BEF  0008               	return
 11334     1BF0                     __end_of_I2C_Master_Read:
 11335                           
 11336                           	psect	text38
 11337     1AD3                     __ptext38:	
 11338 ;; *************** function _I2C_Master_Wait *****************
 11339 ;; Defined at:
 11340 ;;		line 32 in file "I2C.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;		None
 11343 ;; Auto vars:     Size  Location     Type
 11344 ;;		None
 11345 ;; Return value:  Size  Location     Type
 11346 ;;                  1    wreg      void 
 11347 ;; Registers used:
 11348 ;;		wreg, status,2
 11349 ;; Tracked objects:
 11350 ;;		On entry : 0/0
 11351 ;;		On exit  : 0/0
 11352 ;;		Unchanged: 0/0
 11353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11354 ;;      Params:         0       0       0       0       0
 11355 ;;      Locals:         0       0       0       0       0
 11356 ;;      Temps:          0       0       0       0       0
 11357 ;;      Totals:         0       0       0       0       0
 11358 ;;Total ram usage:        0 bytes
 11359 ;; Hardware stack levels used: 1
 11360 ;; This function calls:
 11361 ;;		Nothing
 11362 ;; This function is called by:
 11363 ;;		_I2C_Master_Start
 11364 ;;		_I2C_Master_Stop
 11365 ;;		_I2C_Master_Write
 11366 ;;		_I2C_Master_Read
 11367 ;;		_I2C_Master_RepeatedStart
 11368 ;; This function uses a non-reentrant model
 11369 ;;
 11370                           
 11371     1AD3                     _I2C_Master_Wait:	
 11372                           ;psect for function _I2C_Master_Wait
 11373                           
 11374     1AD3                     l3114:	
 11375                           ;incstack = 0
 11376                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11377                           
 11378     1AD3                     l217:	
 11379                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 11380                           
 11381     1AD3  1683               	bsf	3,5	;RP0=1, select bank1
 11382     1AD4  1303               	bcf	3,6	;RP1=0, select bank1
 11383     1AD5  1914               	btfsc	20,2	;volatile
 11384     1AD6  2AD8               	goto	u4651
 11385     1AD7  2AD9               	goto	u4650
 11386     1AD8                     u4651:
 11387     1AD8  2AD3               	goto	l217
 11388     1AD9                     u4650:
 11389     1AD9                     l3116:
 11390     1AD9  0811               	movf	17,w	;volatile
 11391     1ADA  391F               	andlw	31
 11392     1ADB  1D03               	btfss	3,2
 11393     1ADC  2ADE               	goto	u4661
 11394     1ADD  2ADF               	goto	u4660
 11395     1ADE                     u4661:
 11396     1ADE  2AD3               	goto	l217
 11397     1ADF                     u4660:
 11398     1ADF                     l220:
 11399     1ADF  0008               	return
 11400     1AE0                     __end_of_I2C_Master_Wait:
 11401     007E                     btemp	set	126	;btemp
 11402     007E                     wtemp0	set	126
 11403                           
 11404                           	psect	idloc
 11405                           
 11406                           ;Config register IDLOC0 @ 0x2000
 11407                           ;	unspecified, using default values
 11408     2000                     	org	8192
 11409     2000  3FFF               	dw	16383
 11410                           
 11411                           ;Config register IDLOC1 @ 0x2001
 11412                           ;	unspecified, using default values
 11413     2001                     	org	8193
 11414     2001  3FFF               	dw	16383
 11415                           
 11416                           ;Config register IDLOC2 @ 0x2002
 11417                           ;	unspecified, using default values
 11418     2002                     	org	8194
 11419     2002  3FFF               	dw	16383
 11420                           
 11421                           ;Config register IDLOC3 @ 0x2003
 11422                           ;	unspecified, using default values
 11423     2003                     	org	8195
 11424     2003  3FFF               	dw	16383
 11425                           
 11426                           	psect	config
 11427                           
 11428                           ;Config register CONFIG1 @ 0x2007
 11429                           ;	Oscillator Selection bits
 11430                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11431                           ;	Watchdog Timer Enable bit
 11432                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11433                           ;	Power-up Timer Enable bit
 11434                           ;	PWRTE = OFF, PWRT disabled
 11435                           ;	RE3/MCLR pin function select bit
 11436                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11437                           ;	Code Protection bit
 11438                           ;	CP = OFF, Program memory code protection is disabled
 11439                           ;	Data Code Protection bit
 11440                           ;	CPD = OFF, Data memory code protection is disabled
 11441                           ;	Brown Out Reset Selection bits
 11442                           ;	BOREN = OFF, BOR disabled
 11443                           ;	Internal External Switchover bit
 11444                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11445                           ;	Fail-Safe Clock Monitor Enabled bit
 11446                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11447                           ;	Low Voltage Programming Enable bit
 11448                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11449                           ;	In-Circuit Debugger Mode bit
 11450                           ;	DEBUG = 0x1, unprogramme 11451     2007                     	org	8199
 11452     2007  20D4               	dw	8404
 11453                           
 11454                           ;Config register CONFIG2 @ 0x2008
 11455                           ;	Brown-out Reset Selection bit
 11456                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11457                           ;	Flash Program Memory Self Write Enable bits
 11458                           ;	WRT = OFF, Write protection off
 11459     2008                     	org	8200
 11460     2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    144
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     39      47
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 3
		 -> valADC(BANK1[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 6
		 -> valADC(BANK1[3]), STR_2(CODE[6]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _I2C_Master_Init->___lldiv
    ___fldiv->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _portsetup->_I2C_Master_Init
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   40985
                                             35 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                           ___xxtofl
                          _portsetup
                        _setupINTOSC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32170
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7864
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1516
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6327
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     767
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             49 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            0     0      0     716
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     496
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     608
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _portsetup
     _I2C_Master_Init
       ___lldiv
   _setupINTOSC
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      2F       7       58.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8B      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 10 11:02:00 2023

            ___fldiv@aexp 0057              ___fldiv@bexp 0056                         pc 0002  
            ___fldiv@sign 004F                        l80 1B25                        l81 1B26  
                      l82 1B2C                        l90 0012                        l59 1B51  
                      l84 1B2D                        l76 1B15                        l77 1B18  
                      l78 1B1E                        l79 1B1F                        l87 1B0B  
                      l96 1D60                        l99 1EB8              ___awdiv@sign 0021  
                      fsr 0004       ___wmul@multiplicand 0072       __Umul8_16@word_mpld 0076  
                     l102 1C22                       l220 1ADF                       l108 1CD6  
                     l214 1C5A                       l223 1AB4                       l232 1AC7  
                     l217 1AD3                       l401 064D                       l235 1BE7  
                     l236 1BEA                       l180 10E3                       l237 1BEF  
                     l229 1ABD                       l181 10EF                       l421 1B9A  
                     l182 10FB                       l342 15A7                       l183 1106  
                     l415 07F1                       l600 00BD                       l185 1112  
                     l177 10BF                       l409 07AE                       l178 10CB  
                     l610 081E                       l179 10D7                       l419 1B82  
                     l605 1D7D                       l613 088A                       l349 0FFF  
                     l606 1D99                       l614 08A3                       l622 1FFF  
                     l455 1F1E                       l607 1DAE                       l632 1FFF  
                     l640 118C                       l368 021F                       l802 1220  
                     l618 1AD2                       l394 060F                       l804 139C  
                     l900 0931                       l636 11C9                       l572 1F87  
                     l629 1FEA                       l637 113D                       l725 1D1A  
                     l750 1686                       l590 0031                       l647 11BC  
                     l735 1C94                       l824 1384                       l752 165F  
                     l593 008D                       l585 1E5B                       l826 1392  
                     l818 1312                       l746 1603                       l842 0CA0  
                     l906 1AF1                       l771 1773                       l675 1E02  
                     l780 17D3                       l589 00CA                       l861 1BAF  
                     l854 0C94                       l767 174F                       l759 17FF  
                     l863 1BC1                       l792 1B75                       l848 0C10  
                     l777 1795                       l788 17F5                       l892 0909  
                     l789 17FF                       l886 08C6                       l888 095B  
                     l899 0925                       _GIE 005F                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       fsr0 0004                       indf 0000  
            ___awmod@sign 0076              ___flmul@aexp 0036              ___flmul@bexp 0037  
            ___flmul@sign 0031              ___flmul@temp 003C              ___flmul@prod 0038  
            ___fltol@exp1 005A                      l3000 0AD6                      l3010 0B6E  
                    l3002 0AED                      l3100 1C08                      l3020 0BDC  
                    l3012 0B94                      l3004 0B0A                      l3110 1C1B  
                    l3102 1C0B                      l3030 0BF4                      l3022 0BE0  
                    l3014 0BBC                      l3006 0B35                      l3112 1C1F  
                    l3104 1C0F                      l3200 113E                      l3040 0C15  
                    l3032 0BF5                      l3024 0BE1                      l3016 0BC5  
                    l3008 0B43                      l3120 13A6                      l3114 1AD3  
                    l3106 1C12                      l3210 1165                      l3202 1144  
                    l3042 0C1A                      l3050 0C4B                      l3034 0BF9  
                    l3026 0BEA                      l3018 0BD3                      l3116 1AD9  
                    l3108 1C18                      l3300 1B90                      l3220 1190  
                    l3212 1173                      l3204 1153                      l3060 0C7E  
                    l3052 0C58                      l3044 0C28                      l3036 0C0D  
                    l3028 0BF0                      l3132 1564                      l3140 0CAA  
                    l3310 1D91                      l3302 1B96                      l3214 117D  
                    l3206 1155                      l3062 0C8A                      l3054 0C63  
                    l3046 0C2C                      l3126 14B3                      l3118 13A0  
                    l3150 0DA0                      l3142 0CB1                      l2600 1F07  
                    l3080 1C58                      l3072 1C23                      l3312 1DAB  
                    l3320 0816                      l3240 0013                      l3216 117E  
                    l3208 115C                      l3064 0C8E                      l3056 0C72  
                    l3048 0C45                      l3128 14B9                      l3160 0E5C  
                    l3136 0CA4                      l3090 1AFF                      l2602 1F10  
                    l3082 1C59                      l3074 1C27                      l3314 1DAD  
                    l3306 1D61                      l3330 0866                      l3322 0832  
                    l3402 1B52                      l3410 08AA                      l3242 001E  
                    l3234 11B1                      l3226 1198                      l3218 1186  
                    l3066 0C8F                      l3058 0C7C                      l2610 1F22  
                    l3154 0E28                      l3138 0CA8                      l3092 1B08  
                    l3084 1AF3                      l3500 1D44                      l2604 1F16  
                    l3076 1C2A                      l3308 1D75                      l3332 08A0  
                    l3324 083A                      l3340 1AD0                      l3404 1B56  
                    l3420 08D7                      l3412 08AE                      l3260 0054  
                    l3252 0032                      l3236 11C1                      l3228 11AA  
                    l3068 0C98                      l2700 1CED                      l3180 1AE8  
                    l2620 1F36                      l2612 1F26                      l3172 0FD3  
                    l3148 0D99                      l3086 1AF6                      l3502 1D51  
                    l3094 1BF1                      l3510 1C98                      l3078 1C57  
                    l3334 08A2                      l3326 083E                      l3318 0802  
                    l3342 1AD2                      l3430 0900                      l3422 08DA  
                    l3414 08BE                      l3270 0087                      l3262 005D  
                    l3254 003A                      l3246 0027                      l3190 1124  
                    l2710 1D10                      l2702 1CF1                      l3182 1AEE  
                    l2630 1F4C                      l2622 1F3A                      l2614 1F2B  
                    l3166 0F44                      l3158 0E55                      l3520 1ABE  
                    l3088 1AFC                      l3504 1D54                      l3096 1BF7  
                    l3512 1CB4                      l3328 0862                      l2800 161F  
                    l3360 1FBA                      l3352 1F9C                      l3440 0933  
                    l3432 0910                      l3424 08E7                      l3416 08CE  
                    l3408 08A5                      l3272 0091                      l3280 00AB  
                    l3264 006F                      l3256 004B                      l2560 1B9C  
                    l2704 1D02                      l2712 1D16                      l2720 1C64  
                    l3184 1AF0                      l3176 1AE1                      l2640 1F6C  
                    l2632 1F50                      l2624 1F3C                      l2616 1F2D  
                    l2608 1F1F                      l3168 0F4B                      l3600 02C1  
                    l3530 1BD8                      l3522 1AC3                      l3506 1D5A  
                    l3098 1BFA                      l3514 1CBA                      l3338 1AC8  
                    l2810 1629                      l2802 1621                      l3362 1FBE  
                    l3370 1FD8                      l3354 1FAF                      l3346 1F88  
                    l3442 0949                      l3434 091B                      l3426 08EE  
                    l3266 007D                      l3258 004D                      l3194 112D  
                    l2570 1BBD                      l2562 1B9E                      l2706 1D08  
                    l2730 1C83                      l2722 1C6B                      l3178 1AE2  
                    l2642 1F73                      l2634 1F54                      l2626 1F42  
                    l2618 1F31                      l3610 02F7                      l3602 02C7  
                    l3532 1BDD                      l3524 1BC2                      l3516 1AAC  
                    l3540 1AB5                      l2580 1B23                      l3508 1C95  
                    l3460 10DD                      l3452 10B5                      l2900 1792  
                    l2820 1647                      l2812 162B                      l2804 1623  
                    l2740 15AD                      l3380 1FF4                      l3356 1FB0  
                    l3348 1F93                      l3292 1B76                      l3444 094E  
                    l3436 091F                      l3428 08F2                      l3268 007E  
                    l3188 1113                      l2564 1BA5                      l2708 1D09  
                    l2732 1C8A                      l2724 1C6F                      l2716 1C5B  
                    l2636 1F65                      l2628 1F45                      l2644 1F79  
                    l2660 1E0F                      l2652 1E03                      l3700 0682  
                    l3620 039E                      l3612 0316                      l3604 02DA  
                    l3534 1BE3                      l3526 1BC7                      l3518 1AB1  
                    l3542 1ABA                      l2582 1B2A                      l2574 1B0D  
                    l2590 1ED9                      l3470 110F                      l3462 10E9  
                    l3454 10BB                      l2910 17B1                      l2830 1671  
                    l2822 1663                      l2814 162D                      l2806 1625  
                    l2750 15C0                      l2742 15B1                      l3358 1FB8  
                    l3390 1DCB                      l3382 1DAF                      l3294 1B78  
                    l3446 0952                      l3438 0929                      l3286 00B2  
                    l3278 0099                      l2566 1BA9                      l2726 1C73  
                    l2718 1C61                      l2734 1C90                      l2646 1F7E  
                    l2638 1F6B                      l2670 1E28                      l2662 1E13  
                    l2654 1E04                      l3702 06DD                      l3710 077C  
                    l3630 0426                      l3614 0361                      l3606 02ED  
                    l3622 03A6                      l3550 01C3                      l3536 1BEB  
                    l3528 1BCF                      l2576 1B11                      l3480 1E6B  
                    l3800 1246                      l2592 1EDD                      l2584 1EB9  
                    l3472 1B2E                      l3464 10F5                      l3456 10C5  
                    l2920 17EA                      l2912 17CF                      l2904 179A  
                    l2832 167A                      l2824 166A                      l2808 1627  
                    l2816 162F                      l2760 15D6                      l2752 15C8  
                    l2744 15B5                      l3376 1FDF                      l3368 1FC6  
                    l3392 1DDD                      l3384 1DB7                      l3296 1B7C  
                    l3448 0953                      l3288 00C2                      l2568 1BB8  
                    l2728 1C7D                      l2648 1F83                      l2680 1E47  
                    l2672 1E2C                      l2664 1E18                      l2656 1E08  
                    l3712 0784                      l3704 0718                      l3640 0488  
                    l3632 044D                      l3624 03B5                      l3616 037A  
                    l3608 02F1                      l3720 079A                      l3560 01DB  
                    l3552 01C8                      l3544 01B5                      l2578 1B1C  
                    l3482 1E79                      l3490 1D21                      l3810 1271  
                    l2594 1EE6                      l2586 1EC9                      l3474 1B44  
                    l3466 1100                      l3458 10D1                      l2930 17FE  
                    l2922 17EB                      l2914 17D8                      l2906 179F  
                    l2850 16BE                      l2842 1698                      l2826 166C  
                    l2834 167E                      l2818 1630                      l2770 15E6  
                    l2762 15DC                      l2754 15C9                      l2746 15B6  
                    l2738 15A8                      l3378 1FEF                      l3394 1DEB  
                    l3386 1DBA                      l3298 1B89                      l2690 1CD7  
                    l2674 1E30                      l2666 1E1E                      l2682 1E4D  
                    l2658 1E0D                      l3730 07C9                      l3722 07A0  
                    l3714 0789                      l3706 0737                      l3650 0503  
                    l3642 04A6                      l3634 045C                      l3626 03FC  
                    l3618 0383                      l3562 01DE                      l3570 021B  
                    l3554 01CA                      l3546 01B8                      l3484 1E7F  
                    l3476 1E5C                      l3492 1D2E                      l3820 1296  
                    l3812 1279                      l3804 124F                      l2596 1EF8  
                    l2588 1ECC                      l3468 110B                      l2924 17EF  
                    l2916 17DD                      l2908 17AD                      l2852 16C0  
                    l2844 16AF                      l2836 168A                      l2860 16D3  
                    l2828 1670                      l2772 15EB                      l2780 15FB  
                    l2764 15DD                      l2748 15BB                      l2756 15CB  
                    l3396 1DF4                      l3388 1DC7                      l2940 096A  
                    l2932 095C                      l2692 1CD9                      l2684 1E52  
                    l2676 1E3A                      l2668 1E21                      l3732 07C9  
                    l3724 07A8                      l3716 078D                      l3708 0741  
                    l3660 0554                      l3652 0550                      l3636 0477  
                    l3628 040B                      l3580 0249                      l3740 07ED  
                    l3572 021D                      l3564 01F3                      l3556 01D6  
                    l3548 01BE                      l3900 0107                      l3486 0006  
                    l3478 1E62                      l3494 1D31                      l3830 12C1  
                    l3822 1297                      l3814 127B                      l3806 1261  
                    l3750 11CA                      l2598 1F06                      l2926 17F1  
                    l2918 17E5                      l2862 16E9                      l2870 1741  
                    l2854 16C4                      l2846 16B3                      l2838 168F  
                    l2790 1615                      l2782 1609                      l2774 15F0  
                    l2766 15E1                      l2758 15D3                      l3398 1DFA  
                    l2950 0986                      l2942 096F                      l2934 0961  
                    l2694 1CDF                      l2686 1E57                      l2678 1E40  
                    l3734 07D7                      l3726 07B9                      l3718 0793  
                    l3670 05A6                      l3654 0552                      l3646 04C5  
                    l3638 0480                      l3590 027C                      l3582 024D  
                    l3566 0206                      l3558 01D7                      l3910 018D  
                    l3902 0110                      l3496 1D37                      l3488 1D1C  
                    l3840 12DE                      l3816 1280                      l3824 12A0  
                    l3832 12C5                      l3808 1269                      l3760 11DD  
                    l3752 11CF                      l2928 17FA                      l2880 176E  
                    l2872 1757                      l2864 1727                      l2856 16C5  
                    l2848 16B7                      l2792 1617                      l2784 160D  
                    l2776 15F8                      l2768 15E5                      l2960 0999  
                    l2952 098B                      l2944 0974                      l2936 0965  
                    l2696 1CE2                      l3728 07BA                      l3680 061E  
                    l3672 05AB                      l3664 058B                      l3648 04CE  
                    l3592 0295                      l3584 0251                      l3576 0221  
                    l3568 020A                      l3912 019D                      l3904 011C  
                    l3498 1D3E                      l3850 12F6                      l3842 12E2  
                    l3834 12CB                      l3826 12B2                      l3818 1292  
                    l3770 11F5                      l3762 11E2                      l3754 11D3  
                    l2890 1781                      l2882 1772                      l2874 175C  
                    l2866 172D                      l2858 16CE                      l2794 1619  
                    l2786 1611                      l2778 15F9                      l2970 09B5  
                    l2962 099E                      l2954 098F                      l2946 097C  
                    l2938 0969                      l2698 1CE9                      l3690 0649  
                    l3682 0622                      l3674 05E6                      l3666 0595  
                    l3594 0299                      l3586 025F                      l3578 023D  
                    l3738 07DD                      l3914 01A5                      l3906 0121  
                    l3860 1317                      l3852 12F7                      l3844 12E3  
                    l3836 12D3                      l3828 12B3                      l3780 1208  
                    l3772 11FA                      l3764 11EA                      l3756 11D7  
                    l2884 1777                      l2892 1783                      l2868 1732  
                    l2796 161B                      l2788 1613                      l2980 09DE  
                    l2972 09BA                      l2964 09A6                      l2956 0993  
                    l2948 097E                      l3692 0656                      l3684 0628  
                    l3676 0605                      l3668 05A1                      l3596 029D  
                    l3588 0263                      l3908 0130                      l3862 131C  
                    l3870 134D                      l3854 12FB                      l3846 12EC  
                    l3838 12D5                      l3790 1228                      l3782 120D  
                    l3774 11FE                      l3766 11EB                      l3758 11D8  
                    l2886 177A                      l2878 1765                      l2894 1787  
                    l2798 161D                      l2990 0A77                      l2982 09F9  
                    l2966 09A8                      l2958 0994                      l3694 065B  
                    l3686 0635                      l3678 0617                      l3598 02B6  
                    l3880 1383                      l3872 135A                      l3864 132A  
                    l3856 130F                      l3848 12F2                      l3792 1234  
                    l3784 1215                      l3776 1202                      l3768 11ED  
                    l2896 1788                      l2888 177C                      l2992 0A80  
                    l2984 0A15                      l2976 09C3                      l2968 09B0  
                    l3696 0660                      l3688 0644                      l3882 1388  
                    l3874 1368                      l3866 132E                      l3794 1238  
                    l3786 1216                      l3778 1203                      l2898 178C  
                    l2994 0A8E                      l2986 0A3F                      l2978 09D1  
                    l3698 0664                      l3884 138C                      l3876 1377  
                    l3868 1347                      l3788 1218                      l2996 0AAB  
                    l2988 0A5B                      l3892 00CB                      l3886 138E  
                    l3878 137B                      l3798 1241                      l2998 0AB9  
                    l3894 00E8                      l3896 00F1                      l3978 0235  
                    l3898 0102                      STR_1 10A6                      STR_2 10A0  
                    STR_3 10AB                      u4000 16B7                      u4001 16B6  
                    u4010 16C4                      u4011 16C3                      u4100 1772  
                    u4101 1771                      u4110 1777                      u4030 16E9  
                    u4111 1776                      u4031 16E8                      u3400 1B2A  
                    u4200 17CF                      u4120 1781                      u5000 1190  
                    u3401 1B29                      u4201 17CE                      u4121 1780  
                    u4041 1700                      u4033 16E5                      u4025 16C7  
                    u5001 118F                      u3410 1EC9                      u4210 17D8  
                    u4130 1787                      u4050 1714                      u4042 1701  
                    u5010 1197                      u3411 1EC8                      u4211 17D7  
                    u4131 1786                      u4051 1715                      u4043 1706  
                    u5011 1196                      u4220 17DD                      u4140 178C  
                    u4060 1732                      u4052 171A                      u4044 1707  
                    u5100 006F                      u3340 1BA9                      u4300 0999  
                    u3500 1F42                      u4221 17DC                      u4141 178B  
                    u4061 1731                      u4053 171B                      u4045 170C  
                    u5101 006E                      u3341 1BA8                      u4301 0998  
                    u3501 1F41                      u3430 1EDD                      u4230 17EA  
                    u4150 1792                      u4070 1757                      u4046 170D  
                    u5030 11A9                      u4310 099E                      u3431 1EDC  
                    u4231 17E9                      u4151 1791                      u4071 1756  
                    u5031 11A8                      u4311 099D                      u4240 17EF  
                    u4160 1799                      u4080 175C                      u5200 1B7C  
                    u5120 008D                      u5040 11B0                      u3360 1BBD  
                    u4320 09B5                      u3520 1F54                      u3600 1E1E  
                    u6000 05A1                      u3425 1ECE                      u4241 17EE  
                    u4161 1798                      u4081 175B                      u5201 1B7B  
                    u5121 008C                      u5105 006B                      u5041 11AF  
                    u5025 1199                      u3361 1BBC                      u4401 0AC8  
                    u4321 09B4                      u3521 1F53                      u3601 1E1D  
                    u6001 05A0                      u3370 1B11                      u3450 1EF8  
                    u4250 17FE                      u4170 179F                      u5130 0091  
                    u4402 0ACF                      u4330 09BA                      u3371 1B10  
                    u3451 1EF7                      u4251 17FD                      u4171 179E  
                    u5131 0090                      u5115 0080                      u3355 1BB0  
                    u4403 0AD6                      u4331 09B9                      u3515 1F46  
                    u3380 1B1C                      u4180 17B1                      u5140 0098  
                    u5060 11C1                      u4260 0969                      u3540 1F65  
                    u3620 1E30                      u6100 07A0                      u6020 0616  
                    u3381 1B1B                      u3445 1EDF                      u5301 084D  
                    u4181 17B0                      u5141 0097                      u5061 11C0  
                    u4421 0AFC                      u4341 0A07                      u4261 0968  
                    u3541 1F64                      u3621 1E2F                      u6101 079F  
                    u6021 0615                      u3390 1B23                      u3470 1F16  
                    u5310 0866                      u5302 084E                      u4190 17C0  
                    u5230 1B96                      u5070 001E                      u4510 0BE0  
                    u4422 0B03                      u4342 0A0E                      u4270 096F  
                    u3710 1D02                      u3630 1E3A                      u6110 07A8  
                    u6030 0635                      u3391 1B22                      u3471 1F15  
                    u3455 1EF4                      u5311 0865                      u5303 0853  
                    u4095 1767                      u5231 1B95                      u5215 1B83  
                    u5071 001D                      u5055 11B3                      u4511 0BDF  
                    u4431 0B27                      u4423 0B0A                      u4415 0AD8  
                    u4351 0A23                      u4343 0A15                      u4271 096E  
                    u3711 1D01                      u3535 1F55                      u3631 1E39  
                    u3615 1E22                      u6111 07A7                      u6031 0634  
                    u6015 05AE                      u6200 1208                      u5240 1D75  
                    u5304 0854                      u3800 15B5                      u5400 1FD7  
                    u5160 00AA                      u5080 0030                      u4600 0C58  
                    u4432 0B2E                      u4352 0A2A                      u4280 0974  
                    u3560 1F79                      u3480 1F26                      u6120 07B9  
                    u6040 0644                      u6201 1207                      u3465 1F08  
                    u5241 1D74                      u5321 0875                      u5305 0859  
                    u3801 15B4                      u5401 1FD6                      u5225 1B8A  
                    u5161 00A9                      u5081 002F                      u4601 0C57  
                    u4505 0BD5                      u4441 0B52                      u4433 0B35  
                    u4361 0A4D                      u4353 0A31                      u4281 0973  
                    u3705 1CF2                      u3561 1F78                      u3545 1F61  
                    u3481 1F25                      u6121 07B8                      u6041 0643  
                    u6210 120D                      u5250 1D91                      u5330 08A0  
                    u5322 0876                      u5306 085A                      u3810 15BB  
                    u5410 1FDE                      u5170 00B1                      u4610 0C72  
                    u4530 0BF4                      u4450 0B7A                      u4442 0B59  
                    u4362 0A54                      u4290 0993                      u3730 1D16  
                    u3570 1F7E                      u3490 1F31                      u3650 1E4D  
                    u6130 07C9                      u6050 065B                      u6211 120C  
                    u5251 1D90                      u5331 089F                      u5323 087B  
                    u4195 17BB                      u3811 15BA                      u5411 1FDD  
                    u5171 00B0                      u5155 009A                      u4611 0C71  
                    u4531 0BF3                      u4443 0B60                      u4371 0A69  
                    u4363 0A5B                      u4291 0992                      u3731 1D15  
                    u3715 1CFE                      u3571 1F7D                      u3555 1F6D  
                    u3491 1F30                      u3651 1E4C                      u3635 1E36  
                    u6131 07C8                      u6051 065A                      u6035 0631  
                    _PEIE 005E                      u6300 12CB                      u6220 1228  
                    u5260 1DAB                      u5324 087C                      u5340 1AD0  
                    u3900 1652                      u3820 15C0                      u5500 1DFA  
                    u4620 0C8E                      u4540 0BF9                      u4372 0A70  
                    u3740 1C61                      u3660 1E52                      u3580 1E08  
                    u6140 07D7                      u6301 12CA                      u6221 1227  
                    u5261 1DAA                      u5325 0881                      u5341 1ACF  
                    u3901 1650                      u3821 15BF                      u5501 1DF9  
                    u4621 0C8D                      u4605 0C54                      u4541 0BF8  
                    u4525 0BE3                      u4461 0B86                      u4373 0A77  
                    u3725 1D0A                      u3741 1C60                      u3661 1E51  
                    u3645 1E41                      u3581 1E07                      u6141 07D6  
                    u6125 07B5                      u6045 0640                      u6310 12D3  
                    u6230 1246                      u4630 1C3A                      u5326 0882  
                    u5270 0816                      u3910 1653                      u3830 15DC  
                    u5430 1FEF                      u5350 1F93                      u5510 08AA  
                    u5190 00C2                      u4550 0C0D                      u4470 0BA2  
                    u4462 0B8D                      u3670 1CDF                      u4710 14B9  
                    u3590 1E13                      u6150 07ED                      u6311 12D2  
                    u6231 1245                      u5335 089C                      u5271 0815  
                    u3831 15DB                      u5431 1FEE                      u5351 1F92  
                    u5511 08A9                      u5191 00C1                      u5095 0056  
                    u4615 0C6E                      u4551 0C0C                      u4463 0B94  
                    u4455 0B75                      u4391 0A9D                      u3671 1CDE  
                    u4711 14B8                      u3591 1E12                      u6151 07EC  
                    u6135 07C5                      u6400 132E                      u6240 1280  
                    u6160 11D7                      u5280 0832                      u3920 1663  
                    u3840 15E5                      u5440 1FF4                      u5360 1FAA  
                    u5600 0925                      u5520 08AE                      u4560 0C14  
                    u4392 0AA4                      u3760 1C73                      u4800 0DA0  
                    u6080 0783                      u6401 132D                      u6241 127F  
                    u6161 11D6                      u5265 1DA7                      u5281 0831  
                    u3921 1662                      u3841 15E4                      u5441 1FF3  
                    u5425 1FE1                      u5601 0924                      u5521 08AD  
                    u5185 00B4                      u4561 0C13                      u4481 0BAE  
                    u4393 0AAB                      u4385 0A79                      u3761 1C72  
                    u4705 1472                      u4801 0D9F                      u6081 0782  
                    u6065 06E0                      u4650 1AD9                      u6410 133D  
                    u6330 12E2                      u6170 11DD                      u5290 083E  
                    u3930 1670                      u3850 15EB                      u5370 1FBE  
                    u5450 1DB7                      u5610 0929                      u5530 08CE  
                    u4570 0C1A                      u4482 0BB5                      u3690 1CF1  
                    u3770 1C7D                      u6090 0799                      u4651 1AD8  
                    u6331 12E1                      u6171 11DC                      u4635 1C35  
                    u5291 083D                      u3931 166F                      u3851 15EA  
                    u5371 1FBD                      u5451 1DB6                      u5611 0928  
                    u5531 08CD                      u4571 0C19                      u4483 0BBC  
                    u4475 0B9D                      u3691 1CF0                      u3771 1C7C  
                    u3755 1C65                      u6091 0798                      u6075 0744  
                    u4660 1ADF                      u6420 135A                      u6180 11E2  
                    u5700 10F5                      u3860 15F0                      u5380 1FC5  
                    u5620 093E                      u4580 0C2C                      u4661 1ADE  
                    u4645 1BFD                      u6421 1359                      u6325 12D7  
                    u6181 11E1                      u5701 10F4                      u3861 15EF  
                    u5381 1FC4                      u5365 1FA5                      u4581 0C2B  
                    u3685 1CE3                      u4725 14D6                      u6430 1377  
                    u6350 12F6                      u6270 1296                      u6190 1202  
                    u5710 1100                      u3950 1686                      u3870 1609  
                    u5470 1DCB                      u5630 094E                      u5550 08ED  
                    u4590 0C3B                      u3790 1C90                      u4670 13A6  
                    u4750 0CA8                      u6431 1376                      u6415 1338  
                    u6351 12F5                      u6271 1295                      u6255 1282  
                    u6191 1201                      u5711 10FF                      u3951 1685  
                    u3871 1608                      u5471 1DCA                      u5631 094D  
                    u5551 08EC                      u4495 0BBE                      u3791 1C8F  
                    u3775 1C79                      u4735 1523                      u4671 13A5  
                    u4815 0DB3                      u4751 0CA7                      u5800 1BE3  
                    u6440 138C                      u6360 12FB                      u5720 110B  
                    u3960 168A                      u3880 160D                      u5480 1DDD  
                    u5640 0952                      u4920 1AE8                      u4840 0E5C  
                    u4760 0CB1                      u5801 1BE2                      u6441 138B  
                    u6425 1356                      u6361 12FA                      u6345 12E5  
                    u6265 128B                      u5721 110A                      u3961 1689  
                    u3945 1673                      u3881 160C                      u5481 1DDC  
                    u5465 1DBC                      u5641 0951                      u5625 0939  
                    u5545 08DF                      u3785 1C84                      u4745 156F  
                    u4921 1AE7                      u4905 0F9A                      u4841 0E5B  
                    u4825 0DEF                      u4761 0CB0                      u5730 1D21  
                    u6370 130F                      u6290 12B2                      u5650 10BB  
                    u3970 168F                      u3890 1647                      u5570 090F  
                    u4930 1AEE                      u5810 01BE                      u6507 1E66  
                    u5731 1D20                      u6435 1373                      u6371 130E  
                    u6291 12B1                      u5651 10BA                      u3971 168E  
                    u3891 1646                      u5395 1FC7                      u5571 090E  
                    u4595 0C36                      u4931 1AED                      u4915 0FD6  
                    u4835 0E2B                      u5811 01BD                      u6380 1316  
                    u5660 10C5                      u4940 1124                      u5900 039E  
                    u5820 01D6                      u6517 1E75                      u6381 1315  
                    u6285 1299                      u5661 10C4                      u3981 16A1  
                    u5485 1DD9                      u5565 0901                      u4941 1123  
                    u4685 13C3                      u5901 039D                      u5821 01D5  
                    u5750 1D44                      u6390 131C                      u5670 10D1  
                    u3990 16B3                      u3982 16A8                      u5590 091F  
                    u4950 113C                      u5910 03B5                      u5830 021A  
                    u6527 1E83                      u5751 1D43                      u6391 131B  
                    u6295 12AE                      u5671 10D0                      u3991 16B2  
                    u3983 16AF                      u3895 1643                      u5495 1DEC  
                    u5591 091E                      u4951 113B                      u4695 141D  
                    u4855 0E7C                      u4775 0CD1                      u5911 03B4  
                    u5831 0219                      u5680 10DD                      u4880 0F4B  
                    u5920 040B                      u5840 0249                      u6537 1B03  
                    u5745 1D27                      u5681 10DC                      u5585 0914  
                    u4881 0F4A                      u4865 0EB8                      u4785 0D0D  
                    u5921 040A                      u5841 0248                      u5770 1CA2  
                    u5690 10E9                      u4970 1173                      u5930 0426  
                    u5850 024D                      u5691 10E8                      u4971 1172  
                    u4875 0F03                      u4795 0D58                      u5931 0425  
                    u5915 03B1                      u5851 024C                      u5780 1CC4  
                    u5940 044D                      u5860 027C                      u5765 1D4A  
                    u4965 115E                      u5941 044C                      u5925 0407  
                    u5861 027B                      u6477 0129                      u5790 1CD6  
                    u4990 118C                      u5950 045C                      u5870 02B6  
                    u6487 1C0D                      u5791 1CD5                      u4991 118B  
                    u4975 116F                      u4895 0F5E                      u5951 045B  
                    u5871 02B5                      u5960 0477                      u5880 02F1  
                    u6497 1C1D                      u4985 117F                      u5961 0476  
                    u5881 02F0                      u5890 037A                      u5955 0458  
                    u5891 0379                      u5980 058A                      u5981 0589  
                    u5990 0595                      u5991 0594                      u5975 0557  
                    u5985 0586         ?_Lcd_Write_String 0075                      _main 00CB  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0077  
         ___fldiv@new_exp 0050              _sprintf$1019 00AA           __end_of_Lcd_Cmd 1B0C  
        ?_I2C_Master_Init 0020          ?_I2C_Master_Read 0070          ?_I2C_Master_Wait 0070  
        ?_I2C_Master_Stop 0070             ___fltol@sign1 0059           __end_of___fladd 1800  
                   ?_main 0070           __end_of___fldiv 139D           __end_of___awdiv 1F88  
         __end_of___flneg 1AD3           __end_of___awmod 1E5C           __end_of___flmul 0CA1  
         __end_of___flsub 1B76           __end_of___fltol 2000                     _ANSEL 0188  
         __end_of___lldiv 1F1F           ___awdiv@divisor 0077           __end_of___llmod 1E03  
         __end_of___lwdiv 1D1B           __end_of___lwmod 1C95           ___awdiv@counter 0020  
                   _PORTA 0005                     _PORTB 0006                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISD 0088  
                   _SSPIE 0463                     _SSPIF 0063           __end_of_dpowers 10A0  
                   _scale 0CA1           __end_of_isdigit 1AF2                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 07F2  
        __end_of_Lcd_Init 1EB9          __end_of_Lcd_Port 1B2E           __initialization 07F2  
            __end_of_main 01B2                    ??_main 00C3         ?_I2C_Master_Start 0070  
       ?_I2C_Master_Write 0070        ??_I2C_Master_Start 0070        ??_I2C_Master_Write 0072  
        ___llmod@dividend 0074                    ?_scale 003E          ___awdiv@dividend 0079  
                  _ANSELH 0189                 ??_Lcd_Cmd 0071                    _SSPADD 0093  
                  _TRISC3 043B                    _TRISC4 043C                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of___xxtofl 095C          __end_of__powers_ 1044  
                  ___flge 0802                    ___fleq 1D61                 ??___fladd 005A  
                  ___wmul 1B76                 ??___fldiv 0046                 ??___awdiv 007B  
                  _lecADC 00CB                 ??___flneg 0074                 ??___awmod 0074  
               ??___flmul 002C                 ??___flsub 007E                 ??___fltol 0055  
               ??___lldiv 0078                 ??___llmod 0078                 ??___lwdiv 007A  
               ??___lwmod 0074                    _conver 00C7                    _valADC 00CC  
                  _fround 139D          ___awdiv@quotient 0022           ___awmod@divisor 0070  
         ___awmod@counter 0075              ?_setupINTOSC 0070                 ??_isdigit 0070  
               ??_sprintf 00A5           Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074  
         Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077                ___flge@ff1 0070  
              ___flge@ff2 0074              ___xxtofl@arg 007A              ___xxtofl@exp 0079  
            ___xxtofl@val 0070                ___fleq@ff1 0070                ___fleq@ff2 0074  
 __end_of__initialization 07FC                ___flneg@f1 0070         __end_of_Lcd_Clear 0013  
              ___fltol@f1 0051            __pcstackCOMMON 0070             __end_of_scale 1000  
          _Lcd_Set_Cursor 1D1B                __div_to_l_ 0013                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070           __div_to_l_@exp1 0025           __div_to_l_@cntr 0024  
                 ??_scale 0042           __div_to_l_@quot 0020                __pbssBANK1 00C7  
           __div_to_l_@f1 0070             __div_to_l_@f2 0074         __end_of__Umul8_16 1BC2  
              __pmaintext 00CB                   ?___flge 0070                   ?___fleq 0070  
                 ?___wmul 0070                   ?_fround 003E    __end_of_Lcd_Set_Cursor 1D61  
               ?___xxtofl 0070                ??_Lcd_Init 0074                ??_Lcd_Port 0070  
                 _SSPCON2 0091                   _SSPSTAT 0094                __stringtab 1000  
          _Lcd_Write_Char 1BF0                   _Lcd_Cmd 1AF2         __end_of__npowers_ 1078  
              _scale$1018 004C                   ___fladd 15A8                   ___fldiv 11CA  
                 ___awdiv 1F1F                   ___flneg 1AC8                   ___awmod 1E03  
                 ___flmul 095C                   ___flsub 1B52                   ___fltol 1F88  
                 ___lldiv 1EB9                   ___llmod 1DAF                   ___lwdiv 1CD7  
                 ___lwmod 1C5B           ?_Lcd_Set_Cursor 0074                   __ptext1 01B2  
                 __ptext2 0CA1                   __ptext3 1E03                   __ptext4 1F1F  
                 __ptext5 1AE0                   __ptext6 139D                   __ptext7 1C5B  
                 __ptext8 1CD7                   __ptext9 095C               ?__div_to_l_ 0070  
                 _dpowers 1078                   _isdigit 1AE0                ??___xxtofl 0074  
        ___awmod@dividend 0072                   _sprintf 01B2    __end_of_Lcd_Write_Char 1C23  
    end_of_initialization 07FC           ___lldiv@divisor 0070           ___lldiv@counter 007D  
        I2C_Master_Init@c 0020          I2C_Master_Read@a 0070                 Lcd_Port@a 0070  
       __end_of_portsetup 1B52            __tdiv_to_l_@f1 0070            __tdiv_to_l_@f2 0074  
           ??__tdiv_to_l_ 0078                 _PORTDbits 0008               ___fladd@grs 0065  
           ___xxtofl@sign 0078                 _TRISCbits 0087               ___fldiv@grs 0052  
             ___fldiv@rem 004B           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075  
       Lcd_Write_String@i 007A               ___flmul@grs 0032                 _Lcd_Clear 0006  
          __end_of___flge 08A4            __end_of___fleq 1DAF            __end_of___wmul 1B9B  
        _Lcd_Write_String 1C95            __end_of_fround 15A8       start_initialization 07F2  
     __end_of__tdiv_to_l_ 11CA         ??_I2C_Master_Init 0024         ??_I2C_Master_Read 0072  
       ??_I2C_Master_Wait 0070         ??_I2C_Master_Stop 0070           ___llmod@divisor 0070  
         ___llmod@counter 0079                ?_Lcd_Clear 0070                  ??___flge 0078  
                ??___fleq 0078                  ??___wmul 0074                 __Umul8_16 1B9B  
         Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073                  ??_fround 0042  
           sprintf@tmpval 00B7                 ___fladd@a 0056                 ___fladd@b 0052  
              fround@prec 0051                 ___fldiv@a 003E                 ___fldiv@b 0042  
               ___flmul@a 0028                 ___flmul@b 0024                 ___flsub@a 0066  
               ___flsub@b 006A                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0           setupINTOSC@IRCF 0070                  ?_Lcd_Cmd 0070  
             sprintf@flag 00AF               sprintf@eexp 00B5               sprintf@fval 00BE  
             sprintf@prec 00BC          _I2C_Master_Start 1AAC          _I2C_Master_Write 1ABE  
        ___lwdiv@dividend 0078          ??_Lcd_Set_Cursor 0075                  ?___fladd 0052  
                ?___fldiv 003E                  ?___awdiv 0077                  ?___flneg 0070  
                ?___awmod 0070                  ?___flmul 0024                  ?___flsub 0066  
                ?___fltol 0051                  ?___lldiv 0070                  ?___llmod 0070  
               __npowers_ 1044                ?__Umul8_16 0070                  ?___lwdiv 0076  
                ?___lwmod 0070                 __pstrings 1000               __tdiv_to_l_ 1113  
            ??__div_to_l_ 0078                  ?_isdigit 0070          ___lwdiv@quotient 007B  
                ?_sprintf 00A0            ___wmul@product 0074                  Lcd_Cmd@a 0073  
      __end_of__div_to_l_ 00CB               ??_Lcd_Clear 0074               __stringbase 100F  
           ??_setupINTOSC 0070                 _portsetup 1B2E         ___wmul@multiplier 0070  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 1E5C                  _Lcd_Port 1B0C  
     I2C_Master_Read@temp 0074  __end_of_Lcd_Write_String 1CD7               ??__Umul8_16 0072  
             _fround$1016 004D               _fround$1017 0049        __end_of__stringtab 1010  
              ?_portsetup 0070               _isdigit$816 0070                sprintf@val 00B1  
         _I2C_Master_Init 1C23           _I2C_Master_Read 1BC2                  ___xxtofl 08A4  
         _I2C_Master_Wait 1AD3           _I2C_Master_Stop 1AB5           ___lwdiv@divisor 0076  
         ___lwdiv@counter 007D                  __ptext10 1B9B                  __ptext11 1113  
                __ptext20 0802                  __ptext12 0013                  __ptext21 1D61  
                __ptext13 08A4                  __ptext30 1E5C                  __ptext22 10B4  
                __ptext14 1B76                  __ptext31 0006                  __ptext23 1B2E  
                __ptext15 1DAF                  __ptext32 1AF2                  __ptext24 1C23  
                __ptext16 1F88                  __ptext33 1B0C                  __ptext25 1EB9  
                __ptext17 1B52                  __ptext34 1ABE                  __ptext26 11CA  
                __ptext18 15A8                  __ptext35 1AB5                  __ptext27 1C95  
                __ptext19 1AC8                  __ptext36 1AAC                  __ptext28 1BF0  
                __ptext37 1BC2                  __ptext29 1D1B                  __ptext38 1AD3  
     __end_of_setupINTOSC 1113                  __powers_ 1010  __end_of_I2C_Master_Start 1AB5  
__end_of_I2C_Master_Write 1AC8                  isdigit@c 0071                  scale@scl 0050  
      Lcd_Write_Char@temp 0072                 sprintf@ap 00AE          __tdiv_to_l_@exp1 0025  
        __tdiv_to_l_@cntr 0024                 sprintf@sp 00BB          __tdiv_to_l_@quot 0020  
        ___lwmod@dividend 0072          ___lldiv@dividend 0074                 stringcode 100A  
              _OSCCONbits 008F   __end_of_I2C_Master_Init 1C5B   __end_of_I2C_Master_Read 1BF0  
 __end_of_I2C_Master_Wait 1AE0   __end_of_I2C_Master_Stop 1ABE        Lcd_Set_Cursor@temp 0079  
            ?__tdiv_to_l_ 0070               ??_portsetup 007E    __Umul8_16@multiplicand 0070  
             _setupINTOSC 10B4                  sprintf@c 00C2                  sprintf@f 00A0  
        ___lldiv@quotient 0079         I2C_Master_Write@d 0070           ___lwmod@divisor 0070  
         ___lwmod@counter 0075                  stringdir 100A                  stringtab 1000  
             _SSPCON2bits 0091             ___fladd@signs 0062              ___fladd@aexp 0063  
            ___fladd@bexp 0064      __Umul8_16@multiplier 0078         __Umul8_16@product 0074  
